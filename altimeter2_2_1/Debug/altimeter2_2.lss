
altimeter2_2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000078  00800100  000029fa  00002aae  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000029fa  00000000  00000000  000000b4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000000c5  00800178  00800178  00002b26  2**0
                  ALLOC
  3 .eeprom       00000004  00810000  00810000  00002b26  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  4 .comment      0000005c  00000000  00000000  00002b2a  2**0
                  CONTENTS, READONLY
  5 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00002b88  2**2
                  CONTENTS, READONLY
  6 .debug_aranges 00000210  00000000  00000000  00002bc8  2**3
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   0000271c  00000000  00000000  00002dd8  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00000bb3  00000000  00000000  000054f4  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   00001838  00000000  00000000  000060a7  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00000514  00000000  00000000  000078e0  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    0000094a  00000000  00000000  00007df4  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    00001a41  00000000  00000000  0000873e  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 000001b8  00000000  00000000  0000a17f  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 e1 00 	jmp	0x1c2	; 0x1c2 <__ctors_end>
       4:	0c 94 fe 00 	jmp	0x1fc	; 0x1fc <__bad_interrupt>
       8:	0c 94 fe 00 	jmp	0x1fc	; 0x1fc <__bad_interrupt>
       c:	0c 94 fe 00 	jmp	0x1fc	; 0x1fc <__bad_interrupt>
      10:	0c 94 fe 00 	jmp	0x1fc	; 0x1fc <__bad_interrupt>
      14:	0c 94 fe 00 	jmp	0x1fc	; 0x1fc <__bad_interrupt>
      18:	0c 94 fe 00 	jmp	0x1fc	; 0x1fc <__bad_interrupt>
      1c:	0c 94 fe 00 	jmp	0x1fc	; 0x1fc <__bad_interrupt>
      20:	0c 94 fe 00 	jmp	0x1fc	; 0x1fc <__bad_interrupt>
      24:	0c 94 fe 00 	jmp	0x1fc	; 0x1fc <__bad_interrupt>
      28:	0c 94 fe 00 	jmp	0x1fc	; 0x1fc <__bad_interrupt>
      2c:	0c 94 90 03 	jmp	0x720	; 0x720 <__vector_11>
      30:	0c 94 fe 00 	jmp	0x1fc	; 0x1fc <__bad_interrupt>
      34:	0c 94 fe 00 	jmp	0x1fc	; 0x1fc <__bad_interrupt>
      38:	0c 94 fe 00 	jmp	0x1fc	; 0x1fc <__bad_interrupt>
      3c:	0c 94 15 03 	jmp	0x62a	; 0x62a <__vector_15>
      40:	0c 94 fe 00 	jmp	0x1fc	; 0x1fc <__bad_interrupt>
      44:	0c 94 fe 00 	jmp	0x1fc	; 0x1fc <__bad_interrupt>
      48:	0c 94 e6 02 	jmp	0x5cc	; 0x5cc <__vector_18>
      4c:	0c 94 fe 00 	jmp	0x1fc	; 0x1fc <__bad_interrupt>
      50:	0c 94 e1 03 	jmp	0x7c2	; 0x7c2 <__vector_20>
      54:	0c 94 fe 00 	jmp	0x1fc	; 0x1fc <__bad_interrupt>
      58:	0c 94 fe 00 	jmp	0x1fc	; 0x1fc <__bad_interrupt>
      5c:	0c 94 fe 00 	jmp	0x1fc	; 0x1fc <__bad_interrupt>
      60:	0c 94 fe 00 	jmp	0x1fc	; 0x1fc <__bad_interrupt>
      64:	0c 94 fe 00 	jmp	0x1fc	; 0x1fc <__bad_interrupt>
      68:	0c 94 0d 04 	jmp	0x81a	; 0x81a <__vector_26>
      6c:	0c 94 fe 00 	jmp	0x1fc	; 0x1fc <__bad_interrupt>
      70:	0c 94 fe 00 	jmp	0x1fc	; 0x1fc <__bad_interrupt>
      74:	0c 94 fe 00 	jmp	0x1fc	; 0x1fc <__bad_interrupt>
      78:	0c 94 fe 00 	jmp	0x1fc	; 0x1fc <__bad_interrupt>
      7c:	aa 01       	movw	r20, r20
      7e:	ae 01       	movw	r20, r28
      80:	b2 01       	movw	r22, r4
      82:	b6 01       	movw	r22, r12
      84:	ba 01       	movw	r22, r20
      86:	be 01       	movw	r22, r28
      88:	c2 01       	movw	r24, r4
      8a:	c6 01       	movw	r24, r12
      8c:	ca 01       	movw	r24, r20
      8e:	ce 01       	movw	r24, r28
      90:	a8 01       	movw	r20, r16
      92:	92 0c       	add	r9, r2
      94:	e1 0c       	add	r14, r1
      96:	e1 0c       	add	r14, r1
      98:	e1 0c       	add	r14, r1
      9a:	e1 0c       	add	r14, r1
      9c:	e1 0c       	add	r14, r1
      9e:	e1 0c       	add	r14, r1
      a0:	e1 0c       	add	r14, r1
      a2:	92 0c       	add	r9, r2
      a4:	e1 0c       	add	r14, r1
      a6:	e1 0c       	add	r14, r1
      a8:	e1 0c       	add	r14, r1
      aa:	e1 0c       	add	r14, r1
      ac:	e1 0c       	add	r14, r1
      ae:	e1 0c       	add	r14, r1
      b0:	e1 0c       	add	r14, r1
      b2:	94 0c       	add	r9, r4
      b4:	e1 0c       	add	r14, r1
      b6:	e1 0c       	add	r14, r1
      b8:	e1 0c       	add	r14, r1
      ba:	e1 0c       	add	r14, r1
      bc:	e1 0c       	add	r14, r1
      be:	e1 0c       	add	r14, r1
      c0:	e1 0c       	add	r14, r1
      c2:	e1 0c       	add	r14, r1
      c4:	e1 0c       	add	r14, r1
      c6:	e1 0c       	add	r14, r1
      c8:	e1 0c       	add	r14, r1
      ca:	e1 0c       	add	r14, r1
      cc:	e1 0c       	add	r14, r1
      ce:	e1 0c       	add	r14, r1
      d0:	e1 0c       	add	r14, r1
      d2:	94 0c       	add	r9, r4
      d4:	e1 0c       	add	r14, r1
      d6:	e1 0c       	add	r14, r1
      d8:	e1 0c       	add	r14, r1
      da:	e1 0c       	add	r14, r1
      dc:	e1 0c       	add	r14, r1
      de:	e1 0c       	add	r14, r1
      e0:	e1 0c       	add	r14, r1
      e2:	e1 0c       	add	r14, r1
      e4:	e1 0c       	add	r14, r1
      e6:	e1 0c       	add	r14, r1
      e8:	e1 0c       	add	r14, r1
      ea:	e1 0c       	add	r14, r1
      ec:	e1 0c       	add	r14, r1
      ee:	e1 0c       	add	r14, r1
      f0:	e1 0c       	add	r14, r1
      f2:	dd 0c       	add	r13, r13
      f4:	e1 0c       	add	r14, r1
      f6:	e1 0c       	add	r14, r1
      f8:	e1 0c       	add	r14, r1
      fa:	e1 0c       	add	r14, r1
      fc:	e1 0c       	add	r14, r1
      fe:	e1 0c       	add	r14, r1
     100:	e1 0c       	add	r14, r1
     102:	bc 0c       	add	r11, r12
     104:	e1 0c       	add	r14, r1
     106:	e1 0c       	add	r14, r1
     108:	e1 0c       	add	r14, r1
     10a:	e1 0c       	add	r14, r1
     10c:	e1 0c       	add	r14, r1
     10e:	e1 0c       	add	r14, r1
     110:	e1 0c       	add	r14, r1
     112:	e1 0c       	add	r14, r1
     114:	e1 0c       	add	r14, r1
     116:	e1 0c       	add	r14, r1
     118:	e1 0c       	add	r14, r1
     11a:	e1 0c       	add	r14, r1
     11c:	e1 0c       	add	r14, r1
     11e:	e1 0c       	add	r14, r1
     120:	e1 0c       	add	r14, r1
     122:	b0 0c       	add	r11, r0
     124:	e1 0c       	add	r14, r1
     126:	e1 0c       	add	r14, r1
     128:	e1 0c       	add	r14, r1
     12a:	e1 0c       	add	r14, r1
     12c:	e1 0c       	add	r14, r1
     12e:	e1 0c       	add	r14, r1
     130:	e1 0c       	add	r14, r1
     132:	ce 0c       	add	r12, r14
     134:	07 63       	ori	r16, 0x37	; 55
     136:	42 36       	cpi	r20, 0x62	; 98
     138:	b7 9b       	sbis	0x16, 7	; 22
     13a:	d8 a7       	std	Y+40, r29	; 0x28
     13c:	1a 39       	cpi	r17, 0x9A	; 154
     13e:	68 56       	subi	r22, 0x68	; 104
     140:	18 ae       	std	Y+56, r1	; 0x38
     142:	ba ab       	std	Y+50, r27	; 0x32
     144:	55 8c       	ldd	r5, Z+29	; 0x1d
     146:	1d 3c       	cpi	r17, 0xCD	; 205
     148:	b7 cc       	rjmp	.-1682   	; 0xfffffab8 <__eeprom_end+0xff7efab4>
     14a:	57 63       	ori	r21, 0x37	; 55
     14c:	bd 6d       	ori	r27, 0xDD	; 221
     14e:	ed fd       	.word	0xfded	; ????
     150:	75 3e       	cpi	r23, 0xE5	; 229
     152:	f6 17       	cp	r31, r22
     154:	72 31       	cpi	r23, 0x12	; 18
     156:	bf 00       	.word	0x00bf	; ????
     158:	00 00       	nop
     15a:	80 3f       	cpi	r24, 0xF0	; 240
     15c:	08 00       	.word	0x0008	; ????
     15e:	00 00       	nop
     160:	be 92       	st	-X, r11
     162:	24 49       	sbci	r18, 0x94	; 148
     164:	12 3e       	cpi	r17, 0xE2	; 226
     166:	ab aa       	std	Y+51, r10	; 0x33
     168:	aa 2a       	or	r10, r26
     16a:	be cd       	rjmp	.-1156   	; 0xfffffce8 <__eeprom_end+0xff7efce4>
     16c:	cc cc       	rjmp	.-1640   	; 0xfffffb06 <__eeprom_end+0xff7efb02>
     16e:	4c 3e       	cpi	r20, 0xEC	; 236
     170:	00 00       	nop
     172:	00 80       	ld	r0, Z
     174:	be ab       	std	Y+54, r27	; 0x36
     176:	aa aa       	std	Y+50, r10	; 0x32
     178:	aa 3e       	cpi	r26, 0xEA	; 234
     17a:	00 00       	nop
     17c:	00 00       	nop
     17e:	bf 00       	.word	0x00bf	; ????
     180:	00 00       	nop
     182:	80 3f       	cpi	r24, 0xF0	; 240
     184:	00 00       	nop
     186:	00 00       	nop
     188:	00 08       	sbc	r0, r0
     18a:	41 78       	andi	r20, 0x81	; 129
     18c:	d3 bb       	out	0x13, r29	; 19
     18e:	43 87       	std	Z+11, r20	; 0x0b
     190:	d1 13       	cpse	r29, r17
     192:	3d 19       	sub	r19, r13
     194:	0e 3c       	cpi	r16, 0xCE	; 206
     196:	c3 bd       	out	0x23, r28	; 35
     198:	42 82       	std	Z+2, r4	; 0x02
     19a:	ad 2b       	or	r26, r29
     19c:	3e 68       	ori	r19, 0x8E	; 142
     19e:	ec 82       	std	Y+4, r14	; 0x04
     1a0:	76 be       	out	0x36, r7	; 54
     1a2:	d9 8f       	std	Y+25, r29	; 0x19
     1a4:	e1 a9       	ldd	r30, Z+49	; 0x31
     1a6:	3e 4c       	sbci	r19, 0xCE	; 206
     1a8:	80 ef       	ldi	r24, 0xF0	; 240
     1aa:	ff be       	out	0x3f, r15	; 63
     1ac:	01 c4       	rjmp	.+2050   	; 0x9b0 <select_minus>
     1ae:	ff 7f       	andi	r31, 0xFF	; 255
     1b0:	3f 00       	.word	0x003f	; ????
     1b2:	00 00       	nop
	...

000001b6 <__trampolines_end>:
     1b6:	63 64       	ori	r22, 0x43	; 67
     1b8:	69 6e       	ori	r22, 0xE9	; 233
     1ba:	6f 70       	andi	r22, 0x0F	; 15
     1bc:	73 75       	andi	r23, 0x53	; 83
     1be:	78 58       	subi	r23, 0x88	; 136
     1c0:	5b 00       	.word	0x005b	; ????

000001c2 <__ctors_end>:
     1c2:	11 24       	eor	r1, r1
     1c4:	1f be       	out	0x3f, r1	; 63
     1c6:	cf ef       	ldi	r28, 0xFF	; 255
     1c8:	d8 e0       	ldi	r29, 0x08	; 8
     1ca:	de bf       	out	0x3e, r29	; 62
     1cc:	cd bf       	out	0x3d, r28	; 61

000001ce <__do_copy_data>:
     1ce:	11 e0       	ldi	r17, 0x01	; 1
     1d0:	a0 e0       	ldi	r26, 0x00	; 0
     1d2:	b1 e0       	ldi	r27, 0x01	; 1
     1d4:	ea ef       	ldi	r30, 0xFA	; 250
     1d6:	f9 e2       	ldi	r31, 0x29	; 41
     1d8:	02 c0       	rjmp	.+4      	; 0x1de <__do_copy_data+0x10>
     1da:	05 90       	lpm	r0, Z+
     1dc:	0d 92       	st	X+, r0
     1de:	a8 37       	cpi	r26, 0x78	; 120
     1e0:	b1 07       	cpc	r27, r17
     1e2:	d9 f7       	brne	.-10     	; 0x1da <__do_copy_data+0xc>

000001e4 <__do_clear_bss>:
     1e4:	22 e0       	ldi	r18, 0x02	; 2
     1e6:	a8 e7       	ldi	r26, 0x78	; 120
     1e8:	b1 e0       	ldi	r27, 0x01	; 1
     1ea:	01 c0       	rjmp	.+2      	; 0x1ee <.do_clear_bss_start>

000001ec <.do_clear_bss_loop>:
     1ec:	1d 92       	st	X+, r1

000001ee <.do_clear_bss_start>:
     1ee:	ad 33       	cpi	r26, 0x3D	; 61
     1f0:	b2 07       	cpc	r27, r18
     1f2:	e1 f7       	brne	.-8      	; 0x1ec <.do_clear_bss_loop>
     1f4:	0e 94 f9 07 	call	0xff2	; 0xff2 <main>
     1f8:	0c 94 fb 14 	jmp	0x29f6	; 0x29f6 <_exit>

000001fc <__bad_interrupt>:
     1fc:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000200 <LoadEeprom>:
	float dLon = radians(Lon - prev_Lon);
	float a = sin(dLat / 2.0f) * sin(dLat / 2.0f) +	cos(radians(prev_Lat)) * cos(radians(Lat)) * sin(dLon / 2.0f) * sin(dLon / 2.0f);
	
	float d = 2.0f * atan2(sqrt(a), sqrt(1.0f - a));
	return d * EARTH_RADIUS_METERS;
}
     200:	82 e0       	ldi	r24, 0x02	; 2
     202:	90 e0       	ldi	r25, 0x00	; 0
     204:	0e 94 9b 14 	call	0x2936	; 0x2936 <eeprom_read_word>
     208:	90 93 1f 02 	sts	0x021F, r25	; 0x80021f <Fr10_Pulse+0x1>
     20c:	80 93 1e 02 	sts	0x021E, r24	; 0x80021e <Fr10_Pulse>
     210:	8f e1       	ldi	r24, 0x1F	; 31
     212:	9e e4       	ldi	r25, 0x4E	; 78
     214:	01 97       	sbiw	r24, 0x01	; 1
     216:	f1 f7       	brne	.-4      	; 0x214 <LoadEeprom+0x14>
     218:	00 c0       	rjmp	.+0      	; 0x21a <LoadEeprom+0x1a>
     21a:	00 00       	nop
     21c:	80 91 1e 02 	lds	r24, 0x021E	; 0x80021e <Fr10_Pulse>
     220:	90 91 1f 02 	lds	r25, 0x021F	; 0x80021f <Fr10_Pulse+0x1>
     224:	01 97       	sbiw	r24, 0x01	; 1
     226:	8f 3f       	cpi	r24, 0xFF	; 255
     228:	91 05       	cpc	r25, r1
     22a:	90 f0       	brcs	.+36     	; 0x250 <LoadEeprom+0x50>
     22c:	81 e4       	ldi	r24, 0x41	; 65
     22e:	90 e0       	ldi	r25, 0x00	; 0
     230:	90 93 1f 02 	sts	0x021F, r25	; 0x80021f <Fr10_Pulse+0x1>
     234:	80 93 1e 02 	sts	0x021E, r24	; 0x80021e <Fr10_Pulse>
     238:	61 e4       	ldi	r22, 0x41	; 65
     23a:	70 e0       	ldi	r23, 0x00	; 0
     23c:	82 e0       	ldi	r24, 0x02	; 2
     23e:	90 e0       	ldi	r25, 0x00	; 0
     240:	0e 94 a1 14 	call	0x2942	; 0x2942 <eeprom_write_word>
     244:	8f e1       	ldi	r24, 0x1F	; 31
     246:	9e e4       	ldi	r25, 0x4E	; 78
     248:	01 97       	sbiw	r24, 0x01	; 1
     24a:	f1 f7       	brne	.-4      	; 0x248 <LoadEeprom+0x48>
     24c:	00 c0       	rjmp	.+0      	; 0x24e <LoadEeprom+0x4e>
     24e:	00 00       	nop
     250:	80 e0       	ldi	r24, 0x00	; 0
     252:	90 e0       	ldi	r25, 0x00	; 0
     254:	0e 94 9b 14 	call	0x2936	; 0x2936 <eeprom_read_word>
     258:	90 93 f8 01 	sts	0x01F8, r25	; 0x8001f8 <dc_Pulse+0x1>
     25c:	80 93 f7 01 	sts	0x01F7, r24	; 0x8001f7 <dc_Pulse>
     260:	8f e1       	ldi	r24, 0x1F	; 31
     262:	9e e4       	ldi	r25, 0x4E	; 78
     264:	01 97       	sbiw	r24, 0x01	; 1
     266:	f1 f7       	brne	.-4      	; 0x264 <LoadEeprom+0x64>
     268:	00 c0       	rjmp	.+0      	; 0x26a <LoadEeprom+0x6a>
     26a:	00 00       	nop
     26c:	80 91 f7 01 	lds	r24, 0x01F7	; 0x8001f7 <dc_Pulse>
     270:	90 91 f8 01 	lds	r25, 0x01F8	; 0x8001f8 <dc_Pulse+0x1>
     274:	01 97       	sbiw	r24, 0x01	; 1
     276:	83 36       	cpi	r24, 0x63	; 99
     278:	91 05       	cpc	r25, r1
     27a:	90 f0       	brcs	.+36     	; 0x2a0 <LoadEeprom+0xa0>
     27c:	8e e1       	ldi	r24, 0x1E	; 30
     27e:	90 e0       	ldi	r25, 0x00	; 0
     280:	90 93 f8 01 	sts	0x01F8, r25	; 0x8001f8 <dc_Pulse+0x1>
     284:	80 93 f7 01 	sts	0x01F7, r24	; 0x8001f7 <dc_Pulse>
     288:	6e e1       	ldi	r22, 0x1E	; 30
     28a:	70 e0       	ldi	r23, 0x00	; 0
     28c:	80 e0       	ldi	r24, 0x00	; 0
     28e:	90 e0       	ldi	r25, 0x00	; 0
     290:	0e 94 a1 14 	call	0x2942	; 0x2942 <eeprom_write_word>
     294:	8f e1       	ldi	r24, 0x1F	; 31
     296:	9e e4       	ldi	r25, 0x4E	; 78
     298:	01 97       	sbiw	r24, 0x01	; 1
     29a:	f1 f7       	brne	.-4      	; 0x298 <LoadEeprom+0x98>
     29c:	00 c0       	rjmp	.+0      	; 0x29e <LoadEeprom+0x9e>
     29e:	00 00       	nop
     2a0:	08 95       	ret

000002a2 <WriteEeprom>:
     2a2:	60 91 1e 02 	lds	r22, 0x021E	; 0x80021e <Fr10_Pulse>
     2a6:	70 91 1f 02 	lds	r23, 0x021F	; 0x80021f <Fr10_Pulse+0x1>
     2aa:	82 e0       	ldi	r24, 0x02	; 2
     2ac:	90 e0       	ldi	r25, 0x00	; 0
     2ae:	0e 94 a1 14 	call	0x2942	; 0x2942 <eeprom_write_word>
     2b2:	8f e1       	ldi	r24, 0x1F	; 31
     2b4:	9e e4       	ldi	r25, 0x4E	; 78
     2b6:	01 97       	sbiw	r24, 0x01	; 1
     2b8:	f1 f7       	brne	.-4      	; 0x2b6 <WriteEeprom+0x14>
     2ba:	00 c0       	rjmp	.+0      	; 0x2bc <WriteEeprom+0x1a>
     2bc:	00 00       	nop
     2be:	60 91 f7 01 	lds	r22, 0x01F7	; 0x8001f7 <dc_Pulse>
     2c2:	70 91 f8 01 	lds	r23, 0x01F8	; 0x8001f8 <dc_Pulse+0x1>
     2c6:	80 e0       	ldi	r24, 0x00	; 0
     2c8:	90 e0       	ldi	r25, 0x00	; 0
     2ca:	0e 94 a1 14 	call	0x2942	; 0x2942 <eeprom_write_word>
     2ce:	8f e1       	ldi	r24, 0x1F	; 31
     2d0:	9e e4       	ldi	r25, 0x4E	; 78
     2d2:	01 97       	sbiw	r24, 0x01	; 1
     2d4:	f1 f7       	brne	.-4      	; 0x2d2 <WriteEeprom+0x30>
     2d6:	00 c0       	rjmp	.+0      	; 0x2d8 <WriteEeprom+0x36>
     2d8:	00 00       	nop
     2da:	08 95       	ret

000002dc <setled>:
     2dc:	83 30       	cpi	r24, 0x03	; 3
     2de:	a9 f0       	breq	.+42     	; 0x30a <setled+0x2e>
     2e0:	28 f4       	brcc	.+10     	; 0x2ec <setled+0x10>
     2e2:	81 30       	cpi	r24, 0x01	; 1
     2e4:	41 f0       	breq	.+16     	; 0x2f6 <setled+0x1a>
     2e6:	82 30       	cpi	r24, 0x02	; 2
     2e8:	59 f0       	breq	.+22     	; 0x300 <setled+0x24>
     2ea:	20 c0       	rjmp	.+64     	; 0x32c <setled+0x50>
     2ec:	84 30       	cpi	r24, 0x04	; 4
     2ee:	91 f0       	breq	.+36     	; 0x314 <setled+0x38>
     2f0:	85 30       	cpi	r24, 0x05	; 5
     2f2:	a9 f0       	breq	.+42     	; 0x31e <setled+0x42>
     2f4:	1b c0       	rjmp	.+54     	; 0x32c <setled+0x50>
     2f6:	88 b1       	in	r24, 0x08	; 8
     2f8:	87 7c       	andi	r24, 0xC7	; 199
     2fa:	88 b9       	out	0x08, r24	; 8
     2fc:	46 9a       	sbi	0x08, 6	; 8
     2fe:	08 95       	ret
     300:	88 b1       	in	r24, 0x08	; 8
     302:	87 7a       	andi	r24, 0xA7	; 167
     304:	88 b9       	out	0x08, r24	; 8
     306:	45 9a       	sbi	0x08, 5	; 8
     308:	08 95       	ret
     30a:	88 b1       	in	r24, 0x08	; 8
     30c:	87 79       	andi	r24, 0x97	; 151
     30e:	88 b9       	out	0x08, r24	; 8
     310:	44 9a       	sbi	0x08, 4	; 8
     312:	08 95       	ret
     314:	88 b1       	in	r24, 0x08	; 8
     316:	8f 78       	andi	r24, 0x8F	; 143
     318:	88 b9       	out	0x08, r24	; 8
     31a:	43 9a       	sbi	0x08, 3	; 8
     31c:	08 95       	ret
     31e:	88 b1       	in	r24, 0x08	; 8
     320:	87 7b       	andi	r24, 0xB7	; 183
     322:	88 b9       	out	0x08, r24	; 8
     324:	88 b1       	in	r24, 0x08	; 8
     326:	80 63       	ori	r24, 0x30	; 48
     328:	88 b9       	out	0x08, r24	; 8
     32a:	08 95       	ret
     32c:	88 b1       	in	r24, 0x08	; 8
     32e:	88 67       	ori	r24, 0x78	; 120
     330:	88 b9       	out	0x08, r24	; 8
     332:	08 95       	ret

00000334 <setseg>:
     334:	e8 2f       	mov	r30, r24
     336:	82 b1       	in	r24, 0x02	; 2
     338:	84 70       	andi	r24, 0x04	; 4
     33a:	82 b9       	out	0x02, r24	; 2
     33c:	8e 2f       	mov	r24, r30
     33e:	90 e0       	ldi	r25, 0x00	; 0
     340:	8b 30       	cpi	r24, 0x0B	; 11
     342:	91 05       	cpc	r25, r1
     344:	70 f5       	brcc	.+92     	; 0x3a2 <setseg+0x6e>
     346:	fc 01       	movw	r30, r24
     348:	e2 5c       	subi	r30, 0xC2	; 194
     34a:	ff 4f       	sbci	r31, 0xFF	; 255
     34c:	0c 94 2c 11 	jmp	0x2258	; 0x2258 <__tablejump2__>
     350:	14 9a       	sbi	0x02, 4	; 2
     352:	08 95       	ret
     354:	82 b1       	in	r24, 0x02	; 2
     356:	8b 6e       	ori	r24, 0xEB	; 235
     358:	82 b9       	out	0x02, r24	; 2
     35a:	08 95       	ret
     35c:	82 b1       	in	r24, 0x02	; 2
     35e:	88 62       	ori	r24, 0x28	; 40
     360:	82 b9       	out	0x02, r24	; 2
     362:	08 95       	ret
     364:	82 b1       	in	r24, 0x02	; 2
     366:	83 6b       	ori	r24, 0xB3	; 179
     368:	82 b9       	out	0x02, r24	; 2
     36a:	08 95       	ret
     36c:	82 b1       	in	r24, 0x02	; 2
     36e:	8a 6b       	ori	r24, 0xBA	; 186
     370:	82 b9       	out	0x02, r24	; 2
     372:	08 95       	ret
     374:	82 b1       	in	r24, 0x02	; 2
     376:	88 67       	ori	r24, 0x78	; 120
     378:	82 b9       	out	0x02, r24	; 2
     37a:	08 95       	ret
     37c:	82 b1       	in	r24, 0x02	; 2
     37e:	8a 6d       	ori	r24, 0xDA	; 218
     380:	82 b9       	out	0x02, r24	; 2
     382:	08 95       	ret
     384:	82 b1       	in	r24, 0x02	; 2
     386:	8b 6d       	ori	r24, 0xDB	; 219
     388:	82 b9       	out	0x02, r24	; 2
     38a:	08 95       	ret
     38c:	82 b1       	in	r24, 0x02	; 2
     38e:	88 6a       	ori	r24, 0xA8	; 168
     390:	82 b9       	out	0x02, r24	; 2
     392:	08 95       	ret
     394:	82 b1       	in	r24, 0x02	; 2
     396:	8b 6f       	ori	r24, 0xFB	; 251
     398:	82 b9       	out	0x02, r24	; 2
     39a:	08 95       	ret
     39c:	82 b1       	in	r24, 0x02	; 2
     39e:	8a 6f       	ori	r24, 0xFA	; 250
     3a0:	82 b9       	out	0x02, r24	; 2
     3a2:	08 95       	ret

000003a4 <selectseg>:
     3a4:	95 b1       	in	r25, 0x05	; 5
     3a6:	9f 60       	ori	r25, 0x0F	; 15
     3a8:	95 b9       	out	0x05, r25	; 5
     3aa:	82 30       	cpi	r24, 0x02	; 2
     3ac:	59 f0       	breq	.+22     	; 0x3c4 <selectseg+0x20>
     3ae:	18 f4       	brcc	.+6      	; 0x3b6 <selectseg+0x12>
     3b0:	81 30       	cpi	r24, 0x01	; 1
     3b2:	31 f0       	breq	.+12     	; 0x3c0 <selectseg+0x1c>
     3b4:	08 95       	ret
     3b6:	83 30       	cpi	r24, 0x03	; 3
     3b8:	39 f0       	breq	.+14     	; 0x3c8 <selectseg+0x24>
     3ba:	84 30       	cpi	r24, 0x04	; 4
     3bc:	39 f0       	breq	.+14     	; 0x3cc <selectseg+0x28>
     3be:	08 95       	ret
     3c0:	28 98       	cbi	0x05, 0	; 5
     3c2:	08 95       	ret
     3c4:	29 98       	cbi	0x05, 1	; 5
     3c6:	08 95       	ret
     3c8:	2a 98       	cbi	0x05, 2	; 5
     3ca:	08 95       	ret
     3cc:	2b 98       	cbi	0x05, 3	; 5
     3ce:	08 95       	ret

000003d0 <Parser>:
     3d0:	84 32       	cpi	r24, 0x24	; 36
     3d2:	61 f4       	brne	.+24     	; 0x3ec <Parser+0x1c>
     3d4:	10 92 03 01 	sts	0x0103, r1	; 0x800103 <ByteCount.2256>
     3d8:	8f ef       	ldi	r24, 0xFF	; 255
     3da:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <ComaPoint.2259>
     3de:	8b e7       	ldi	r24, 0x7B	; 123
     3e0:	91 e0       	ldi	r25, 0x01	; 1
     3e2:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__data_start+0x1>
     3e6:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
     3ea:	08 95       	ret
     3ec:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <ByteCount.2256>
     3f0:	9f 3f       	cpi	r25, 0xFF	; 255
     3f2:	09 f4       	brne	.+2      	; 0x3f6 <Parser+0x26>
     3f4:	ea c0       	rjmp	.+468    	; 0x5ca <__LOCK_REGION_LENGTH__+0x1ca>
     3f6:	21 e0       	ldi	r18, 0x01	; 1
     3f8:	29 0f       	add	r18, r25
     3fa:	20 93 03 01 	sts	0x0103, r18	; 0x800103 <ByteCount.2256>
     3fe:	22 30       	cpi	r18, 0x02	; 2
     400:	18 f4       	brcc	.+6      	; 0x408 <__LOCK_REGION_LENGTH__+0x8>
     402:	80 93 7a 01 	sts	0x017A, r24	; 0x80017a <Checksumcalc.2262>
     406:	08 95       	ret
     408:	8a 32       	cpi	r24, 0x2A	; 42
     40a:	71 f4       	brne	.+28     	; 0x428 <__LOCK_REGION_LENGTH__+0x28>
     40c:	10 92 7b 01 	sts	0x017B, r1	; 0x80017b <MsgType.2257>
     410:	10 92 7c 01 	sts	0x017C, r1	; 0x80017c <MsgType.2257+0x1>
     414:	10 92 7d 01 	sts	0x017D, r1	; 0x80017d <MsgType.2257+0x2>
     418:	10 92 7e 01 	sts	0x017E, r1	; 0x80017e <MsgType.2257+0x3>
     41c:	81 e0       	ldi	r24, 0x01	; 1
     41e:	80 93 79 01 	sts	0x0179, r24	; 0x800179 <Checksum_en.2261>
     422:	10 92 78 01 	sts	0x0178, r1	; 0x800178 <__data_end>
     426:	08 95       	ret
     428:	20 91 79 01 	lds	r18, 0x0179	; 0x800179 <Checksum_en.2261>
     42c:	21 11       	cpse	r18, r1
     42e:	c8 c0       	rjmp	.+400    	; 0x5c0 <__LOCK_REGION_LENGTH__+0x1c0>
     430:	20 91 7a 01 	lds	r18, 0x017A	; 0x80017a <Checksumcalc.2262>
     434:	28 27       	eor	r18, r24
     436:	20 93 7a 01 	sts	0x017A, r18	; 0x80017a <Checksumcalc.2262>
     43a:	91 50       	subi	r25, 0x01	; 1
     43c:	94 30       	cpi	r25, 0x04	; 4
     43e:	d8 f4       	brcc	.+54     	; 0x476 <__LOCK_REGION_LENGTH__+0x76>
     440:	e0 91 00 01 	lds	r30, 0x0100	; 0x800100 <__data_start>
     444:	f0 91 01 01 	lds	r31, 0x0101	; 0x800101 <__data_start+0x1>
     448:	81 93       	st	Z+, r24
     44a:	f0 93 01 01 	sts	0x0101, r31	; 0x800101 <__data_start+0x1>
     44e:	e0 93 00 01 	sts	0x0100, r30	; 0x800100 <__data_start>
     452:	08 95       	ret
     454:	90 91 78 01 	lds	r25, 0x0178	; 0x800178 <__data_end>
     458:	e9 2f       	mov	r30, r25
     45a:	f0 e0       	ldi	r31, 0x00	; 0
     45c:	ef 57       	subi	r30, 0x7F	; 127
     45e:	fe 4f       	sbci	r31, 0xFE	; 254
     460:	80 83       	st	Z, r24
     462:	81 e0       	ldi	r24, 0x01	; 1
     464:	89 0f       	add	r24, r25
     466:	80 93 78 01 	sts	0x0178, r24	; 0x800178 <__data_end>
     46a:	82 30       	cpi	r24, 0x02	; 2
     46c:	08 f4       	brcc	.+2      	; 0x470 <__LOCK_REGION_LENGTH__+0x70>
     46e:	ad c0       	rjmp	.+346    	; 0x5ca <__LOCK_REGION_LENGTH__+0x1ca>
     470:	10 92 79 01 	sts	0x0179, r1	; 0x800179 <Checksum_en.2261>
     474:	08 95       	ret
     476:	40 91 7b 01 	lds	r20, 0x017B	; 0x80017b <MsgType.2257>
     47a:	50 91 7c 01 	lds	r21, 0x017C	; 0x80017c <MsgType.2257+0x1>
     47e:	60 91 7d 01 	lds	r22, 0x017D	; 0x80017d <MsgType.2257+0x2>
     482:	70 91 7e 01 	lds	r23, 0x017E	; 0x80017e <MsgType.2257+0x3>
     486:	4e 34       	cpi	r20, 0x4E	; 78
     488:	92 e5       	ldi	r25, 0x52	; 82
     48a:	59 07       	cpc	r21, r25
     48c:	9d e4       	ldi	r25, 0x4D	; 77
     48e:	69 07       	cpc	r22, r25
     490:	93 e4       	ldi	r25, 0x43	; 67
     492:	79 07       	cpc	r23, r25
     494:	81 f0       	breq	.+32     	; 0x4b6 <__LOCK_REGION_LENGTH__+0xb6>
     496:	40 35       	cpi	r20, 0x50	; 80
     498:	97 e4       	ldi	r25, 0x47	; 71
     49a:	59 07       	cpc	r21, r25
     49c:	93 e5       	ldi	r25, 0x53	; 83
     49e:	69 07       	cpc	r22, r25
     4a0:	96 e5       	ldi	r25, 0x56	; 86
     4a2:	79 07       	cpc	r23, r25
     4a4:	09 f4       	brne	.+2      	; 0x4a8 <__LOCK_REGION_LENGTH__+0xa8>
     4a6:	5d c0       	rjmp	.+186    	; 0x562 <__LOCK_REGION_LENGTH__+0x162>
     4a8:	4e 34       	cpi	r20, 0x4E	; 78
     4aa:	57 44       	sbci	r21, 0x47	; 71
     4ac:	67 44       	sbci	r22, 0x47	; 71
     4ae:	71 44       	sbci	r23, 0x41	; 65
     4b0:	09 f0       	breq	.+2      	; 0x4b4 <__LOCK_REGION_LENGTH__+0xb4>
     4b2:	82 c0       	rjmp	.+260    	; 0x5b8 <__LOCK_REGION_LENGTH__+0x1b8>
     4b4:	2b c0       	rjmp	.+86     	; 0x50c <__LOCK_REGION_LENGTH__+0x10c>
     4b6:	8c 32       	cpi	r24, 0x2C	; 44
     4b8:	89 f4       	brne	.+34     	; 0x4dc <__LOCK_REGION_LENGTH__+0xdc>
     4ba:	e0 91 02 01 	lds	r30, 0x0102	; 0x800102 <ComaPoint.2259>
     4be:	ef 5f       	subi	r30, 0xFF	; 255
     4c0:	e0 93 02 01 	sts	0x0102, r30	; 0x800102 <ComaPoint.2259>
     4c4:	10 92 78 01 	sts	0x0178, r1	; 0x800178 <__data_end>
     4c8:	f0 e0       	ldi	r31, 0x00	; 0
     4ca:	ee 0f       	add	r30, r30
     4cc:	ff 1f       	adc	r31, r31
     4ce:	e5 5a       	subi	r30, 0xA5	; 165
     4d0:	fe 4f       	sbci	r31, 0xFE	; 254
     4d2:	01 90       	ld	r0, Z+
     4d4:	f0 81       	ld	r31, Z
     4d6:	e0 2d       	mov	r30, r0
     4d8:	10 82       	st	Z, r1
     4da:	08 95       	ret
     4dc:	e0 91 02 01 	lds	r30, 0x0102	; 0x800102 <ComaPoint.2259>
     4e0:	f0 e0       	ldi	r31, 0x00	; 0
     4e2:	ee 0f       	add	r30, r30
     4e4:	ff 1f       	adc	r31, r31
     4e6:	e5 5a       	subi	r30, 0xA5	; 165
     4e8:	fe 4f       	sbci	r31, 0xFE	; 254
     4ea:	20 81       	ld	r18, Z
     4ec:	31 81       	ldd	r19, Z+1	; 0x01
     4ee:	40 91 78 01 	lds	r20, 0x0178	; 0x800178 <__data_end>
     4f2:	91 e0       	ldi	r25, 0x01	; 1
     4f4:	94 0f       	add	r25, r20
     4f6:	90 93 78 01 	sts	0x0178, r25	; 0x800178 <__data_end>
     4fa:	f9 01       	movw	r30, r18
     4fc:	e4 0f       	add	r30, r20
     4fe:	f1 1d       	adc	r31, r1
     500:	80 83       	st	Z, r24
     502:	f9 01       	movw	r30, r18
     504:	e9 0f       	add	r30, r25
     506:	f1 1d       	adc	r31, r1
     508:	10 82       	st	Z, r1
     50a:	08 95       	ret
     50c:	8c 32       	cpi	r24, 0x2C	; 44
     50e:	89 f4       	brne	.+34     	; 0x532 <__LOCK_REGION_LENGTH__+0x132>
     510:	e0 91 02 01 	lds	r30, 0x0102	; 0x800102 <ComaPoint.2259>
     514:	ef 5f       	subi	r30, 0xFF	; 255
     516:	e0 93 02 01 	sts	0x0102, r30	; 0x800102 <ComaPoint.2259>
     51a:	10 92 78 01 	sts	0x0178, r1	; 0x800178 <__data_end>
     51e:	f0 e0       	ldi	r31, 0x00	; 0
     520:	ee 0f       	add	r30, r30
     522:	ff 1f       	adc	r31, r31
     524:	e5 5c       	subi	r30, 0xC5	; 197
     526:	fe 4f       	sbci	r31, 0xFE	; 254
     528:	01 90       	ld	r0, Z+
     52a:	f0 81       	ld	r31, Z
     52c:	e0 2d       	mov	r30, r0
     52e:	10 82       	st	Z, r1
     530:	08 95       	ret
     532:	e0 91 02 01 	lds	r30, 0x0102	; 0x800102 <ComaPoint.2259>
     536:	f0 e0       	ldi	r31, 0x00	; 0
     538:	ee 0f       	add	r30, r30
     53a:	ff 1f       	adc	r31, r31
     53c:	e5 5c       	subi	r30, 0xC5	; 197
     53e:	fe 4f       	sbci	r31, 0xFE	; 254
     540:	20 81       	ld	r18, Z
     542:	31 81       	ldd	r19, Z+1	; 0x01
     544:	40 91 78 01 	lds	r20, 0x0178	; 0x800178 <__data_end>
     548:	91 e0       	ldi	r25, 0x01	; 1
     54a:	94 0f       	add	r25, r20
     54c:	90 93 78 01 	sts	0x0178, r25	; 0x800178 <__data_end>
     550:	f9 01       	movw	r30, r18
     552:	e4 0f       	add	r30, r20
     554:	f1 1d       	adc	r31, r1
     556:	80 83       	st	Z, r24
     558:	f9 01       	movw	r30, r18
     55a:	e9 0f       	add	r30, r25
     55c:	f1 1d       	adc	r31, r1
     55e:	10 82       	st	Z, r1
     560:	08 95       	ret
     562:	8c 32       	cpi	r24, 0x2C	; 44
     564:	89 f4       	brne	.+34     	; 0x588 <__LOCK_REGION_LENGTH__+0x188>
     566:	e0 91 02 01 	lds	r30, 0x0102	; 0x800102 <ComaPoint.2259>
     56a:	ef 5f       	subi	r30, 0xFF	; 255
     56c:	e0 93 02 01 	sts	0x0102, r30	; 0x800102 <ComaPoint.2259>
     570:	10 92 78 01 	sts	0x0178, r1	; 0x800178 <__data_end>
     574:	f0 e0       	ldi	r31, 0x00	; 0
     576:	ee 0f       	add	r30, r30
     578:	ff 1f       	adc	r31, r31
     57a:	ef 5e       	subi	r30, 0xEF	; 239
     57c:	fe 4f       	sbci	r31, 0xFE	; 254
     57e:	01 90       	ld	r0, Z+
     580:	f0 81       	ld	r31, Z
     582:	e0 2d       	mov	r30, r0
     584:	10 82       	st	Z, r1
     586:	08 95       	ret
     588:	e0 91 02 01 	lds	r30, 0x0102	; 0x800102 <ComaPoint.2259>
     58c:	f0 e0       	ldi	r31, 0x00	; 0
     58e:	ee 0f       	add	r30, r30
     590:	ff 1f       	adc	r31, r31
     592:	ef 5e       	subi	r30, 0xEF	; 239
     594:	fe 4f       	sbci	r31, 0xFE	; 254
     596:	20 81       	ld	r18, Z
     598:	31 81       	ldd	r19, Z+1	; 0x01
     59a:	40 91 78 01 	lds	r20, 0x0178	; 0x800178 <__data_end>
     59e:	91 e0       	ldi	r25, 0x01	; 1
     5a0:	94 0f       	add	r25, r20
     5a2:	90 93 78 01 	sts	0x0178, r25	; 0x800178 <__data_end>
     5a6:	f9 01       	movw	r30, r18
     5a8:	e4 0f       	add	r30, r20
     5aa:	f1 1d       	adc	r31, r1
     5ac:	80 83       	st	Z, r24
     5ae:	f9 01       	movw	r30, r18
     5b0:	e9 0f       	add	r30, r25
     5b2:	f1 1d       	adc	r31, r1
     5b4:	10 82       	st	Z, r1
     5b6:	08 95       	ret
     5b8:	8f ef       	ldi	r24, 0xFF	; 255
     5ba:	80 93 03 01 	sts	0x0103, r24	; 0x800103 <ByteCount.2256>
     5be:	08 95       	ret
     5c0:	91 50       	subi	r25, 0x01	; 1
     5c2:	94 30       	cpi	r25, 0x04	; 4
     5c4:	08 f0       	brcs	.+2      	; 0x5c8 <__LOCK_REGION_LENGTH__+0x1c8>
     5c6:	46 cf       	rjmp	.-372    	; 0x454 <__LOCK_REGION_LENGTH__+0x54>
     5c8:	3b cf       	rjmp	.-394    	; 0x440 <__LOCK_REGION_LENGTH__+0x40>
     5ca:	08 95       	ret

000005cc <__vector_18>:
     5cc:	1f 92       	push	r1
     5ce:	0f 92       	push	r0
     5d0:	0f b6       	in	r0, 0x3f	; 63
     5d2:	0f 92       	push	r0
     5d4:	11 24       	eor	r1, r1
     5d6:	8f 93       	push	r24
     5d8:	f8 94       	cli
     5da:	32 99       	sbic	0x06, 2	; 6
     5dc:	08 c0       	rjmp	.+16     	; 0x5ee <__vector_18+0x22>
     5de:	80 91 33 02 	lds	r24, 0x0233	; 0x800233 <Key1button>
     5e2:	8f 3f       	cpi	r24, 0xFF	; 255
     5e4:	49 f0       	breq	.+18     	; 0x5f8 <__vector_18+0x2c>
     5e6:	8f 5f       	subi	r24, 0xFF	; 255
     5e8:	80 93 33 02 	sts	0x0233, r24	; 0x800233 <Key1button>
     5ec:	05 c0       	rjmp	.+10     	; 0x5f8 <__vector_18+0x2c>
     5ee:	10 92 33 02 	sts	0x0233, r1	; 0x800233 <Key1button>
     5f2:	81 e0       	ldi	r24, 0x01	; 1
     5f4:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <Key1_En>
     5f8:	80 91 25 02 	lds	r24, 0x0225	; 0x800225 <Key1_delay>
     5fc:	88 23       	and	r24, r24
     5fe:	19 f0       	breq	.+6      	; 0x606 <__vector_18+0x3a>
     600:	81 50       	subi	r24, 0x01	; 1
     602:	80 93 25 02 	sts	0x0225, r24	; 0x800225 <Key1_delay>
     606:	80 91 20 02 	lds	r24, 0x0220	; 0x800220 <RXwaitpause>
     60a:	8f 5f       	subi	r24, 0xFF	; 255
     60c:	80 93 20 02 	sts	0x0220, r24	; 0x800220 <RXwaitpause>
     610:	80 91 fc 01 	lds	r24, 0x01FC	; 0x8001fc <GPS_StatPointTimer>
     614:	8f 5f       	subi	r24, 0xFF	; 255
     616:	80 93 fc 01 	sts	0x01FC, r24	; 0x8001fc <GPS_StatPointTimer>
     61a:	16 bc       	out	0x26, r1	; 38
     61c:	78 94       	sei
     61e:	8f 91       	pop	r24
     620:	0f 90       	pop	r0
     622:	0f be       	out	0x3f, r0	; 63
     624:	0f 90       	pop	r0
     626:	1f 90       	pop	r1
     628:	18 95       	reti

0000062a <__vector_15>:
     62a:	1f 92       	push	r1
     62c:	0f 92       	push	r0
     62e:	0f b6       	in	r0, 0x3f	; 63
     630:	0f 92       	push	r0
     632:	11 24       	eor	r1, r1
     634:	cf 92       	push	r12
     636:	df 92       	push	r13
     638:	ef 92       	push	r14
     63a:	ff 92       	push	r15
     63c:	2f 93       	push	r18
     63e:	3f 93       	push	r19
     640:	4f 93       	push	r20
     642:	5f 93       	push	r21
     644:	6f 93       	push	r22
     646:	7f 93       	push	r23
     648:	8f 93       	push	r24
     64a:	9f 93       	push	r25
     64c:	af 93       	push	r26
     64e:	bf 93       	push	r27
     650:	ef 93       	push	r30
     652:	ff 93       	push	r31
     654:	60 91 03 02 	lds	r22, 0x0203	; 0x800203 <GPS_Speed>
     658:	70 91 04 02 	lds	r23, 0x0204	; 0x800204 <GPS_Speed+0x1>
     65c:	80 e0       	ldi	r24, 0x00	; 0
     65e:	90 e0       	ldi	r25, 0x00	; 0
     660:	0e 94 fa 0d 	call	0x1bf4	; 0x1bf4 <__floatunsisf>
     664:	20 e0       	ldi	r18, 0x00	; 0
     666:	30 e0       	ldi	r19, 0x00	; 0
     668:	40 e1       	ldi	r20, 0x10	; 16
     66a:	52 e4       	ldi	r21, 0x42	; 66
     66c:	0e 94 59 0d 	call	0x1ab2	; 0x1ab2 <__divsf3>
     670:	0e 94 9d 0f 	call	0x1f3a	; 0x1f3a <round>
     674:	6b 01       	movw	r12, r22
     676:	7c 01       	movw	r14, r24
     678:	60 91 2b 02 	lds	r22, 0x022B	; 0x80022b <Meters>
     67c:	70 91 2c 02 	lds	r23, 0x022C	; 0x80022c <Meters+0x1>
     680:	80 91 2d 02 	lds	r24, 0x022D	; 0x80022d <Meters+0x2>
     684:	90 91 2e 02 	lds	r25, 0x022E	; 0x80022e <Meters+0x3>
     688:	0e 94 fa 0d 	call	0x1bf4	; 0x1bf4 <__floatunsisf>
     68c:	a7 01       	movw	r20, r14
     68e:	96 01       	movw	r18, r12
     690:	0e 94 e8 0c 	call	0x19d0	; 0x19d0 <__addsf3>
     694:	0e 94 cb 0d 	call	0x1b96	; 0x1b96 <__fixunssfsi>
     698:	6b 01       	movw	r12, r22
     69a:	7c 01       	movw	r14, r24
     69c:	0e 94 fa 0d 	call	0x1bf4	; 0x1bf4 <__floatunsisf>
     6a0:	20 e8       	ldi	r18, 0x80	; 128
     6a2:	36 e9       	ldi	r19, 0x96	; 150
     6a4:	48 e1       	ldi	r20, 0x18	; 24
     6a6:	5b e4       	ldi	r21, 0x4B	; 75
     6a8:	0e 94 d3 0e 	call	0x1da6	; 0x1da6 <__gesf2>
     6ac:	88 23       	and	r24, r24
     6ae:	4c f4       	brge	.+18     	; 0x6c2 <__vector_15+0x98>
     6b0:	c0 92 2b 02 	sts	0x022B, r12	; 0x80022b <Meters>
     6b4:	d0 92 2c 02 	sts	0x022C, r13	; 0x80022c <Meters+0x1>
     6b8:	e0 92 2d 02 	sts	0x022D, r14	; 0x80022d <Meters+0x2>
     6bc:	f0 92 2e 02 	sts	0x022E, r15	; 0x80022e <Meters+0x3>
     6c0:	08 c0       	rjmp	.+16     	; 0x6d2 <__vector_15+0xa8>
     6c2:	10 92 2b 02 	sts	0x022B, r1	; 0x80022b <Meters>
     6c6:	10 92 2c 02 	sts	0x022C, r1	; 0x80022c <Meters+0x1>
     6ca:	10 92 2d 02 	sts	0x022D, r1	; 0x80022d <Meters+0x2>
     6ce:	10 92 2e 02 	sts	0x022E, r1	; 0x80022e <Meters+0x3>
     6d2:	81 e0       	ldi	r24, 0x01	; 1
     6d4:	90 91 f5 01 	lds	r25, 0x01F5	; 0x8001f5 <blink>
     6d8:	91 11       	cpse	r25, r1
     6da:	80 e0       	ldi	r24, 0x00	; 0
     6dc:	80 93 f5 01 	sts	0x01F5, r24	; 0x8001f5 <blink>
     6e0:	80 91 fb 01 	lds	r24, 0x01FB	; 0x8001fb <Timer1_en>
     6e4:	8f 5f       	subi	r24, 0xFF	; 255
     6e6:	80 93 fb 01 	sts	0x01FB, r24	; 0x8001fb <Timer1_en>
     6ea:	87 ef       	ldi	r24, 0xF7	; 247
     6ec:	92 ec       	ldi	r25, 0xC2	; 194
     6ee:	90 93 85 00 	sts	0x0085, r25	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
     6f2:	80 93 84 00 	sts	0x0084, r24	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
     6f6:	ff 91       	pop	r31
     6f8:	ef 91       	pop	r30
     6fa:	bf 91       	pop	r27
     6fc:	af 91       	pop	r26
     6fe:	9f 91       	pop	r25
     700:	8f 91       	pop	r24
     702:	7f 91       	pop	r23
     704:	6f 91       	pop	r22
     706:	5f 91       	pop	r21
     708:	4f 91       	pop	r20
     70a:	3f 91       	pop	r19
     70c:	2f 91       	pop	r18
     70e:	ff 90       	pop	r15
     710:	ef 90       	pop	r14
     712:	df 90       	pop	r13
     714:	cf 90       	pop	r12
     716:	0f 90       	pop	r0
     718:	0f be       	out	0x3f, r0	; 63
     71a:	0f 90       	pop	r0
     71c:	1f 90       	pop	r1
     71e:	18 95       	reti

00000720 <__vector_11>:
     720:	1f 92       	push	r1
     722:	0f 92       	push	r0
     724:	0f b6       	in	r0, 0x3f	; 63
     726:	0f 92       	push	r0
     728:	11 24       	eor	r1, r1
     72a:	2f 93       	push	r18
     72c:	3f 93       	push	r19
     72e:	8f 93       	push	r24
     730:	9f 93       	push	r25
     732:	f8 94       	cli
     734:	8a ed       	ldi	r24, 0xDA	; 218
     736:	80 93 b2 00 	sts	0x00B2, r24	; 0x8000b2 <__TEXT_REGION_LENGTH__+0x7e00b2>
     73a:	80 91 38 02 	lds	r24, 0x0238	; 0x800238 <Timer2_count>
     73e:	90 91 39 02 	lds	r25, 0x0239	; 0x800239 <Timer2_count+0x1>
     742:	01 96       	adiw	r24, 0x01	; 1
     744:	90 93 39 02 	sts	0x0239, r25	; 0x800239 <Timer2_count+0x1>
     748:	80 93 38 02 	sts	0x0238, r24	; 0x800238 <Timer2_count>
     74c:	8f 3f       	cpi	r24, 0xFF	; 255
     74e:	2f ef       	ldi	r18, 0xFF	; 255
     750:	92 07       	cpc	r25, r18
     752:	39 f0       	breq	.+14     	; 0x762 <__vector_11+0x42>
     754:	20 91 3a 02 	lds	r18, 0x023A	; 0x80023a <period>
     758:	30 91 3b 02 	lds	r19, 0x023B	; 0x80023b <period+0x1>
     75c:	82 17       	cp	r24, r18
     75e:	93 07       	cpc	r25, r19
     760:	28 f0       	brcs	.+10     	; 0x76c <__vector_11+0x4c>
     762:	10 92 39 02 	sts	0x0239, r1	; 0x800239 <Timer2_count+0x1>
     766:	10 92 38 02 	sts	0x0238, r1	; 0x800238 <Timer2_count>
     76a:	05 c0       	rjmp	.+10     	; 0x776 <__vector_11+0x56>
     76c:	89 2b       	or	r24, r25
     76e:	19 f0       	breq	.+6      	; 0x776 <__vector_11+0x56>
     770:	2f 3f       	cpi	r18, 0xFF	; 255
     772:	3f 4f       	sbci	r19, 0xFF	; 255
     774:	89 f4       	brne	.+34     	; 0x798 <__vector_11+0x78>
     776:	5f 9a       	sbi	0x0b, 7	; 11
     778:	80 91 38 02 	lds	r24, 0x0238	; 0x800238 <Timer2_count>
     77c:	90 91 39 02 	lds	r25, 0x0239	; 0x800239 <Timer2_count+0x1>
     780:	20 91 7f 01 	lds	r18, 0x017F	; 0x80017f <dc>
     784:	30 91 80 01 	lds	r19, 0x0180	; 0x800180 <dc+0x1>
     788:	82 17       	cp	r24, r18
     78a:	93 07       	cpc	r25, r19
     78c:	19 f4       	brne	.+6      	; 0x794 <__vector_11+0x74>
     78e:	01 96       	adiw	r24, 0x01	; 1
     790:	09 f0       	breq	.+2      	; 0x794 <__vector_11+0x74>
     792:	5f 98       	cbi	0x0b, 7	; 11
     794:	78 94       	sei
     796:	0c c0       	rjmp	.+24     	; 0x7b0 <__vector_11+0x90>
     798:	20 91 38 02 	lds	r18, 0x0238	; 0x800238 <Timer2_count>
     79c:	30 91 39 02 	lds	r19, 0x0239	; 0x800239 <Timer2_count+0x1>
     7a0:	80 91 7f 01 	lds	r24, 0x017F	; 0x80017f <dc>
     7a4:	90 91 80 01 	lds	r25, 0x0180	; 0x800180 <dc+0x1>
     7a8:	28 17       	cp	r18, r24
     7aa:	39 07       	cpc	r19, r25
     7ac:	99 f7       	brne	.-26     	; 0x794 <__vector_11+0x74>
     7ae:	f1 cf       	rjmp	.-30     	; 0x792 <__vector_11+0x72>
     7b0:	9f 91       	pop	r25
     7b2:	8f 91       	pop	r24
     7b4:	3f 91       	pop	r19
     7b6:	2f 91       	pop	r18
     7b8:	0f 90       	pop	r0
     7ba:	0f be       	out	0x3f, r0	; 63
     7bc:	0f 90       	pop	r0
     7be:	1f 90       	pop	r1
     7c0:	18 95       	reti

000007c2 <__vector_20>:
     7c2:	1f 92       	push	r1
     7c4:	0f 92       	push	r0
     7c6:	0f b6       	in	r0, 0x3f	; 63
     7c8:	0f 92       	push	r0
     7ca:	11 24       	eor	r1, r1
     7cc:	2f 93       	push	r18
     7ce:	3f 93       	push	r19
     7d0:	4f 93       	push	r20
     7d2:	5f 93       	push	r21
     7d4:	6f 93       	push	r22
     7d6:	7f 93       	push	r23
     7d8:	8f 93       	push	r24
     7da:	9f 93       	push	r25
     7dc:	af 93       	push	r26
     7de:	bf 93       	push	r27
     7e0:	ef 93       	push	r30
     7e2:	ff 93       	push	r31
     7e4:	f8 94       	cli
     7e6:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
     7ea:	80 93 2a 02 	sts	0x022A, r24	; 0x80022a <buff0>
     7ee:	0e 94 e8 01 	call	0x3d0	; 0x3d0 <Parser>
     7f2:	10 92 20 02 	sts	0x0220, r1	; 0x800220 <RXwaitpause>
     7f6:	78 94       	sei
     7f8:	ff 91       	pop	r31
     7fa:	ef 91       	pop	r30
     7fc:	bf 91       	pop	r27
     7fe:	af 91       	pop	r26
     800:	9f 91       	pop	r25
     802:	8f 91       	pop	r24
     804:	7f 91       	pop	r23
     806:	6f 91       	pop	r22
     808:	5f 91       	pop	r21
     80a:	4f 91       	pop	r20
     80c:	3f 91       	pop	r19
     80e:	2f 91       	pop	r18
     810:	0f 90       	pop	r0
     812:	0f be       	out	0x3f, r0	; 63
     814:	0f 90       	pop	r0
     816:	1f 90       	pop	r1
     818:	18 95       	reti

0000081a <__vector_26>:
     81a:	1f 92       	push	r1
     81c:	0f 92       	push	r0
     81e:	0f b6       	in	r0, 0x3f	; 63
     820:	0f 92       	push	r0
     822:	11 24       	eor	r1, r1
     824:	2f 93       	push	r18
     826:	3f 93       	push	r19
     828:	4f 93       	push	r20
     82a:	5f 93       	push	r21
     82c:	6f 93       	push	r22
     82e:	7f 93       	push	r23
     830:	8f 93       	push	r24
     832:	9f 93       	push	r25
     834:	af 93       	push	r26
     836:	bf 93       	push	r27
     838:	ef 93       	push	r30
     83a:	ff 93       	push	r31
     83c:	0e 94 83 0c 	call	0x1906	; 0x1906 <TWI_Process>
     840:	ff 91       	pop	r31
     842:	ef 91       	pop	r30
     844:	bf 91       	pop	r27
     846:	af 91       	pop	r26
     848:	9f 91       	pop	r25
     84a:	8f 91       	pop	r24
     84c:	7f 91       	pop	r23
     84e:	6f 91       	pop	r22
     850:	5f 91       	pop	r21
     852:	4f 91       	pop	r20
     854:	3f 91       	pop	r19
     856:	2f 91       	pop	r18
     858:	0f 90       	pop	r0
     85a:	0f be       	out	0x3f, r0	; 63
     85c:	0f 90       	pop	r0
     85e:	1f 90       	pop	r1
     860:	18 95       	reti

00000862 <init_UART>:
     862:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
     866:	86 e6       	ldi	r24, 0x66	; 102
     868:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
     86c:	10 92 c0 00 	sts	0x00C0, r1	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7e00c0>
     870:	88 e9       	ldi	r24, 0x98	; 152
     872:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
     876:	86 e0       	ldi	r24, 0x06	; 6
     878:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7e00c2>
     87c:	80 e0       	ldi	r24, 0x00	; 0
     87e:	90 e0       	ldi	r25, 0x00	; 0
     880:	08 95       	ret

00000882 <TimeToInt>:
     882:	fc 01       	movw	r30, r24
     884:	61 15       	cp	r22, r1
     886:	71 05       	cpc	r23, r1
     888:	49 f1       	breq	.+82     	; 0x8dc <TimeToInt+0x5a>
     88a:	90 81       	ld	r25, Z
     88c:	29 2f       	mov	r18, r25
     88e:	30 e0       	ldi	r19, 0x00	; 0
     890:	20 53       	subi	r18, 0x30	; 48
     892:	31 09       	sbc	r19, r1
     894:	2a 30       	cpi	r18, 0x0A	; 10
     896:	31 05       	cpc	r19, r1
     898:	0c f0       	brlt	.+2      	; 0x89c <TimeToInt+0x1a>
     89a:	48 c0       	rjmp	.+144    	; 0x92c <__stack+0x2d>
     89c:	df 01       	movw	r26, r30
     89e:	11 96       	adiw	r26, 0x01	; 1
     8a0:	6e 0f       	add	r22, r30
     8a2:	7f 1f       	adc	r23, r31
     8a4:	20 e0       	ldi	r18, 0x00	; 0
     8a6:	30 e0       	ldi	r19, 0x00	; 0
     8a8:	06 c0       	rjmp	.+12     	; 0x8b6 <TimeToInt+0x34>
     8aa:	9d 91       	ld	r25, X+
     8ac:	e9 2f       	mov	r30, r25
     8ae:	f0 e0       	ldi	r31, 0x00	; 0
     8b0:	f0 97       	sbiw	r30, 0x30	; 48
     8b2:	3a 97       	sbiw	r30, 0x0a	; 10
     8b4:	f4 f5       	brge	.+124    	; 0x932 <__stack+0x33>
     8b6:	f9 01       	movw	r30, r18
     8b8:	ee 0f       	add	r30, r30
     8ba:	ff 1f       	adc	r31, r31
     8bc:	22 0f       	add	r18, r18
     8be:	33 1f       	adc	r19, r19
     8c0:	22 0f       	add	r18, r18
     8c2:	33 1f       	adc	r19, r19
     8c4:	22 0f       	add	r18, r18
     8c6:	33 1f       	adc	r19, r19
     8c8:	2e 0f       	add	r18, r30
     8ca:	3f 1f       	adc	r19, r31
     8cc:	29 0f       	add	r18, r25
     8ce:	31 1d       	adc	r19, r1
     8d0:	20 53       	subi	r18, 0x30	; 48
     8d2:	31 09       	sbc	r19, r1
     8d4:	a6 17       	cp	r26, r22
     8d6:	b7 07       	cpc	r27, r23
     8d8:	41 f7       	brne	.-48     	; 0x8aa <TimeToInt+0x28>
     8da:	02 c0       	rjmp	.+4      	; 0x8e0 <TimeToInt+0x5e>
     8dc:	20 e0       	ldi	r18, 0x00	; 0
     8de:	30 e0       	ldi	r19, 0x00	; 0
     8e0:	64 2f       	mov	r22, r20
     8e2:	04 2e       	mov	r0, r20
     8e4:	00 0c       	add	r0, r0
     8e6:	77 0b       	sbc	r23, r23
     8e8:	77 23       	and	r23, r23
     8ea:	1c f4       	brge	.+6      	; 0x8f2 <TimeToInt+0x70>
     8ec:	71 95       	neg	r23
     8ee:	61 95       	neg	r22
     8f0:	71 09       	sbc	r23, r1
     8f2:	54 e6       	ldi	r21, 0x64	; 100
     8f4:	56 9f       	mul	r21, r22
     8f6:	c0 01       	movw	r24, r0
     8f8:	57 9f       	mul	r21, r23
     8fa:	90 0d       	add	r25, r0
     8fc:	11 24       	eor	r1, r1
     8fe:	44 23       	and	r20, r20
     900:	1c f0       	brlt	.+6      	; 0x908 <__stack+0x9>
     902:	28 0f       	add	r18, r24
     904:	39 1f       	adc	r19, r25
     906:	0a c0       	rjmp	.+20     	; 0x91c <__stack+0x1d>
     908:	28 17       	cp	r18, r24
     90a:	39 07       	cpc	r19, r25
     90c:	28 f4       	brcc	.+10     	; 0x918 <__stack+0x19>
     90e:	28 1b       	sub	r18, r24
     910:	39 0b       	sbc	r19, r25
     912:	20 5a       	subi	r18, 0xA0	; 160
     914:	36 4f       	sbci	r19, 0xF6	; 246
     916:	02 c0       	rjmp	.+4      	; 0x91c <__stack+0x1d>
     918:	28 1b       	sub	r18, r24
     91a:	39 0b       	sbc	r19, r25
     91c:	20 36       	cpi	r18, 0x60	; 96
     91e:	89 e0       	ldi	r24, 0x09	; 9
     920:	38 07       	cpc	r19, r24
     922:	50 f0       	brcs	.+20     	; 0x938 <__stack+0x39>
     924:	c9 01       	movw	r24, r18
     926:	80 56       	subi	r24, 0x60	; 96
     928:	99 40       	sbci	r25, 0x09	; 9
     92a:	08 95       	ret
     92c:	80 e0       	ldi	r24, 0x00	; 0
     92e:	90 e0       	ldi	r25, 0x00	; 0
     930:	08 95       	ret
     932:	80 e0       	ldi	r24, 0x00	; 0
     934:	90 e0       	ldi	r25, 0x00	; 0
     936:	08 95       	ret
     938:	c9 01       	movw	r24, r18
     93a:	08 95       	ret

0000093c <print_gpsstatuspoint>:
     93c:	80 91 05 02 	lds	r24, 0x0205	; 0x800205 <GPS_Status>
     940:	81 34       	cpi	r24, 0x41	; 65
     942:	41 f0       	breq	.+16     	; 0x954 <print_gpsstatuspoint+0x18>
     944:	86 35       	cpi	r24, 0x56	; 86
     946:	41 f4       	brne	.+16     	; 0x958 <print_gpsstatuspoint+0x1c>
     948:	80 91 fc 01 	lds	r24, 0x01FC	; 0x8001fc <GPS_StatPointTimer>
     94c:	8e 31       	cpi	r24, 0x1E	; 30
     94e:	28 f0       	brcs	.+10     	; 0x95a <print_gpsstatuspoint+0x1e>
     950:	12 9a       	sbi	0x02, 2	; 2
     952:	08 95       	ret
     954:	12 9a       	sbi	0x02, 2	; 2
     956:	08 95       	ret
     958:	12 98       	cbi	0x02, 2	; 2
     95a:	08 95       	ret

0000095c <select_U>:
     95c:	82 b1       	in	r24, 0x02	; 2
     95e:	8b 76       	andi	r24, 0x6B	; 107
     960:	82 b9       	out	0x02, r24	; 2
     962:	82 b1       	in	r24, 0x02	; 2
     964:	8b 66       	ori	r24, 0x6B	; 107
     966:	82 b9       	out	0x02, r24	; 2
     968:	08 95       	ret

0000096a <select_F>:
     96a:	82 b1       	in	r24, 0x02	; 2
     96c:	81 7d       	andi	r24, 0xD1	; 209
     96e:	82 b9       	out	0x02, r24	; 2
     970:	82 b1       	in	r24, 0x02	; 2
     972:	81 6d       	ori	r24, 0xD1	; 209
     974:	82 b9       	out	0x02, r24	; 2
     976:	08 95       	ret

00000978 <select_E>:
     978:	82 b1       	in	r24, 0x02	; 2
     97a:	83 7d       	andi	r24, 0xD3	; 211
     97c:	82 b9       	out	0x02, r24	; 2
     97e:	82 b1       	in	r24, 0x02	; 2
     980:	83 6d       	ori	r24, 0xD3	; 211
     982:	82 b9       	out	0x02, r24	; 2
     984:	08 95       	ret

00000986 <select_d>:
     986:	82 b1       	in	r24, 0x02	; 2
     988:	8b 73       	andi	r24, 0x3B	; 59
     98a:	82 b9       	out	0x02, r24	; 2
     98c:	82 b1       	in	r24, 0x02	; 2
     98e:	8b 63       	ori	r24, 0x3B	; 59
     990:	82 b9       	out	0x02, r24	; 2
     992:	08 95       	ret

00000994 <select_c>:
     994:	82 b1       	in	r24, 0x02	; 2
     996:	83 71       	andi	r24, 0x13	; 19
     998:	82 b9       	out	0x02, r24	; 2
     99a:	82 b1       	in	r24, 0x02	; 2
     99c:	83 61       	ori	r24, 0x13	; 19
     99e:	82 b9       	out	0x02, r24	; 2
     9a0:	08 95       	ret

000009a2 <select_r>:
     9a2:	82 b1       	in	r24, 0x02	; 2
     9a4:	81 71       	andi	r24, 0x11	; 17
     9a6:	82 b9       	out	0x02, r24	; 2
     9a8:	82 b1       	in	r24, 0x02	; 2
     9aa:	81 61       	ori	r24, 0x11	; 17
     9ac:	82 b9       	out	0x02, r24	; 2
     9ae:	08 95       	ret

000009b0 <select_minus>:
     9b0:	82 b1       	in	r24, 0x02	; 2
     9b2:	80 71       	andi	r24, 0x10	; 16
     9b4:	82 b9       	out	0x02, r24	; 2
     9b6:	14 9a       	sbi	0x02, 4	; 2
     9b8:	08 95       	ret

000009ba <print_UTC>:
     9ba:	cf 93       	push	r28
     9bc:	df 93       	push	r29
     9be:	97 e6       	ldi	r25, 0x67	; 103
     9c0:	89 02       	muls	r24, r25
     9c2:	91 2d       	mov	r25, r1
     9c4:	11 24       	eor	r1, r1
     9c6:	95 95       	asr	r25
     9c8:	95 95       	asr	r25
     9ca:	87 fd       	sbrc	r24, 7
     9cc:	93 95       	inc	r25
     9ce:	99 0f       	add	r25, r25
     9d0:	29 2f       	mov	r18, r25
     9d2:	22 0f       	add	r18, r18
     9d4:	22 0f       	add	r18, r18
     9d6:	92 0f       	add	r25, r18
     9d8:	28 2f       	mov	r18, r24
     9da:	29 1b       	sub	r18, r25
     9dc:	02 2e       	mov	r0, r18
     9de:	00 0c       	add	r0, r0
     9e0:	33 0b       	sbc	r19, r19
     9e2:	33 23       	and	r19, r19
     9e4:	1c f4       	brge	.+6      	; 0x9ec <print_UTC+0x32>
     9e6:	31 95       	neg	r19
     9e8:	21 95       	neg	r18
     9ea:	31 09       	sbc	r19, r1
     9ec:	20 93 0b 02 	sts	0x020B, r18	; 0x80020b <actval+0x3>
     9f0:	27 e6       	ldi	r18, 0x67	; 103
     9f2:	82 02       	muls	r24, r18
     9f4:	91 2d       	mov	r25, r1
     9f6:	11 24       	eor	r1, r1
     9f8:	95 95       	asr	r25
     9fa:	95 95       	asr	r25
     9fc:	87 fd       	sbrc	r24, 7
     9fe:	93 95       	inc	r25
     a00:	89 2f       	mov	r24, r25
     a02:	92 02       	muls	r25, r18
     a04:	91 2d       	mov	r25, r1
     a06:	11 24       	eor	r1, r1
     a08:	95 95       	asr	r25
     a0a:	95 95       	asr	r25
     a0c:	87 fd       	sbrc	r24, 7
     a0e:	93 95       	inc	r25
     a10:	99 0f       	add	r25, r25
     a12:	29 2f       	mov	r18, r25
     a14:	22 0f       	add	r18, r18
     a16:	22 0f       	add	r18, r18
     a18:	92 0f       	add	r25, r18
     a1a:	89 1b       	sub	r24, r25
     a1c:	08 2e       	mov	r0, r24
     a1e:	00 0c       	add	r0, r0
     a20:	99 0b       	sbc	r25, r25
     a22:	99 23       	and	r25, r25
     a24:	1c f4       	brge	.+6      	; 0xa2c <print_UTC+0x72>
     a26:	91 95       	neg	r25
     a28:	81 95       	neg	r24
     a2a:	91 09       	sbc	r25, r1
     a2c:	80 93 0a 02 	sts	0x020A, r24	; 0x80020a <actval+0x2>
     a30:	81 e0       	ldi	r24, 0x01	; 1
     a32:	0e 94 d2 01 	call	0x3a4	; 0x3a4 <selectseg>
     a36:	0e 94 ae 04 	call	0x95c	; 0x95c <select_U>
     a3a:	8f ed       	ldi	r24, 0xDF	; 223
     a3c:	9e e2       	ldi	r25, 0x2E	; 46
     a3e:	01 97       	sbiw	r24, 0x01	; 1
     a40:	f1 f7       	brne	.-4      	; 0xa3e <print_UTC+0x84>
     a42:	00 c0       	rjmp	.+0      	; 0xa44 <print_UTC+0x8a>
     a44:	00 00       	nop
     a46:	82 e0       	ldi	r24, 0x02	; 2
     a48:	0e 94 d2 01 	call	0x3a4	; 0x3a4 <selectseg>
     a4c:	80 91 f9 01 	lds	r24, 0x01F9	; 0x8001f9 <UTC_TCorrection>
     a50:	88 23       	and	r24, r24
     a52:	1c f4       	brge	.+6      	; 0xa5a <print_UTC+0xa0>
     a54:	0e 94 d8 04 	call	0x9b0	; 0x9b0 <select_minus>
     a58:	03 c0       	rjmp	.+6      	; 0xa60 <print_UTC+0xa6>
     a5a:	8b e0       	ldi	r24, 0x0B	; 11
     a5c:	0e 94 d2 01 	call	0x3a4	; 0x3a4 <selectseg>
     a60:	8f ed       	ldi	r24, 0xDF	; 223
     a62:	9e e2       	ldi	r25, 0x2E	; 46
     a64:	01 97       	sbiw	r24, 0x01	; 1
     a66:	f1 f7       	brne	.-4      	; 0xa64 <print_UTC+0xaa>
     a68:	00 c0       	rjmp	.+0      	; 0xa6a <print_UTC+0xb0>
     a6a:	00 00       	nop
     a6c:	83 e0       	ldi	r24, 0x03	; 3
     a6e:	0e 94 d2 01 	call	0x3a4	; 0x3a4 <selectseg>
     a72:	12 98       	cbi	0x02, 2	; 2
     a74:	c8 e0       	ldi	r28, 0x08	; 8
     a76:	d2 e0       	ldi	r29, 0x02	; 2
     a78:	8a 81       	ldd	r24, Y+2	; 0x02
     a7a:	0e 94 9a 01 	call	0x334	; 0x334 <setseg>
     a7e:	8f ed       	ldi	r24, 0xDF	; 223
     a80:	9e e2       	ldi	r25, 0x2E	; 46
     a82:	01 97       	sbiw	r24, 0x01	; 1
     a84:	f1 f7       	brne	.-4      	; 0xa82 <print_UTC+0xc8>
     a86:	00 c0       	rjmp	.+0      	; 0xa88 <print_UTC+0xce>
     a88:	00 00       	nop
     a8a:	84 e0       	ldi	r24, 0x04	; 4
     a8c:	0e 94 d2 01 	call	0x3a4	; 0x3a4 <selectseg>
     a90:	12 98       	cbi	0x02, 2	; 2
     a92:	0e 94 9e 04 	call	0x93c	; 0x93c <print_gpsstatuspoint>
     a96:	8b 81       	ldd	r24, Y+3	; 0x03
     a98:	0e 94 9a 01 	call	0x334	; 0x334 <setseg>
     a9c:	8f ed       	ldi	r24, 0xDF	; 223
     a9e:	9e e2       	ldi	r25, 0x2E	; 46
     aa0:	01 97       	sbiw	r24, 0x01	; 1
     aa2:	f1 f7       	brne	.-4      	; 0xaa0 <print_UTC+0xe6>
     aa4:	00 c0       	rjmp	.+0      	; 0xaa6 <print_UTC+0xec>
     aa6:	00 00       	nop
     aa8:	df 91       	pop	r29
     aaa:	cf 91       	pop	r28
     aac:	08 95       	ret

00000aae <print_decimal>:
     aae:	8f 92       	push	r8
     ab0:	9f 92       	push	r9
     ab2:	af 92       	push	r10
     ab4:	bf 92       	push	r11
     ab6:	cf 92       	push	r12
     ab8:	df 92       	push	r13
     aba:	ef 92       	push	r14
     abc:	ff 92       	push	r15
     abe:	0f 93       	push	r16
     ac0:	1f 93       	push	r17
     ac2:	cf 93       	push	r28
     ac4:	df 93       	push	r29
     ac6:	8c 01       	movw	r16, r24
     ac8:	c6 2e       	mov	r12, r22
     aca:	c8 e0       	ldi	r28, 0x08	; 8
     acc:	d2 e0       	ldi	r29, 0x02	; 2
     ace:	9c 01       	movw	r18, r24
     ad0:	ad ec       	ldi	r26, 0xCD	; 205
     ad2:	bc ec       	ldi	r27, 0xCC	; 204
     ad4:	0e 94 32 11 	call	0x2264	; 0x2264 <__umulhisi3>
     ad8:	fc 01       	movw	r30, r24
     ada:	f6 95       	lsr	r31
     adc:	e7 95       	ror	r30
     ade:	f6 95       	lsr	r31
     ae0:	e7 95       	ror	r30
     ae2:	f6 95       	lsr	r31
     ae4:	e7 95       	ror	r30
     ae6:	9f 01       	movw	r18, r30
     ae8:	22 0f       	add	r18, r18
     aea:	33 1f       	adc	r19, r19
     aec:	cf 01       	movw	r24, r30
     aee:	88 0f       	add	r24, r24
     af0:	99 1f       	adc	r25, r25
     af2:	88 0f       	add	r24, r24
     af4:	99 1f       	adc	r25, r25
     af6:	88 0f       	add	r24, r24
     af8:	99 1f       	adc	r25, r25
     afa:	82 0f       	add	r24, r18
     afc:	93 1f       	adc	r25, r19
     afe:	98 01       	movw	r18, r16
     b00:	28 1b       	sub	r18, r24
     b02:	39 0b       	sbc	r19, r25
     b04:	2b 83       	std	Y+3, r18	; 0x03
     b06:	9f 01       	movw	r18, r30
     b08:	0e 94 32 11 	call	0x2264	; 0x2264 <__umulhisi3>
     b0c:	96 95       	lsr	r25
     b0e:	87 95       	ror	r24
     b10:	96 95       	lsr	r25
     b12:	87 95       	ror	r24
     b14:	96 95       	lsr	r25
     b16:	87 95       	ror	r24
     b18:	9c 01       	movw	r18, r24
     b1a:	22 0f       	add	r18, r18
     b1c:	33 1f       	adc	r19, r19
     b1e:	88 0f       	add	r24, r24
     b20:	99 1f       	adc	r25, r25
     b22:	88 0f       	add	r24, r24
     b24:	99 1f       	adc	r25, r25
     b26:	88 0f       	add	r24, r24
     b28:	99 1f       	adc	r25, r25
     b2a:	82 0f       	add	r24, r18
     b2c:	93 1f       	adc	r25, r19
     b2e:	e8 1b       	sub	r30, r24
     b30:	f9 0b       	sbc	r31, r25
     b32:	5e 2f       	mov	r21, r30
     b34:	ea 83       	std	Y+2, r30	; 0x02
     b36:	98 01       	movw	r18, r16
     b38:	36 95       	lsr	r19
     b3a:	27 95       	ror	r18
     b3c:	36 95       	lsr	r19
     b3e:	27 95       	ror	r18
     b40:	ab e7       	ldi	r26, 0x7B	; 123
     b42:	b4 e1       	ldi	r27, 0x14	; 20
     b44:	0e 94 32 11 	call	0x2264	; 0x2264 <__umulhisi3>
     b48:	fc 01       	movw	r30, r24
     b4a:	f6 95       	lsr	r31
     b4c:	e7 95       	ror	r30
     b4e:	9f 01       	movw	r18, r30
     b50:	ad ec       	ldi	r26, 0xCD	; 205
     b52:	bc ec       	ldi	r27, 0xCC	; 204
     b54:	0e 94 32 11 	call	0x2264	; 0x2264 <__umulhisi3>
     b58:	96 95       	lsr	r25
     b5a:	87 95       	ror	r24
     b5c:	96 95       	lsr	r25
     b5e:	87 95       	ror	r24
     b60:	96 95       	lsr	r25
     b62:	87 95       	ror	r24
     b64:	9c 01       	movw	r18, r24
     b66:	22 0f       	add	r18, r18
     b68:	33 1f       	adc	r19, r19
     b6a:	88 0f       	add	r24, r24
     b6c:	99 1f       	adc	r25, r25
     b6e:	88 0f       	add	r24, r24
     b70:	99 1f       	adc	r25, r25
     b72:	88 0f       	add	r24, r24
     b74:	99 1f       	adc	r25, r25
     b76:	82 0f       	add	r24, r18
     b78:	93 1f       	adc	r25, r19
     b7a:	e8 1b       	sub	r30, r24
     b7c:	f9 0b       	sbc	r31, r25
     b7e:	fe 2e       	mov	r15, r30
     b80:	e9 83       	std	Y+1, r30	; 0x01
     b82:	98 01       	movw	r18, r16
     b84:	36 95       	lsr	r19
     b86:	27 95       	ror	r18
     b88:	36 95       	lsr	r19
     b8a:	27 95       	ror	r18
     b8c:	36 95       	lsr	r19
     b8e:	27 95       	ror	r18
     b90:	a5 ec       	ldi	r26, 0xC5	; 197
     b92:	b0 e2       	ldi	r27, 0x20	; 32
     b94:	0e 94 32 11 	call	0x2264	; 0x2264 <__umulhisi3>
     b98:	fc 01       	movw	r30, r24
     b9a:	f2 95       	swap	r31
     b9c:	e2 95       	swap	r30
     b9e:	ef 70       	andi	r30, 0x0F	; 15
     ba0:	ef 27       	eor	r30, r31
     ba2:	ff 70       	andi	r31, 0x0F	; 15
     ba4:	ef 27       	eor	r30, r31
     ba6:	9f 01       	movw	r18, r30
     ba8:	ad ec       	ldi	r26, 0xCD	; 205
     baa:	bc ec       	ldi	r27, 0xCC	; 204
     bac:	0e 94 32 11 	call	0x2264	; 0x2264 <__umulhisi3>
     bb0:	96 95       	lsr	r25
     bb2:	87 95       	ror	r24
     bb4:	96 95       	lsr	r25
     bb6:	87 95       	ror	r24
     bb8:	96 95       	lsr	r25
     bba:	87 95       	ror	r24
     bbc:	9c 01       	movw	r18, r24
     bbe:	22 0f       	add	r18, r18
     bc0:	33 1f       	adc	r19, r19
     bc2:	88 0f       	add	r24, r24
     bc4:	99 1f       	adc	r25, r25
     bc6:	88 0f       	add	r24, r24
     bc8:	99 1f       	adc	r25, r25
     bca:	88 0f       	add	r24, r24
     bcc:	99 1f       	adc	r25, r25
     bce:	82 0f       	add	r24, r18
     bd0:	93 1f       	adc	r25, r19
     bd2:	e8 1b       	sub	r30, r24
     bd4:	f9 0b       	sbc	r31, r25
     bd6:	e8 83       	st	Y, r30
     bd8:	41 11       	cpse	r20, r1
     bda:	20 c0       	rjmp	.+64     	; 0xc1c <print_decimal+0x16e>
     bdc:	e1 11       	cpse	r30, r1
     bde:	4f c0       	rjmp	.+158    	; 0xc7e <print_decimal+0x1d0>
     be0:	f1 10       	cpse	r15, r1
     be2:	0a c0       	rjmp	.+20     	; 0xbf8 <print_decimal+0x14a>
     be4:	51 11       	cpse	r21, r1
     be6:	0a c0       	rjmp	.+20     	; 0xbfc <print_decimal+0x14e>
     be8:	84 e0       	ldi	r24, 0x04	; 4
     bea:	90 e0       	ldi	r25, 0x00	; 0
     bec:	8c 19       	sub	r24, r12
     bee:	91 09       	sbc	r25, r1
     bf0:	03 97       	sbiw	r24, 0x03	; 3
     bf2:	74 f0       	brlt	.+28     	; 0xc10 <print_decimal+0x162>
     bf4:	c4 e0       	ldi	r28, 0x04	; 4
     bf6:	13 c0       	rjmp	.+38     	; 0xc1e <print_decimal+0x170>
     bf8:	c1 e0       	ldi	r28, 0x01	; 1
     bfa:	01 c0       	rjmp	.+2      	; 0xbfe <print_decimal+0x150>
     bfc:	c2 e0       	ldi	r28, 0x02	; 2
     bfe:	84 e0       	ldi	r24, 0x04	; 4
     c00:	90 e0       	ldi	r25, 0x00	; 0
     c02:	8c 19       	sub	r24, r12
     c04:	91 09       	sbc	r25, r1
     c06:	2c 2f       	mov	r18, r28
     c08:	30 e0       	ldi	r19, 0x00	; 0
     c0a:	82 17       	cp	r24, r18
     c0c:	93 07       	cpc	r25, r19
     c0e:	14 f4       	brge	.+4      	; 0xc14 <print_decimal+0x166>
     c10:	c4 e0       	ldi	r28, 0x04	; 4
     c12:	cc 19       	sub	r28, r12
     c14:	cf 5f       	subi	r28, 0xFF	; 255
     c16:	c5 30       	cpi	r28, 0x05	; 5
     c18:	10 f0       	brcs	.+4      	; 0xc1e <print_decimal+0x170>
     c1a:	38 c0       	rjmp	.+112    	; 0xc8c <print_decimal+0x1de>
     c1c:	c1 e0       	ldi	r28, 0x01	; 1
     c1e:	0f 2e       	mov	r0, r31
     c20:	f5 e0       	ldi	r31, 0x05	; 5
     c22:	af 2e       	mov	r10, r31
     c24:	b1 2c       	mov	r11, r1
     c26:	f0 2d       	mov	r31, r0
     c28:	e4 2e       	mov	r14, r20
     c2a:	f1 2c       	mov	r15, r1
     c2c:	d1 2c       	mov	r13, r1
     c2e:	0c 2f       	mov	r16, r28
     c30:	10 e0       	ldi	r17, 0x00	; 0
     c32:	45 01       	movw	r8, r10
     c34:	80 1a       	sub	r8, r16
     c36:	91 0a       	sbc	r9, r17
     c38:	e8 14       	cp	r14, r8
     c3a:	f9 04       	cpc	r15, r9
     c3c:	21 f4       	brne	.+8      	; 0xc46 <print_decimal+0x198>
     c3e:	80 91 f5 01 	lds	r24, 0x01F5	; 0x8001f5 <blink>
     c42:	88 23       	and	r24, r24
     c44:	c1 f0       	breq	.+48     	; 0xc76 <print_decimal+0x1c8>
     c46:	8c 2f       	mov	r24, r28
     c48:	0e 94 d2 01 	call	0x3a4	; 0x3a4 <selectseg>
     c4c:	12 98       	cbi	0x02, 2	; 2
     c4e:	8c 14       	cp	r8, r12
     c50:	9d 04       	cpc	r9, r13
     c52:	09 f4       	brne	.+2      	; 0xc56 <print_decimal+0x1a8>
     c54:	12 9a       	sbi	0x02, 2	; 2
     c56:	c4 30       	cpi	r28, 0x04	; 4
     c58:	11 f4       	brne	.+4      	; 0xc5e <print_decimal+0x1b0>
     c5a:	0e 94 9e 04 	call	0x93c	; 0x93c <print_gpsstatuspoint>
     c5e:	f8 01       	movw	r30, r16
     c60:	e9 5f       	subi	r30, 0xF9	; 249
     c62:	fd 4f       	sbci	r31, 0xFD	; 253
     c64:	80 81       	ld	r24, Z
     c66:	0e 94 9a 01 	call	0x334	; 0x334 <setseg>
     c6a:	8f ed       	ldi	r24, 0xDF	; 223
     c6c:	9e e2       	ldi	r25, 0x2E	; 46
     c6e:	01 97       	sbiw	r24, 0x01	; 1
     c70:	f1 f7       	brne	.-4      	; 0xc6e <print_decimal+0x1c0>
     c72:	00 c0       	rjmp	.+0      	; 0xc74 <print_decimal+0x1c6>
     c74:	00 00       	nop
     c76:	cf 5f       	subi	r28, 0xFF	; 255
     c78:	c5 30       	cpi	r28, 0x05	; 5
     c7a:	c8 f2       	brcs	.-78     	; 0xc2e <print_decimal+0x180>
     c7c:	07 c0       	rjmp	.+14     	; 0xc8c <print_decimal+0x1de>
     c7e:	84 e0       	ldi	r24, 0x04	; 4
     c80:	90 e0       	ldi	r25, 0x00	; 0
     c82:	8c 19       	sub	r24, r12
     c84:	91 09       	sbc	r25, r1
     c86:	22 f2       	brmi	.-120    	; 0xc10 <print_decimal+0x162>
     c88:	c1 e0       	ldi	r28, 0x01	; 1
     c8a:	c9 cf       	rjmp	.-110    	; 0xc1e <print_decimal+0x170>
     c8c:	df 91       	pop	r29
     c8e:	cf 91       	pop	r28
     c90:	1f 91       	pop	r17
     c92:	0f 91       	pop	r16
     c94:	ff 90       	pop	r15
     c96:	ef 90       	pop	r14
     c98:	df 90       	pop	r13
     c9a:	cf 90       	pop	r12
     c9c:	bf 90       	pop	r11
     c9e:	af 90       	pop	r10
     ca0:	9f 90       	pop	r9
     ca2:	8f 90       	pop	r8
     ca4:	08 95       	ret

00000ca6 <print_nodata>:
     ca6:	cf 93       	push	r28
     ca8:	81 e0       	ldi	r24, 0x01	; 1
     caa:	0e 94 d2 01 	call	0x3a4	; 0x3a4 <selectseg>
     cae:	12 98       	cbi	0x02, 2	; 2
     cb0:	c2 e0       	ldi	r28, 0x02	; 2
     cb2:	0c c0       	rjmp	.+24     	; 0xccc <print_nodata+0x26>
     cb4:	0e 94 9e 04 	call	0x93c	; 0x93c <print_gpsstatuspoint>
     cb8:	8a e0       	ldi	r24, 0x0A	; 10
     cba:	0e 94 9a 01 	call	0x334	; 0x334 <setseg>
     cbe:	8f ed       	ldi	r24, 0xDF	; 223
     cc0:	9e e2       	ldi	r25, 0x2E	; 46
     cc2:	01 97       	sbiw	r24, 0x01	; 1
     cc4:	f1 f7       	brne	.-4      	; 0xcc2 <print_nodata+0x1c>
     cc6:	00 c0       	rjmp	.+0      	; 0xcc8 <print_nodata+0x22>
     cc8:	00 00       	nop
     cca:	11 c0       	rjmp	.+34     	; 0xcee <print_nodata+0x48>
     ccc:	8a e0       	ldi	r24, 0x0A	; 10
     cce:	0e 94 9a 01 	call	0x334	; 0x334 <setseg>
     cd2:	8f ed       	ldi	r24, 0xDF	; 223
     cd4:	9e e2       	ldi	r25, 0x2E	; 46
     cd6:	01 97       	sbiw	r24, 0x01	; 1
     cd8:	f1 f7       	brne	.-4      	; 0xcd6 <print_nodata+0x30>
     cda:	00 c0       	rjmp	.+0      	; 0xcdc <print_nodata+0x36>
     cdc:	00 00       	nop
     cde:	8c 2f       	mov	r24, r28
     ce0:	0e 94 d2 01 	call	0x3a4	; 0x3a4 <selectseg>
     ce4:	12 98       	cbi	0x02, 2	; 2
     ce6:	cf 5f       	subi	r28, 0xFF	; 255
     ce8:	c5 30       	cpi	r28, 0x05	; 5
     cea:	81 f7       	brne	.-32     	; 0xccc <print_nodata+0x26>
     cec:	e3 cf       	rjmp	.-58     	; 0xcb4 <print_nodata+0xe>
     cee:	cf 91       	pop	r28
     cf0:	08 95       	ret

00000cf2 <print_Fr10>:
     cf2:	81 e0       	ldi	r24, 0x01	; 1
     cf4:	0e 94 d2 01 	call	0x3a4	; 0x3a4 <selectseg>
     cf8:	0e 94 b5 04 	call	0x96a	; 0x96a <select_F>
     cfc:	8f ed       	ldi	r24, 0xDF	; 223
     cfe:	9e e2       	ldi	r25, 0x2E	; 46
     d00:	01 97       	sbiw	r24, 0x01	; 1
     d02:	f1 f7       	brne	.-4      	; 0xd00 <print_Fr10+0xe>
     d04:	00 c0       	rjmp	.+0      	; 0xd06 <print_Fr10+0x14>
     d06:	00 00       	nop
     d08:	82 e0       	ldi	r24, 0x02	; 2
     d0a:	0e 94 d2 01 	call	0x3a4	; 0x3a4 <selectseg>
     d0e:	0e 94 d1 04 	call	0x9a2	; 0x9a2 <select_r>
     d12:	8f ed       	ldi	r24, 0xDF	; 223
     d14:	9e e2       	ldi	r25, 0x2E	; 46
     d16:	01 97       	sbiw	r24, 0x01	; 1
     d18:	f1 f7       	brne	.-4      	; 0xd16 <print_Fr10+0x24>
     d1a:	00 c0       	rjmp	.+0      	; 0xd1c <print_Fr10+0x2a>
     d1c:	00 00       	nop
     d1e:	83 e0       	ldi	r24, 0x03	; 3
     d20:	0e 94 d2 01 	call	0x3a4	; 0x3a4 <selectseg>
     d24:	81 e0       	ldi	r24, 0x01	; 1
     d26:	0e 94 9a 01 	call	0x334	; 0x334 <setseg>
     d2a:	8f ed       	ldi	r24, 0xDF	; 223
     d2c:	9e e2       	ldi	r25, 0x2E	; 46
     d2e:	01 97       	sbiw	r24, 0x01	; 1
     d30:	f1 f7       	brne	.-4      	; 0xd2e <print_Fr10+0x3c>
     d32:	00 c0       	rjmp	.+0      	; 0xd34 <print_Fr10+0x42>
     d34:	00 00       	nop
     d36:	84 e0       	ldi	r24, 0x04	; 4
     d38:	0e 94 d2 01 	call	0x3a4	; 0x3a4 <selectseg>
     d3c:	80 e0       	ldi	r24, 0x00	; 0
     d3e:	0e 94 9a 01 	call	0x334	; 0x334 <setseg>
     d42:	8f ed       	ldi	r24, 0xDF	; 223
     d44:	9e e2       	ldi	r25, 0x2E	; 46
     d46:	01 97       	sbiw	r24, 0x01	; 1
     d48:	f1 f7       	brne	.-4      	; 0xd46 <print_Fr10+0x54>
     d4a:	00 c0       	rjmp	.+0      	; 0xd4c <print_Fr10+0x5a>
     d4c:	00 00       	nop
     d4e:	08 95       	ret

00000d50 <print_dc>:
     d50:	81 e0       	ldi	r24, 0x01	; 1
     d52:	0e 94 d2 01 	call	0x3a4	; 0x3a4 <selectseg>
     d56:	0e 94 c3 04 	call	0x986	; 0x986 <select_d>
     d5a:	8f ed       	ldi	r24, 0xDF	; 223
     d5c:	9e e2       	ldi	r25, 0x2E	; 46
     d5e:	01 97       	sbiw	r24, 0x01	; 1
     d60:	f1 f7       	brne	.-4      	; 0xd5e <print_dc+0xe>
     d62:	00 c0       	rjmp	.+0      	; 0xd64 <print_dc+0x14>
     d64:	00 00       	nop
     d66:	82 e0       	ldi	r24, 0x02	; 2
     d68:	0e 94 d2 01 	call	0x3a4	; 0x3a4 <selectseg>
     d6c:	0e 94 ca 04 	call	0x994	; 0x994 <select_c>
     d70:	8f ed       	ldi	r24, 0xDF	; 223
     d72:	9e e2       	ldi	r25, 0x2E	; 46
     d74:	01 97       	sbiw	r24, 0x01	; 1
     d76:	f1 f7       	brne	.-4      	; 0xd74 <print_dc+0x24>
     d78:	00 c0       	rjmp	.+0      	; 0xd7a <print_dc+0x2a>
     d7a:	00 00       	nop
     d7c:	08 95       	ret

00000d7e <print_error>:
     d7e:	81 e0       	ldi	r24, 0x01	; 1
     d80:	0e 94 d2 01 	call	0x3a4	; 0x3a4 <selectseg>
     d84:	0e 94 bc 04 	call	0x978	; 0x978 <select_E>
     d88:	8f ed       	ldi	r24, 0xDF	; 223
     d8a:	9e e2       	ldi	r25, 0x2E	; 46
     d8c:	01 97       	sbiw	r24, 0x01	; 1
     d8e:	f1 f7       	brne	.-4      	; 0xd8c <print_error+0xe>
     d90:	00 c0       	rjmp	.+0      	; 0xd92 <print_error+0x14>
     d92:	00 00       	nop
     d94:	82 e0       	ldi	r24, 0x02	; 2
     d96:	0e 94 d2 01 	call	0x3a4	; 0x3a4 <selectseg>
     d9a:	0e 94 d1 04 	call	0x9a2	; 0x9a2 <select_r>
     d9e:	8f ed       	ldi	r24, 0xDF	; 223
     da0:	9e e2       	ldi	r25, 0x2E	; 46
     da2:	01 97       	sbiw	r24, 0x01	; 1
     da4:	f1 f7       	brne	.-4      	; 0xda2 <print_error+0x24>
     da6:	00 c0       	rjmp	.+0      	; 0xda8 <print_error+0x2a>
     da8:	00 00       	nop
     daa:	83 e0       	ldi	r24, 0x03	; 3
     dac:	0e 94 d2 01 	call	0x3a4	; 0x3a4 <selectseg>
     db0:	0e 94 d1 04 	call	0x9a2	; 0x9a2 <select_r>
     db4:	8f ed       	ldi	r24, 0xDF	; 223
     db6:	9e e2       	ldi	r25, 0x2E	; 46
     db8:	01 97       	sbiw	r24, 0x01	; 1
     dba:	f1 f7       	brne	.-4      	; 0xdb8 <print_error+0x3a>
     dbc:	00 c0       	rjmp	.+0      	; 0xdbe <print_error+0x40>
     dbe:	00 00       	nop
     dc0:	08 95       	ret

00000dc2 <HexToInt>:
	
	dec = (src & 0xF0) >> 4;
	units = src & 0x0F;
	
	
	return dec*10+units;
     dc2:	28 2f       	mov	r18, r24
     dc4:	22 95       	swap	r18
     dc6:	2f 70       	andi	r18, 0x0F	; 15
     dc8:	30 e0       	ldi	r19, 0x00	; 0
     dca:	a9 01       	movw	r20, r18
     dcc:	44 0f       	add	r20, r20
     dce:	55 1f       	adc	r21, r21
     dd0:	22 0f       	add	r18, r18
     dd2:	33 1f       	adc	r19, r19
     dd4:	22 0f       	add	r18, r18
     dd6:	33 1f       	adc	r19, r19
     dd8:	22 0f       	add	r18, r18
     dda:	33 1f       	adc	r19, r19
     ddc:	24 0f       	add	r18, r20
     dde:	35 1f       	adc	r19, r21
     de0:	8f 70       	andi	r24, 0x0F	; 15
}
     de2:	a9 01       	movw	r20, r18
     de4:	48 0f       	add	r20, r24
     de6:	51 1d       	adc	r21, r1
     de8:	ca 01       	movw	r24, r20
     dea:	08 95       	ret

00000dec <IntToHex>:
	int dec,units;
	
	dec = src / 10;
	units = src % 10;
	
	return (dec << 4) | units;
     dec:	6a e0       	ldi	r22, 0x0A	; 10
     dee:	70 e0       	ldi	r23, 0x00	; 0
     df0:	0e 94 f6 10 	call	0x21ec	; 0x21ec <__divmodhi4>
     df4:	62 95       	swap	r22
     df6:	72 95       	swap	r23
     df8:	70 7f       	andi	r23, 0xF0	; 240
     dfa:	76 27       	eor	r23, r22
     dfc:	60 7f       	andi	r22, 0xF0	; 240
     dfe:	76 27       	eor	r23, r22
	
}
     e00:	86 2b       	or	r24, r22
     e02:	08 95       	ret

00000e04 <CalculateABSPulse>:

void CalculateABSPulse()
{
     e04:	cf 92       	push	r12
     e06:	df 92       	push	r13
     e08:	ef 92       	push	r14
     e0a:	ff 92       	push	r15
	
	if (GPS_Speed == 0)
     e0c:	80 91 03 02 	lds	r24, 0x0203	; 0x800203 <GPS_Speed>
     e10:	90 91 04 02 	lds	r25, 0x0204	; 0x800204 <GPS_Speed+0x1>
     e14:	00 97       	sbiw	r24, 0x00	; 0
     e16:	59 f4       	brne	.+22     	; 0xe2e <CalculateABSPulse+0x2a>
	{
		   period = 0xFFFF;
     e18:	8f ef       	ldi	r24, 0xFF	; 255
     e1a:	9f ef       	ldi	r25, 0xFF	; 255
     e1c:	90 93 3b 02 	sts	0x023B, r25	; 0x80023b <period+0x1>
     e20:	80 93 3a 02 	sts	0x023A, r24	; 0x80023a <period>
		   dc=0xFFFF;
     e24:	90 93 80 01 	sts	0x0180, r25	; 0x800180 <dc+0x1>
     e28:	80 93 7f 01 	sts	0x017F, r24	; 0x80017f <dc>
		   return;
     e2c:	4f c0       	rjmp	.+158    	; 0xecc <CalculateABSPulse+0xc8>
	}
	if (Fr10_Pulse > 0)
     e2e:	20 91 1e 02 	lds	r18, 0x021E	; 0x80021e <Fr10_Pulse>
     e32:	30 91 1f 02 	lds	r19, 0x021F	; 0x80021f <Fr10_Pulse+0x1>
     e36:	21 15       	cp	r18, r1
     e38:	31 05       	cpc	r19, r1
     e3a:	e1 f0       	breq	.+56     	; 0xe74 <CalculateABSPulse+0x70>
	  period = round((float)5e6/(Fr10_Pulse*GPS_Speed));
     e3c:	82 9f       	mul	r24, r18
     e3e:	b0 01       	movw	r22, r0
     e40:	83 9f       	mul	r24, r19
     e42:	70 0d       	add	r23, r0
     e44:	92 9f       	mul	r25, r18
     e46:	70 0d       	add	r23, r0
     e48:	11 24       	eor	r1, r1
     e4a:	80 e0       	ldi	r24, 0x00	; 0
     e4c:	90 e0       	ldi	r25, 0x00	; 0
     e4e:	0e 94 fa 0d 	call	0x1bf4	; 0x1bf4 <__floatunsisf>
     e52:	9b 01       	movw	r18, r22
     e54:	ac 01       	movw	r20, r24
     e56:	60 e8       	ldi	r22, 0x80	; 128
     e58:	76 e9       	ldi	r23, 0x96	; 150
     e5a:	88 e9       	ldi	r24, 0x98	; 152
     e5c:	9a e4       	ldi	r25, 0x4A	; 74
     e5e:	0e 94 59 0d 	call	0x1ab2	; 0x1ab2 <__divsf3>
     e62:	0e 94 9d 0f 	call	0x1f3a	; 0x1f3a <round>
     e66:	0e 94 cb 0d 	call	0x1b96	; 0x1b96 <__fixunssfsi>
     e6a:	70 93 3b 02 	sts	0x023B, r23	; 0x80023b <period+0x1>
     e6e:	60 93 3a 02 	sts	0x023A, r22	; 0x80023a <period>
     e72:	06 c0       	rjmp	.+12     	; 0xe80 <CalculateABSPulse+0x7c>
	else
	  period = 0xFFFF; 
     e74:	8f ef       	ldi	r24, 0xFF	; 255
     e76:	9f ef       	ldi	r25, 0xFF	; 255
     e78:	90 93 3b 02 	sts	0x023B, r25	; 0x80023b <period+0x1>
     e7c:	80 93 3a 02 	sts	0x023A, r24	; 0x80023a <period>
	
	dc = round((float)period*dc_Pulse*0.01);
     e80:	60 91 3a 02 	lds	r22, 0x023A	; 0x80023a <period>
     e84:	70 91 3b 02 	lds	r23, 0x023B	; 0x80023b <period+0x1>
     e88:	80 e0       	ldi	r24, 0x00	; 0
     e8a:	90 e0       	ldi	r25, 0x00	; 0
     e8c:	0e 94 fa 0d 	call	0x1bf4	; 0x1bf4 <__floatunsisf>
     e90:	6b 01       	movw	r12, r22
     e92:	7c 01       	movw	r14, r24
     e94:	60 91 f7 01 	lds	r22, 0x01F7	; 0x8001f7 <dc_Pulse>
     e98:	70 91 f8 01 	lds	r23, 0x01F8	; 0x8001f8 <dc_Pulse+0x1>
     e9c:	80 e0       	ldi	r24, 0x00	; 0
     e9e:	90 e0       	ldi	r25, 0x00	; 0
     ea0:	0e 94 fa 0d 	call	0x1bf4	; 0x1bf4 <__floatunsisf>
     ea4:	9b 01       	movw	r18, r22
     ea6:	ac 01       	movw	r20, r24
     ea8:	c7 01       	movw	r24, r14
     eaa:	b6 01       	movw	r22, r12
     eac:	0e 94 e0 0e 	call	0x1dc0	; 0x1dc0 <__mulsf3>
     eb0:	2a e0       	ldi	r18, 0x0A	; 10
     eb2:	37 ed       	ldi	r19, 0xD7	; 215
     eb4:	43 e2       	ldi	r20, 0x23	; 35
     eb6:	5c e3       	ldi	r21, 0x3C	; 60
     eb8:	0e 94 e0 0e 	call	0x1dc0	; 0x1dc0 <__mulsf3>
     ebc:	0e 94 9d 0f 	call	0x1f3a	; 0x1f3a <round>
     ec0:	0e 94 cb 0d 	call	0x1b96	; 0x1b96 <__fixunssfsi>
     ec4:	70 93 80 01 	sts	0x0180, r23	; 0x800180 <dc+0x1>
     ec8:	60 93 7f 01 	sts	0x017F, r22	; 0x80017f <dc>
}
     ecc:	ff 90       	pop	r15
     ece:	ef 90       	pop	r14
     ed0:	df 90       	pop	r13
     ed2:	cf 90       	pop	r12
     ed4:	08 95       	ret

00000ed6 <AddDigitPulse>:

uint16_t AddDigitPulse(uint16_t src, uint16_t digit)
{
     ed6:	cf 92       	push	r12
     ed8:	df 92       	push	r13
     eda:	ef 92       	push	r14
     edc:	ff 92       	push	r15
     ede:	cf 93       	push	r28
     ee0:	df 93       	push	r29
     ee2:	ec 01       	movw	r28, r24
	uint16_t digit_fact = 0;
	uint16_t result = 0;
	uint16_t pow_t = 0;
	
	if (digit == 0) digit = 1;
     ee4:	61 15       	cp	r22, r1
     ee6:	71 05       	cpc	r23, r1
     ee8:	11 f4       	brne	.+4      	; 0xeee <AddDigitPulse+0x18>
     eea:	61 e0       	ldi	r22, 0x01	; 1
     eec:	70 e0       	ldi	r23, 0x00	; 0
		
	pow_t = round(pow(10,digit-1));
     eee:	61 50       	subi	r22, 0x01	; 1
     ef0:	71 09       	sbc	r23, r1
     ef2:	80 e0       	ldi	r24, 0x00	; 0
     ef4:	90 e0       	ldi	r25, 0x00	; 0
     ef6:	0e 94 fa 0d 	call	0x1bf4	; 0x1bf4 <__floatunsisf>
     efa:	9b 01       	movw	r18, r22
     efc:	ac 01       	movw	r20, r24
     efe:	60 e0       	ldi	r22, 0x00	; 0
     f00:	70 e0       	ldi	r23, 0x00	; 0
     f02:	80 e2       	ldi	r24, 0x20	; 32
     f04:	91 e4       	ldi	r25, 0x41	; 65
     f06:	0e 94 4d 0f 	call	0x1e9a	; 0x1e9a <pow>
     f0a:	0e 94 9d 0f 	call	0x1f3a	; 0x1f3a <round>
     f0e:	0e 94 cb 0d 	call	0x1b96	; 0x1b96 <__fixunssfsi>
     f12:	6b 01       	movw	r12, r22
     f14:	7c 01       	movw	r14, r24
		
	digit_fact =  (src / pow_t);
     f16:	ce 01       	movw	r24, r28
     f18:	b6 01       	movw	r22, r12
     f1a:	0e 94 e2 10 	call	0x21c4	; 0x21c4 <__udivmodhi4>
     f1e:	ab 01       	movw	r20, r22
	digit_fact = digit_fact % 10;
     f20:	9b 01       	movw	r18, r22
     f22:	ad ec       	ldi	r26, 0xCD	; 205
     f24:	bc ec       	ldi	r27, 0xCC	; 204
     f26:	0e 94 32 11 	call	0x2264	; 0x2264 <__umulhisi3>
     f2a:	9c 01       	movw	r18, r24
     f2c:	36 95       	lsr	r19
     f2e:	27 95       	ror	r18
     f30:	36 95       	lsr	r19
     f32:	27 95       	ror	r18
     f34:	36 95       	lsr	r19
     f36:	27 95       	ror	r18
     f38:	c9 01       	movw	r24, r18
     f3a:	88 0f       	add	r24, r24
     f3c:	99 1f       	adc	r25, r25
     f3e:	22 0f       	add	r18, r18
     f40:	33 1f       	adc	r19, r19
     f42:	22 0f       	add	r18, r18
     f44:	33 1f       	adc	r19, r19
     f46:	22 0f       	add	r18, r18
     f48:	33 1f       	adc	r19, r19
     f4a:	28 0f       	add	r18, r24
     f4c:	39 1f       	adc	r19, r25
     f4e:	ca 01       	movw	r24, r20
     f50:	82 1b       	sub	r24, r18
     f52:	93 0b       	sbc	r25, r19
     f54:	9c 01       	movw	r18, r24
	
	src -= digit_fact*pow_t;
     f56:	2c 9d       	mul	r18, r12
     f58:	c0 01       	movw	r24, r0
     f5a:	2d 9d       	mul	r18, r13
     f5c:	90 0d       	add	r25, r0
     f5e:	3c 9d       	mul	r19, r12
     f60:	90 0d       	add	r25, r0
     f62:	11 24       	eor	r1, r1
     f64:	c8 1b       	sub	r28, r24
     f66:	d9 0b       	sbc	r29, r25
	
	digit_fact++;
     f68:	2f 5f       	subi	r18, 0xFF	; 255
     f6a:	3f 4f       	sbci	r19, 0xFF	; 255
	
	if (digit_fact > 9) digit_fact = 0;
     f6c:	2a 30       	cpi	r18, 0x0A	; 10
     f6e:	31 05       	cpc	r19, r1
     f70:	10 f0       	brcs	.+4      	; 0xf76 <AddDigitPulse+0xa0>
     f72:	20 e0       	ldi	r18, 0x00	; 0
     f74:	30 e0       	ldi	r19, 0x00	; 0
	
	
	result = src + digit_fact*pow_t;
	
	return result;
     f76:	2c 9d       	mul	r18, r12
     f78:	c0 01       	movw	r24, r0
     f7a:	2d 9d       	mul	r18, r13
     f7c:	90 0d       	add	r25, r0
     f7e:	3c 9d       	mul	r19, r12
     f80:	90 0d       	add	r25, r0
     f82:	11 24       	eor	r1, r1
}
     f84:	8c 0f       	add	r24, r28
     f86:	9d 1f       	adc	r25, r29
     f88:	df 91       	pop	r29
     f8a:	cf 91       	pop	r28
     f8c:	ff 90       	pop	r15
     f8e:	ef 90       	pop	r14
     f90:	df 90       	pop	r13
     f92:	cf 90       	pop	r12
     f94:	08 95       	ret

00000f96 <CheckRangePulse>:


void CheckRangePulse()
{
	if (Fr10_Pulse > MAX_FREQ) Fr10_Pulse = MAX_FREQ;
     f96:	80 91 1e 02 	lds	r24, 0x021E	; 0x80021e <Fr10_Pulse>
     f9a:	90 91 1f 02 	lds	r25, 0x021F	; 0x80021f <Fr10_Pulse+0x1>
     f9e:	8f 3f       	cpi	r24, 0xFF	; 255
     fa0:	91 05       	cpc	r25, r1
     fa2:	41 f0       	breq	.+16     	; 0xfb4 <CheckRangePulse+0x1e>
     fa4:	38 f0       	brcs	.+14     	; 0xfb4 <CheckRangePulse+0x1e>
     fa6:	8f ef       	ldi	r24, 0xFF	; 255
     fa8:	90 e0       	ldi	r25, 0x00	; 0
     faa:	90 93 1f 02 	sts	0x021F, r25	; 0x80021f <Fr10_Pulse+0x1>
     fae:	80 93 1e 02 	sts	0x021E, r24	; 0x80021e <Fr10_Pulse>
     fb2:	08 c0       	rjmp	.+16     	; 0xfc4 <CheckRangePulse+0x2e>
	if (Fr10_Pulse < MIN_FREQ) Fr10_Pulse = MIN_FREQ;
     fb4:	89 2b       	or	r24, r25
     fb6:	31 f4       	brne	.+12     	; 0xfc4 <CheckRangePulse+0x2e>
     fb8:	81 e0       	ldi	r24, 0x01	; 1
     fba:	90 e0       	ldi	r25, 0x00	; 0
     fbc:	90 93 1f 02 	sts	0x021F, r25	; 0x80021f <Fr10_Pulse+0x1>
     fc0:	80 93 1e 02 	sts	0x021E, r24	; 0x80021e <Fr10_Pulse>
	
	if (dc_Pulse > MAX_DUTYCYCLE) dc_Pulse = MAX_DUTYCYCLE;
     fc4:	80 91 f7 01 	lds	r24, 0x01F7	; 0x8001f7 <dc_Pulse>
     fc8:	90 91 f8 01 	lds	r25, 0x01F8	; 0x8001f8 <dc_Pulse+0x1>
     fcc:	84 36       	cpi	r24, 0x64	; 100
     fce:	91 05       	cpc	r25, r1
     fd0:	38 f0       	brcs	.+14     	; 0xfe0 <CheckRangePulse+0x4a>
     fd2:	83 e6       	ldi	r24, 0x63	; 99
     fd4:	90 e0       	ldi	r25, 0x00	; 0
     fd6:	90 93 f8 01 	sts	0x01F8, r25	; 0x8001f8 <dc_Pulse+0x1>
     fda:	80 93 f7 01 	sts	0x01F7, r24	; 0x8001f7 <dc_Pulse>
     fde:	08 95       	ret
	if (dc_Pulse < MIN_DUTYCYCLE) dc_Pulse = MIN_DUTYCYCLE;
     fe0:	89 2b       	or	r24, r25
     fe2:	31 f4       	brne	.+12     	; 0xff0 <CheckRangePulse+0x5a>
     fe4:	81 e0       	ldi	r24, 0x01	; 1
     fe6:	90 e0       	ldi	r25, 0x00	; 0
     fe8:	90 93 f8 01 	sts	0x01F8, r25	; 0x8001f8 <dc_Pulse+0x1>
     fec:	80 93 f7 01 	sts	0x01F7, r24	; 0x8001f7 <dc_Pulse>
     ff0:	08 95       	ret

00000ff2 <main>:
}
int main(void)
{    
     ff2:	cf 93       	push	r28
     ff4:	df 93       	push	r29
     ff6:	cd b7       	in	r28, 0x3d	; 61
     ff8:	de b7       	in	r29, 0x3e	; 62
     ffa:	28 97       	sbiw	r28, 0x08	; 8
     ffc:	0f b6       	in	r0, 0x3f	; 63
     ffe:	f8 94       	cli
    1000:	de bf       	out	0x3e, r29	; 62
    1002:	0f be       	out	0x3f, r0	; 63
    1004:	cd bf       	out	0x3d, r28	; 61
    int s1,s2 = 0;
    1006:	1c 82       	std	Y+4, r1	; 0x04
    1008:	1b 82       	std	Y+3, r1	; 0x03
	unsigned char k;
	
	Meters.number = 0;
    100a:	10 92 2b 02 	sts	0x022B, r1	; 0x80022b <Meters>
    100e:	10 92 2c 02 	sts	0x022C, r1	; 0x80022c <Meters+0x1>
    1012:	10 92 2d 02 	sts	0x022D, r1	; 0x80022d <Meters+0x2>
    1016:	10 92 2e 02 	sts	0x022E, r1	; 0x80022e <Meters+0x3>
    period = 0xFFFF;
    101a:	8f ef       	ldi	r24, 0xFF	; 255
    101c:	9f ef       	ldi	r25, 0xFF	; 255
    101e:	90 93 3b 02 	sts	0x023B, r25	; 0x80023b <period+0x1>
    1022:	80 93 3a 02 	sts	0x023A, r24	; 0x80023a <period>
	dc=0xFFFF;	
    1026:	90 93 80 01 	sts	0x0180, r25	; 0x800180 <dc+0x1>
    102a:	80 93 7f 01 	sts	0x017F, r24	; 0x80017f <dc>
	
	//configuring outputs
	
    DDRA = 0xFF;
    102e:	81 b9       	out	0x01, r24	; 1
	DDRB = DIG1|DIG2|DIG3|DIG4;
    1030:	8f e0       	ldi	r24, 0x0F	; 15
    1032:	84 b9       	out	0x04, r24	; 4
	DDRC = LED2|LED3|LED4|LED5;
    1034:	88 e7       	ldi	r24, 0x78	; 120
    1036:	87 b9       	out	0x07, r24	; 7
	DDRD = PULSE;
    1038:	80 e8       	ldi	r24, 0x80	; 128
    103a:	8a b9       	out	0x0a, r24	; 10
	
	
	// set up timer0 
	TCCR0A = 0;
    103c:	14 bc       	out	0x24, r1	; 36
	TCCR0B = (1 << CS02)|(1 << CS00);//1024 divider
    103e:	95 e0       	ldi	r25, 0x05	; 5
    1040:	95 bd       	out	0x25, r25	; 37
	   
	TCNT0 = 0;
    1042:	16 bc       	out	0x26, r1	; 38
	   
	TIFR0 = (1<<TOV0);
    1044:	81 e0       	ldi	r24, 0x01	; 1
    1046:	85 bb       	out	0x15, r24	; 21
	TIMSK0 = (1<<TOIE0);
    1048:	80 93 6e 00 	sts	0x006E, r24	; 0x80006e <__TEXT_REGION_LENGTH__+0x7e006e>
	
	//set up timer1
	TCCR1A = 0;
    104c:	10 92 80 00 	sts	0x0080, r1	; 0x800080 <__TEXT_REGION_LENGTH__+0x7e0080>
	TCCR1B = (1 << CS12)|(1 << CS10); //1024 divider
    1050:	90 93 81 00 	sts	0x0081, r25	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
	
	TCNT1 = TIMER1_CALIBRATION;
    1054:	27 ef       	ldi	r18, 0xF7	; 247
    1056:	32 ec       	ldi	r19, 0xC2	; 194
    1058:	30 93 85 00 	sts	0x0085, r19	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    105c:	20 93 84 00 	sts	0x0084, r18	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
	
	TIFR1 = (1<<TOV1);
    1060:	86 bb       	out	0x16, r24	; 22
	TIMSK1 = (1<<TOIE1);
    1062:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
	
	TCCR2B = (1 << CS21);    //8 divider
    1066:	92 e0       	ldi	r25, 0x02	; 2
    1068:	90 93 b1 00 	sts	0x00B1, r25	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7e00b1>
	
	TCNT2 = TIMER2_CALIBRATION;
    106c:	9a ed       	ldi	r25, 0xDA	; 218
    106e:	90 93 b2 00 	sts	0x00B2, r25	; 0x8000b2 <__TEXT_REGION_LENGTH__+0x7e00b2>
	
	TIFR2 = (1<<TOV2);
    1072:	87 bb       	out	0x17, r24	; 23
	TIMSK2 = (1<<TOIE2);	
    1074:	80 93 70 00 	sts	0x0070, r24	; 0x800070 <__TEXT_REGION_LENGTH__+0x7e0070>
	
	
	WDTCSR |= (1<<WDCE) | (1<<WDE);	 
    1078:	e0 e6       	ldi	r30, 0x60	; 96
    107a:	f0 e0       	ldi	r31, 0x00	; 0
    107c:	80 81       	ld	r24, Z
    107e:	88 61       	ori	r24, 0x18	; 24
    1080:	80 83       	st	Z, r24
	WDTCSR = (1<<WDE) | (1<<WDP2) | (1<<WDP1);  //watchdog 1 sec reset
    1082:	8e e0       	ldi	r24, 0x0E	; 14
    1084:	80 83       	st	Z, r24
	   
	LoadEeprom();
    1086:	0e 94 00 01 	call	0x200	; 0x200 <LoadEeprom>
	
	// initializing USART0 connected to GPS 
	init_UART(); 
    108a:	0e 94 31 04 	call	0x862	; 0x862 <init_UART>
	
    TWI_MasterInit(60);
    108e:	8c e3       	ldi	r24, 0x3C	; 60
    1090:	90 e0       	ldi	r25, 0x00	; 0
    1092:	0e 94 f8 0b 	call	0x17f0	; 0x17f0 <TWI_MasterInit>
	
	  
	sei();   
    1096:	78 94       	sei
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    1098:	2f ef       	ldi	r18, 0xFF	; 255
    109a:	34 e3       	ldi	r19, 0x34	; 52
    109c:	8c e0       	ldi	r24, 0x0C	; 12
    109e:	21 50       	subi	r18, 0x01	; 1
    10a0:	30 40       	sbci	r19, 0x00	; 0
    10a2:	80 40       	sbci	r24, 0x00	; 0
    10a4:	e1 f7       	brne	.-8      	; 0x109e <main+0xac>
    10a6:	00 c0       	rjmp	.+0      	; 0x10a8 <main+0xb6>
    10a8:	00 00       	nop
	
	 _delay_ms(250); // delay for peripheral initialization
		 
	buff1[0] = (M41T56_ADR<<1)|0; //  M41T56 Slave receiver mode
    10aa:	0c e0       	ldi	r16, 0x0C	; 12
    10ac:	12 e0       	ldi	r17, 0x02	; 2
    10ae:	80 ed       	ldi	r24, 0xD0	; 208
    10b0:	d8 01       	movw	r26, r16
    10b2:	8c 93       	st	X, r24
	buff1[1] = 0x08;                 // set register pointer to 08H - using SRAM
    10b4:	88 e0       	ldi	r24, 0x08	; 8
    10b6:	11 96       	adiw	r26, 0x01	; 1
    10b8:	8c 93       	st	X, r24
		 
	TWI_SendData(buff1, 2);
    10ba:	62 e0       	ldi	r22, 0x02	; 2
    10bc:	c8 01       	movw	r24, r16
    10be:	0e 94 46 0c 	call	0x188c	; 0x188c <TWI_SendData>
		 
	buff1[0] = (M41T56_ADR<<1)|1; // M41T56 Slave transmitter mode
    10c2:	81 ed       	ldi	r24, 0xD1	; 209
    10c4:	f8 01       	movw	r30, r16
    10c6:	80 83       	st	Z, r24
	TWI_SendData(buff1, 7);
    10c8:	67 e0       	ldi	r22, 0x07	; 7
    10ca:	c8 01       	movw	r24, r16
    10cc:	0e 94 46 0c 	call	0x188c	; 0x188c <TWI_SendData>
		 
	TWI_GetData(buff1, 7); // get 6 bytes from M41T56
    10d0:	67 e0       	ldi	r22, 0x07	; 7
    10d2:	c8 01       	movw	r24, r16
    10d4:	0e 94 69 0c 	call	0x18d2	; 0x18d2 <TWI_GetData>
		 
	for (k=0; k<=3; k++)   //Load stored meters count
	Meters.bytes[k] = buff1[k+1];
    10d8:	eb e2       	ldi	r30, 0x2B	; 43
    10da:	f2 e0       	ldi	r31, 0x02	; 2
    10dc:	d8 01       	movw	r26, r16
    10de:	11 96       	adiw	r26, 0x01	; 1
    10e0:	8c 91       	ld	r24, X
    10e2:	11 97       	sbiw	r26, 0x01	; 1
    10e4:	80 83       	st	Z, r24
    10e6:	12 96       	adiw	r26, 0x02	; 2
    10e8:	8c 91       	ld	r24, X
    10ea:	12 97       	sbiw	r26, 0x02	; 2
    10ec:	81 83       	std	Z+1, r24	; 0x01
    10ee:	13 96       	adiw	r26, 0x03	; 3
    10f0:	8c 91       	ld	r24, X
    10f2:	13 97       	sbiw	r26, 0x03	; 3
    10f4:	82 83       	std	Z+2, r24	; 0x02
    10f6:	14 96       	adiw	r26, 0x04	; 4
    10f8:	8c 91       	ld	r24, X
    10fa:	14 97       	sbiw	r26, 0x04	; 4
    10fc:	83 83       	std	Z+3, r24	; 0x03
		 
	UTC_TCorrection = buff1[5];
    10fe:	15 96       	adiw	r26, 0x05	; 5
    1100:	8c 91       	ld	r24, X
    1102:	15 97       	sbiw	r26, 0x05	; 5
    1104:	80 93 f9 01 	sts	0x01F9, r24	; 0x8001f9 <UTC_TCorrection>
		 
	CurrScreen = buff1[6]; 
    1108:	16 96       	adiw	r26, 0x06	; 6
    110a:	9c 91       	ld	r25, X
    110c:	90 93 07 02 	sts	0x0207, r25	; 0x800207 <CurrScreen>
	
	if ((CurrScreen > 5)||(CurrScreen == 0)) CurrScreen = 1;
    1110:	91 50       	subi	r25, 0x01	; 1
    1112:	95 30       	cpi	r25, 0x05	; 5
    1114:	18 f0       	brcs	.+6      	; 0x111c <main+0x12a>
    1116:	91 e0       	ldi	r25, 0x01	; 1
    1118:	90 93 07 02 	sts	0x0207, r25	; 0x800207 <CurrScreen>
		 
	if ((UTC_TCorrection > 13) || (UTC_TCorrection < -12)) UTC_TCorrection = 0; 
    111c:	84 5f       	subi	r24, 0xF4	; 244
    111e:	8a 31       	cpi	r24, 0x1A	; 26
    1120:	10 f0       	brcs	.+4      	; 0x1126 <main+0x134>
    1122:	10 92 f9 01 	sts	0x01F9, r1	; 0x8001f9 <UTC_TCorrection>
	 
   
	 
	 if (Timer1_en >= 3) // Load to SRAM actual meter count each 3 seconds
	 {
		 buff1[0] = (M41T56_ADR<<1)|0; //  M41T56 Slave receiver mode
    1126:	0c e0       	ldi	r16, 0x0C	; 12
    1128:	12 e0       	ldi	r17, 0x02	; 2
		 buff1[1] = 0x08;              // set register pointer to 08H - using SRAM
		 
		 for (k=0; k<=3; k++)          // write new meters count
		 		 buff1[k+2] = Meters.bytes[k]; 
    112a:	0f 2e       	mov	r0, r31
    112c:	fb e2       	ldi	r31, 0x2B	; 43
    112e:	ef 2e       	mov	r14, r31
    1130:	f2 e0       	ldi	r31, 0x02	; 2
    1132:	ff 2e       	mov	r15, r31
    1134:	f0 2d       	mov	r31, r0
	     	CalculateABSPulse();
	     	
     	}


		 sscanf(AltitudaMSL,"%d.%1d",&s1,&s2);
    1136:	6e 01       	movw	r12, r28
    1138:	b3 e0       	ldi	r27, 0x03	; 3
    113a:	cb 0e       	add	r12, r27
    113c:	d1 1c       	adc	r13, r1
    113e:	fe 01       	movw	r30, r28
    1140:	31 96       	adiw	r30, 0x01	; 1
    1142:	1f 01       	movw	r2, r30
    1144:	0f 2e       	mov	r0, r31
    1146:	fa e0       	ldi	r31, 0x0A	; 10
    1148:	4f 2e       	mov	r4, r31
    114a:	f1 e0       	ldi	r31, 0x01	; 1
    114c:	5f 2e       	mov	r5, r31
    114e:	f0 2d       	mov	r31, r0
    1150:	0f 2e       	mov	r0, r31
    1152:	ff e9       	ldi	r31, 0x9F	; 159
    1154:	6f 2e       	mov	r6, r31
    1156:	f1 e0       	ldi	r31, 0x01	; 1
    1158:	7f 2e       	mov	r7, r31
    115a:	f0 2d       	mov	r31, r0


    while (1)      // main cycle
    {  	
	
	 asm("wdr");    //watchdog reset
    115c:	a8 95       	wdr
	 
   
	 
	 if (Timer1_en >= 3) // Load to SRAM actual meter count each 3 seconds
    115e:	80 91 fb 01 	lds	r24, 0x01FB	; 0x8001fb <Timer1_en>
    1162:	83 30       	cpi	r24, 0x03	; 3
    1164:	08 f1       	brcs	.+66     	; 0x11a8 <main+0x1b6>
	 {
		 buff1[0] = (M41T56_ADR<<1)|0; //  M41T56 Slave receiver mode
    1166:	e0 ed       	ldi	r30, 0xD0	; 208
    1168:	d8 01       	movw	r26, r16
    116a:	ec 93       	st	X, r30
		 buff1[1] = 0x08;              // set register pointer to 08H - using SRAM
    116c:	88 e0       	ldi	r24, 0x08	; 8
    116e:	11 96       	adiw	r26, 0x01	; 1
    1170:	8c 93       	st	X, r24
		 
		 for (k=0; k<=3; k++)          // write new meters count
		 		 buff1[k+2] = Meters.bytes[k]; 
    1172:	d7 01       	movw	r26, r14
    1174:	8c 91       	ld	r24, X
    1176:	f8 01       	movw	r30, r16
    1178:	82 83       	std	Z+2, r24	; 0x02
    117a:	11 96       	adiw	r26, 0x01	; 1
    117c:	8c 91       	ld	r24, X
    117e:	11 97       	sbiw	r26, 0x01	; 1
    1180:	83 83       	std	Z+3, r24	; 0x03
    1182:	12 96       	adiw	r26, 0x02	; 2
    1184:	8c 91       	ld	r24, X
    1186:	12 97       	sbiw	r26, 0x02	; 2
    1188:	84 83       	std	Z+4, r24	; 0x04
    118a:	13 96       	adiw	r26, 0x03	; 3
    118c:	8c 91       	ld	r24, X
    118e:	85 83       	std	Z+5, r24	; 0x05
		 
		 buff1[6] = UTC_TCorrection;
    1190:	80 91 f9 01 	lds	r24, 0x01F9	; 0x8001f9 <UTC_TCorrection>
    1194:	86 83       	std	Z+6, r24	; 0x06
		 buff1[7] = CurrScreen;
    1196:	80 91 07 02 	lds	r24, 0x0207	; 0x800207 <CurrScreen>
    119a:	87 83       	std	Z+7, r24	; 0x07
		 
		 TWI_SendData(buff1, 8);
    119c:	68 e0       	ldi	r22, 0x08	; 8
    119e:	c8 01       	movw	r24, r16
    11a0:	0e 94 46 0c 	call	0x188c	; 0x188c <TWI_SendData>
		 Timer1_en = 0;
    11a4:	10 92 fb 01 	sts	0x01FB, r1	; 0x8001fb <Timer1_en>
	 }
	  
	  if ((Key1button == 0) && (Key1_store >= KEY1_PUSH_DELAY) && (Key1_store <= KEY1_MIDDLEPUSH_DELAY) && (Key1_delay == 0)) // Simple push button
    11a8:	80 91 33 02 	lds	r24, 0x0233	; 0x800233 <Key1button>
    11ac:	81 11       	cpse	r24, r1
    11ae:	8a c0       	rjmp	.+276    	; 0x12c4 <main+0x2d2>
    11b0:	b0 90 06 02 	lds	r11, 0x0206	; 0x800206 <Key1_store>
    11b4:	8b ef       	ldi	r24, 0xFB	; 251
    11b6:	8b 0d       	add	r24, r11
    11b8:	8e 32       	cpi	r24, 0x2E	; 46
    11ba:	08 f0       	brcs	.+2      	; 0x11be <main+0x1cc>
    11bc:	53 c0       	rjmp	.+166    	; 0x1264 <main+0x272>
    11be:	80 91 25 02 	lds	r24, 0x0225	; 0x800225 <Key1_delay>
    11c2:	81 11       	cpse	r24, r1
    11c4:	4f c0       	rjmp	.+158    	; 0x1264 <main+0x272>
	  {		
		  	  if (UTC_Change)  // UTC time change mode
    11c6:	80 91 23 02 	lds	r24, 0x0223	; 0x800223 <UTC_Change>
    11ca:	88 23       	and	r24, r24
    11cc:	89 f0       	breq	.+34     	; 0x11f0 <main+0x1fe>
			  {
					UTC_TCorrection++;
    11ce:	80 91 f9 01 	lds	r24, 0x01F9	; 0x8001f9 <UTC_TCorrection>
    11d2:	8f 5f       	subi	r24, 0xFF	; 255
    11d4:	80 93 f9 01 	sts	0x01F9, r24	; 0x8001f9 <UTC_TCorrection>
					if (UTC_TCorrection > 13) UTC_TCorrection = -12;
    11d8:	8e 30       	cpi	r24, 0x0E	; 14
    11da:	24 f0       	brlt	.+8      	; 0x11e4 <main+0x1f2>
    11dc:	84 ef       	ldi	r24, 0xF4	; 244
    11de:	80 93 f9 01 	sts	0x01F9, r24	; 0x8001f9 <UTC_TCorrection>
    11e2:	02 c3       	rjmp	.+1540   	; 0x17e8 <main+0x7f6>
					
					if (UTC_TCorrection < -12) UTC_TCorrection = 0;
    11e4:	84 3f       	cpi	r24, 0xF4	; 244
    11e6:	0c f0       	brlt	.+2      	; 0x11ea <main+0x1f8>
    11e8:	ff c2       	rjmp	.+1534   	; 0x17e8 <main+0x7f6>
    11ea:	10 92 f9 01 	sts	0x01F9, r1	; 0x8001f9 <UTC_TCorrection>
    11ee:	fc c2       	rjmp	.+1528   	; 0x17e8 <main+0x7f6>
			  } else
				
			 if (SetPulseScreen == 1)
    11f0:	80 91 3c 02 	lds	r24, 0x023C	; 0x80023c <SetPulseScreen>
    11f4:	81 30       	cpi	r24, 0x01	; 1
    11f6:	a1 f4       	brne	.+40     	; 0x1220 <main+0x22e>
			 {
				if (Fr10_Change)
    11f8:	60 91 24 02 	lds	r22, 0x0224	; 0x800224 <Fr10_Change>
    11fc:	66 23       	and	r22, r22
    11fe:	61 f0       	breq	.+24     	; 0x1218 <main+0x226>
				{
							
					Fr10_Pulse=AddDigitPulse(Fr10_Pulse,Fr10_Change);
    1200:	70 e0       	ldi	r23, 0x00	; 0
    1202:	80 91 1e 02 	lds	r24, 0x021E	; 0x80021e <Fr10_Pulse>
    1206:	90 91 1f 02 	lds	r25, 0x021F	; 0x80021f <Fr10_Pulse+0x1>
    120a:	0e 94 6b 07 	call	0xed6	; 0xed6 <AddDigitPulse>
    120e:	90 93 1f 02 	sts	0x021F, r25	; 0x80021f <Fr10_Pulse+0x1>
    1212:	80 93 1e 02 	sts	0x021E, r24	; 0x80021e <Fr10_Pulse>
    1216:	e8 c2       	rjmp	.+1488   	; 0x17e8 <main+0x7f6>
					
	   
				} else
				Fr10_Change=1;
    1218:	81 e0       	ldi	r24, 0x01	; 1
    121a:	80 93 24 02 	sts	0x0224, r24	; 0x800224 <Fr10_Change>
    121e:	e4 c2       	rjmp	.+1480   	; 0x17e8 <main+0x7f6>
				
				
			 } else
			
			 if (SetPulseScreen == 2)
    1220:	82 30       	cpi	r24, 0x02	; 2
    1222:	a1 f4       	brne	.+40     	; 0x124c <main+0x25a>
			 {
			    if (dc_Change)
    1224:	60 91 fa 01 	lds	r22, 0x01FA	; 0x8001fa <dc_Change>
    1228:	66 23       	and	r22, r22
    122a:	61 f0       	breq	.+24     	; 0x1244 <main+0x252>
				{
					dc_Pulse =AddDigitPulse(dc_Pulse,dc_Change);
    122c:	70 e0       	ldi	r23, 0x00	; 0
    122e:	80 91 f7 01 	lds	r24, 0x01F7	; 0x8001f7 <dc_Pulse>
    1232:	90 91 f8 01 	lds	r25, 0x01F8	; 0x8001f8 <dc_Pulse+0x1>
    1236:	0e 94 6b 07 	call	0xed6	; 0xed6 <AddDigitPulse>
    123a:	90 93 f8 01 	sts	0x01F8, r25	; 0x8001f8 <dc_Pulse+0x1>
    123e:	80 93 f7 01 	sts	0x01F7, r24	; 0x8001f7 <dc_Pulse>
    1242:	d2 c2       	rjmp	.+1444   	; 0x17e8 <main+0x7f6>
					
				} else
				dc_Change =1;
    1244:	81 e0       	ldi	r24, 0x01	; 1
    1246:	80 93 fa 01 	sts	0x01FA, r24	; 0x8001fa <dc_Change>
    124a:	ce c2       	rjmp	.+1436   	; 0x17e8 <main+0x7f6>
				
			 } else
			 

				
			 if (CurrScreen < 5) CurrScreen++;  // change current screen
    124c:	80 91 07 02 	lds	r24, 0x0207	; 0x800207 <CurrScreen>
    1250:	85 30       	cpi	r24, 0x05	; 5
    1252:	20 f4       	brcc	.+8      	; 0x125c <main+0x26a>
    1254:	8f 5f       	subi	r24, 0xFF	; 255
    1256:	80 93 07 02 	sts	0x0207, r24	; 0x800207 <CurrScreen>
    125a:	c6 c2       	rjmp	.+1420   	; 0x17e8 <main+0x7f6>
			 
			    else CurrScreen=1;
    125c:	81 e0       	ldi	r24, 0x01	; 1
    125e:	80 93 07 02 	sts	0x0207, r24	; 0x800207 <CurrScreen>
    1262:	c2 c2       	rjmp	.+1412   	; 0x17e8 <main+0x7f6>
			  	  	  
	  }
	  
	  
	  
	  if ((Key1button == 0) && (Key1_store >= KEY1_MIDDLEPUSH_DELAY) && (Key1_store <= KEY1_LONGPUSH_DELAY) && Key1_En) // Middle (around 1,5sec) push button
    1264:	8e ec       	ldi	r24, 0xCE	; 206
    1266:	8b 0d       	add	r24, r11
    1268:	83 33       	cpi	r24, 0x33	; 51
    126a:	08 f0       	brcs	.+2      	; 0x126e <main+0x27c>
    126c:	ba c2       	rjmp	.+1396   	; 0x17e2 <main+0x7f0>
    126e:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <Key1_En>
    1272:	88 23       	and	r24, r24
    1274:	09 f4       	brne	.+2      	; 0x1278 <main+0x286>
    1276:	b5 c2       	rjmp	.+1386   	; 0x17e2 <main+0x7f0>
	  {
		   
		   CheckRangePulse();
    1278:	0e 94 cb 07 	call	0xf96	; 0xf96 <CheckRangePulse>
		   
		   if (SetPulseScreen == 1)
    127c:	80 91 3c 02 	lds	r24, 0x023C	; 0x80023c <SetPulseScreen>
    1280:	81 30       	cpi	r24, 0x01	; 1
    1282:	61 f4       	brne	.+24     	; 0x129c <main+0x2aa>
		   {
			    Fr10_Change++;
    1284:	80 91 24 02 	lds	r24, 0x0224	; 0x800224 <Fr10_Change>
    1288:	8f 5f       	subi	r24, 0xFF	; 255
			   	if (Fr10_Change > 3) Fr10_Change = 1;
    128a:	84 30       	cpi	r24, 0x04	; 4
    128c:	18 f4       	brcc	.+6      	; 0x1294 <main+0x2a2>
		   
		   CheckRangePulse();
		   
		   if (SetPulseScreen == 1)
		   {
			    Fr10_Change++;
    128e:	80 93 24 02 	sts	0x0224, r24	; 0x800224 <Fr10_Change>
    1292:	11 c0       	rjmp	.+34     	; 0x12b6 <main+0x2c4>
			   	if (Fr10_Change > 3) Fr10_Change = 1;
    1294:	81 e0       	ldi	r24, 0x01	; 1
    1296:	80 93 24 02 	sts	0x0224, r24	; 0x800224 <Fr10_Change>
    129a:	0d c0       	rjmp	.+26     	; 0x12b6 <main+0x2c4>
				
		   
		   } else
		   if (SetPulseScreen == 2)
    129c:	82 30       	cpi	r24, 0x02	; 2
    129e:	59 f4       	brne	.+22     	; 0x12b6 <main+0x2c4>
		   {
			   dc_Change++;
    12a0:	80 91 fa 01 	lds	r24, 0x01FA	; 0x8001fa <dc_Change>
    12a4:	8f 5f       	subi	r24, 0xFF	; 255
			   if (dc_Change > 2) dc_Change = 1;
    12a6:	83 30       	cpi	r24, 0x03	; 3
    12a8:	18 f4       	brcc	.+6      	; 0x12b0 <main+0x2be>
				
		   
		   } else
		   if (SetPulseScreen == 2)
		   {
			   dc_Change++;
    12aa:	80 93 fa 01 	sts	0x01FA, r24	; 0x8001fa <dc_Change>
    12ae:	03 c0       	rjmp	.+6      	; 0x12b6 <main+0x2c4>
			   if (dc_Change > 2) dc_Change = 1;
    12b0:	81 e0       	ldi	r24, 0x01	; 1
    12b2:	80 93 fa 01 	sts	0x01FA, r24	; 0x8001fa <dc_Change>
		   }	   
		  
		  Key1_En = 0;
    12b6:	10 92 04 01 	sts	0x0104, r1	; 0x800104 <Key1_En>
		  Key1_delay = KEY1_OFF_DELAY;
    12ba:	85 e0       	ldi	r24, 0x05	; 5
    12bc:	80 93 25 02 	sts	0x0225, r24	; 0x800225 <Key1_delay>
		  blink = 0;
    12c0:	10 92 f5 01 	sts	0x01F5, r1	; 0x8001f5 <blink>
	  
	  }
	  
	  Key1_store = Key1button; 
    12c4:	80 91 33 02 	lds	r24, 0x0233	; 0x800233 <Key1button>
    12c8:	80 93 06 02 	sts	0x0206, r24	; 0x800206 <Key1_store>
	  
	   if ((Key1_store >= KEY1_LONGPUSH_DELAY) && Key1_En) // Long (around 3sec) push button
    12cc:	84 36       	cpi	r24, 0x64	; 100
    12ce:	08 f4       	brcc	.+2      	; 0x12d2 <main+0x2e0>
    12d0:	62 c0       	rjmp	.+196    	; 0x1396 <main+0x3a4>
    12d2:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <Key1_En>
    12d6:	88 23       	and	r24, r24
    12d8:	09 f4       	brne	.+2      	; 0x12dc <main+0x2ea>
    12da:	5d c0       	rjmp	.+186    	; 0x1396 <main+0x3a4>
	   {		   
		  if (CurrScreen == 1)
    12dc:	80 91 07 02 	lds	r24, 0x0207	; 0x800207 <CurrScreen>
    12e0:	81 30       	cpi	r24, 0x01	; 1
    12e2:	99 f4       	brne	.+38     	; 0x130a <main+0x318>
		  {
			 
			 SetPulseScreen++;
    12e4:	80 91 3c 02 	lds	r24, 0x023C	; 0x80023c <SetPulseScreen>
    12e8:	8f 5f       	subi	r24, 0xFF	; 255
			 if (SetPulseScreen > 2) SetPulseScreen = 0; 
    12ea:	83 30       	cpi	r24, 0x03	; 3
    12ec:	18 f4       	brcc	.+6      	; 0x12f4 <main+0x302>
	   if ((Key1_store >= KEY1_LONGPUSH_DELAY) && Key1_En) // Long (around 3sec) push button
	   {		   
		  if (CurrScreen == 1)
		  {
			 
			 SetPulseScreen++;
    12ee:	80 93 3c 02 	sts	0x023C, r24	; 0x80023c <SetPulseScreen>
    12f2:	02 c0       	rjmp	.+4      	; 0x12f8 <main+0x306>
			 if (SetPulseScreen > 2) SetPulseScreen = 0; 
    12f4:	10 92 3c 02 	sts	0x023C, r1	; 0x80023c <SetPulseScreen>
			
			 Fr10_Change = 0;
    12f8:	10 92 24 02 	sts	0x0224, r1	; 0x800224 <Fr10_Change>
			 dc_Change = 0;
    12fc:	10 92 fa 01 	sts	0x01FA, r1	; 0x8001fa <dc_Change>
			 
			 CheckRangePulse();
    1300:	0e 94 cb 07 	call	0xf96	; 0xf96 <CheckRangePulse>

			 WriteEeprom();
    1304:	0e 94 51 01 	call	0x2a2	; 0x2a2 <WriteEeprom>
    1308:	41 c0       	rjmp	.+130    	; 0x138c <main+0x39a>
		  } else
		  
		  
		   if (CurrScreen == 2)    //reset distance
    130a:	82 30       	cpi	r24, 0x02	; 2
    130c:	19 f5       	brne	.+70     	; 0x1354 <main+0x362>
		   {
			
		     Meters.number = 0;
    130e:	10 92 2b 02 	sts	0x022B, r1	; 0x80022b <Meters>
    1312:	10 92 2c 02 	sts	0x022C, r1	; 0x80022c <Meters+0x1>
    1316:	10 92 2d 02 	sts	0x022D, r1	; 0x80022d <Meters+0x2>
    131a:	10 92 2e 02 	sts	0x022E, r1	; 0x80022e <Meters+0x3>
		     Distance = 0;
    131e:	10 92 02 02 	sts	0x0202, r1	; 0x800202 <Distance+0x1>
    1322:	10 92 01 02 	sts	0x0201, r1	; 0x800201 <Distance>
		   
		     buff1[0] = (M41T56_ADR<<1)|0; //  M41T56 Slave receiver mode
    1326:	e0 ed       	ldi	r30, 0xD0	; 208
    1328:	d8 01       	movw	r26, r16
    132a:	ec 93       	st	X, r30
		     buff1[1] = 0x08;              // set register pointer to 08H - using SRAM 
    132c:	88 e0       	ldi	r24, 0x08	; 8
    132e:	11 96       	adiw	r26, 0x01	; 1
    1330:	8c 93       	st	X, r24
    1332:	11 97       	sbiw	r26, 0x01	; 1
		   
		     for (k=0; k<=3; k++)	   buff1[k+2] = 0;                 // Clear distance
    1334:	12 96       	adiw	r26, 0x02	; 2
    1336:	1c 92       	st	X, r1
    1338:	12 97       	sbiw	r26, 0x02	; 2
    133a:	13 96       	adiw	r26, 0x03	; 3
    133c:	1c 92       	st	X, r1
    133e:	13 97       	sbiw	r26, 0x03	; 3
    1340:	14 96       	adiw	r26, 0x04	; 4
    1342:	1c 92       	st	X, r1
    1344:	14 97       	sbiw	r26, 0x04	; 4
    1346:	15 96       	adiw	r26, 0x05	; 5
    1348:	1c 92       	st	X, r1
		  			  
		     TWI_SendData(buff1, 6);
    134a:	66 e0       	ldi	r22, 0x06	; 6
    134c:	c8 01       	movw	r24, r16
    134e:	0e 94 46 0c 	call	0x188c	; 0x188c <TWI_SendData>
    1352:	1c c0       	rjmp	.+56     	; 0x138c <main+0x39a>
		   } else
		   		   
		   if (CurrScreen == 4)    // Change UTC correction
    1354:	84 30       	cpi	r24, 0x04	; 4
    1356:	d1 f4       	brne	.+52     	; 0x138c <main+0x39a>
		   {
			   if (UTC_Change)
    1358:	80 91 23 02 	lds	r24, 0x0223	; 0x800223 <UTC_Change>
    135c:	88 23       	and	r24, r24
    135e:	79 f0       	breq	.+30     	; 0x137e <main+0x38c>
			   {
				   //Save actual UTC time to SRAM memory
				   buff1[0] = (M41T56_ADR<<1)|0; //  M41T56 Slave receiver mode
    1360:	e0 ed       	ldi	r30, 0xD0	; 208
    1362:	d8 01       	movw	r26, r16
    1364:	ec 93       	st	X, r30
				   buff1[1] = 0x0C;              // set register pointer to 0CH - using SRAM
    1366:	8c e0       	ldi	r24, 0x0C	; 12
    1368:	11 96       	adiw	r26, 0x01	; 1
    136a:	8c 93       	st	X, r24
    136c:	11 97       	sbiw	r26, 0x01	; 1
				   buff1[2]	= UTC_TCorrection;
    136e:	80 91 f9 01 	lds	r24, 0x01F9	; 0x8001f9 <UTC_TCorrection>
    1372:	12 96       	adiw	r26, 0x02	; 2
    1374:	8c 93       	st	X, r24
				   		     
				   TWI_SendData(buff1, 3);
    1376:	63 e0       	ldi	r22, 0x03	; 3
    1378:	c8 01       	movw	r24, r16
    137a:	0e 94 46 0c 	call	0x188c	; 0x188c <TWI_SendData>
			   }
			   
			   UTC_Change = !UTC_Change;
    137e:	81 e0       	ldi	r24, 0x01	; 1
    1380:	90 91 23 02 	lds	r25, 0x0223	; 0x800223 <UTC_Change>
    1384:	91 11       	cpse	r25, r1
    1386:	80 e0       	ldi	r24, 0x00	; 0
    1388:	80 93 23 02 	sts	0x0223, r24	; 0x800223 <UTC_Change>
		   }
			   
		   Key1_En = 0;
    138c:	10 92 04 01 	sts	0x0104, r1	; 0x800104 <Key1_En>
		   Key1_delay = KEY1_OFF_DELAY;
    1390:	85 e0       	ldi	r24, 0x05	; 5
    1392:	80 93 25 02 	sts	0x0225, r24	; 0x800225 <Key1_delay>
	   } 
		  	   

	 
	  setled(CurrScreen); //set information LED
    1396:	80 91 07 02 	lds	r24, 0x0207	; 0x800207 <CurrScreen>
    139a:	0e 94 6e 01 	call	0x2dc	; 0x2dc <setled>
	    
	  if (RXwaitpause > 5) // GPS receiver did sent all data per 1 second, processing values
    139e:	80 91 20 02 	lds	r24, 0x0220	; 0x800220 <RXwaitpause>
    13a2:	86 30       	cpi	r24, 0x06	; 6
    13a4:	08 f4       	brcc	.+2      	; 0x13a8 <main+0x3b6>
    13a6:	57 c1       	rjmp	.+686    	; 0x1656 <main+0x664>
	  {

		 
		 GPS_Status = Status[0];
    13a8:	a7 ee       	ldi	r26, 0xE7	; 231
    13aa:	b1 e0       	ldi	r27, 0x01	; 1
    13ac:	8c 91       	ld	r24, X
    13ae:	80 93 05 02 	sts	0x0205, r24	; 0x800205 <GPS_Status>
		 
		 if (GPS_Status == 'A')
    13b2:	81 34       	cpi	r24, 0x41	; 65
    13b4:	c9 f5       	brne	.+114    	; 0x1428 <main+0x436>
		     if (fPrevLatitude == 0) fPrevLatitude = fLatitude;
		     if (fPrevLongitude == 0) fPrevLongitude = fLongitude;
			*/

					 
			sscanf(Knot,"%d.%1d",&s1,&s2);
    13b6:	df 92       	push	r13
    13b8:	cf 92       	push	r12
    13ba:	3f 92       	push	r3
    13bc:	2f 92       	push	r2
    13be:	5f 92       	push	r5
    13c0:	4f 92       	push	r4
    13c2:	e3 e8       	ldi	r30, 0x83	; 131
    13c4:	f1 e0       	ldi	r31, 0x01	; 1
    13c6:	ff 93       	push	r31
    13c8:	ef 93       	push	r30
    13ca:	0e 94 67 11 	call	0x22ce	; 0x22ce <sscanf>
			
			GPS_Speed =round((s1*10+s2)*KPH_PER_NAUTICALMILE);
    13ce:	89 81       	ldd	r24, Y+1	; 0x01
    13d0:	9a 81       	ldd	r25, Y+2	; 0x02
    13d2:	bc 01       	movw	r22, r24
    13d4:	66 0f       	add	r22, r22
    13d6:	77 1f       	adc	r23, r23
    13d8:	88 0f       	add	r24, r24
    13da:	99 1f       	adc	r25, r25
    13dc:	88 0f       	add	r24, r24
    13de:	99 1f       	adc	r25, r25
    13e0:	88 0f       	add	r24, r24
    13e2:	99 1f       	adc	r25, r25
    13e4:	86 0f       	add	r24, r22
    13e6:	97 1f       	adc	r25, r23
    13e8:	6b 81       	ldd	r22, Y+3	; 0x03
    13ea:	7c 81       	ldd	r23, Y+4	; 0x04
    13ec:	68 0f       	add	r22, r24
    13ee:	79 1f       	adc	r23, r25
    13f0:	07 2e       	mov	r0, r23
    13f2:	00 0c       	add	r0, r0
    13f4:	88 0b       	sbc	r24, r24
    13f6:	99 0b       	sbc	r25, r25
    13f8:	0e 94 fc 0d 	call	0x1bf8	; 0x1bf8 <__floatsisf>
    13fc:	26 e5       	ldi	r18, 0x56	; 86
    13fe:	3e e0       	ldi	r19, 0x0E	; 14
    1400:	4d ee       	ldi	r20, 0xED	; 237
    1402:	5f e3       	ldi	r21, 0x3F	; 63
    1404:	0e 94 e0 0e 	call	0x1dc0	; 0x1dc0 <__mulsf3>
    1408:	0e 94 9d 0f 	call	0x1f3a	; 0x1f3a <round>
    140c:	0e 94 cb 0d 	call	0x1b96	; 0x1b96 <__fixunssfsi>
    1410:	70 93 04 02 	sts	0x0204, r23	; 0x800204 <GPS_Speed+0x1>
    1414:	60 93 03 02 	sts	0x0203, r22	; 0x800203 <GPS_Speed>
			
			 CalculateABSPulse();
    1418:	0e 94 02 07 	call	0xe04	; 0xe04 <CalculateABSPulse>
    141c:	0f b6       	in	r0, 0x3f	; 63
    141e:	f8 94       	cli
    1420:	de bf       	out	0x3e, r29	; 62
    1422:	0f be       	out	0x3f, r0	; 63
    1424:	cd bf       	out	0x3d, r28	; 61
    1426:	06 c0       	rjmp	.+12     	; 0x1434 <main+0x442>
	      	*/
		 }
		 else
		 {
		   
		    GPS_Speed = 0;
    1428:	10 92 04 02 	sts	0x0204, r1	; 0x800204 <GPS_Speed+0x1>
    142c:	10 92 03 02 	sts	0x0203, r1	; 0x800203 <GPS_Speed>
			CalculateABSPulse(); 
    1430:	0e 94 02 07 	call	0xe04	; 0xe04 <CalculateABSPulse>
		 }
		 
     	if (SetPulseScreen)
    1434:	80 91 3c 02 	lds	r24, 0x023C	; 0x80023c <SetPulseScreen>
    1438:	88 23       	and	r24, r24
    143a:	41 f0       	breq	.+16     	; 0x144c <main+0x45a>
     	{
	     	GPS_Speed = 100;
    143c:	a4 e6       	ldi	r26, 0x64	; 100
    143e:	b0 e0       	ldi	r27, 0x00	; 0
    1440:	b0 93 04 02 	sts	0x0204, r27	; 0x800204 <GPS_Speed+0x1>
    1444:	a0 93 03 02 	sts	0x0203, r26	; 0x800203 <GPS_Speed>
	     	CalculateABSPulse();
    1448:	0e 94 02 07 	call	0xe04	; 0xe04 <CalculateABSPulse>
	     	
     	}


		 sscanf(AltitudaMSL,"%d.%1d",&s1,&s2);
    144c:	df 92       	push	r13
    144e:	cf 92       	push	r12
    1450:	3f 92       	push	r3
    1452:	2f 92       	push	r2
    1454:	5f 92       	push	r5
    1456:	4f 92       	push	r4
    1458:	7f 92       	push	r7
    145a:	6f 92       	push	r6
    145c:	0e 94 67 11 	call	0x22ce	; 0x22ce <sscanf>
		 
		 if (s1 < 1000)
    1460:	89 81       	ldd	r24, Y+1	; 0x01
    1462:	9a 81       	ldd	r25, Y+2	; 0x02
    1464:	0f b6       	in	r0, 0x3f	; 63
    1466:	f8 94       	cli
    1468:	de bf       	out	0x3e, r29	; 62
    146a:	0f be       	out	0x3f, r0	; 63
    146c:	cd bf       	out	0x3d, r28	; 61
    146e:	88 3e       	cpi	r24, 0xE8	; 232
    1470:	f3 e0       	ldi	r31, 0x03	; 3
    1472:	9f 07       	cpc	r25, r31
    1474:	a4 f4       	brge	.+40     	; 0x149e <main+0x4ac>
		    GPS_Altitude = s1*10+s2;
    1476:	9c 01       	movw	r18, r24
    1478:	22 0f       	add	r18, r18
    147a:	33 1f       	adc	r19, r19
    147c:	88 0f       	add	r24, r24
    147e:	99 1f       	adc	r25, r25
    1480:	88 0f       	add	r24, r24
    1482:	99 1f       	adc	r25, r25
    1484:	88 0f       	add	r24, r24
    1486:	99 1f       	adc	r25, r25
    1488:	82 0f       	add	r24, r18
    148a:	93 1f       	adc	r25, r19
    148c:	2b 81       	ldd	r18, Y+3	; 0x03
    148e:	3c 81       	ldd	r19, Y+4	; 0x04
    1490:	82 0f       	add	r24, r18
    1492:	93 1f       	adc	r25, r19
    1494:	90 93 00 02 	sts	0x0200, r25	; 0x800200 <GPS_Altitude+0x1>
    1498:	80 93 ff 01 	sts	0x01FF, r24	; 0x8001ff <GPS_Altitude>
    149c:	04 c0       	rjmp	.+8      	; 0x14a6 <main+0x4b4>
		 else
		    GPS_Altitude = s1;
    149e:	90 93 00 02 	sts	0x0200, r25	; 0x800200 <GPS_Altitude+0x1>
    14a2:	80 93 ff 01 	sts	0x01FF, r24	; 0x8001ff <GPS_Altitude>
		 
		 if (Meters.number < 1e6 )
    14a6:	80 90 2b 02 	lds	r8, 0x022B	; 0x80022b <Meters>
    14aa:	90 90 2c 02 	lds	r9, 0x022C	; 0x80022c <Meters+0x1>
    14ae:	a0 90 2d 02 	lds	r10, 0x022D	; 0x80022d <Meters+0x2>
    14b2:	b0 90 2e 02 	lds	r11, 0x022E	; 0x80022e <Meters+0x3>
    14b6:	c5 01       	movw	r24, r10
    14b8:	b4 01       	movw	r22, r8
    14ba:	0e 94 fa 0d 	call	0x1bf4	; 0x1bf4 <__floatunsisf>
    14be:	6d 83       	std	Y+5, r22	; 0x05
    14c0:	7e 83       	std	Y+6, r23	; 0x06
    14c2:	8f 83       	std	Y+7, r24	; 0x07
    14c4:	98 87       	std	Y+8, r25	; 0x08
    14c6:	20 e0       	ldi	r18, 0x00	; 0
    14c8:	34 e2       	ldi	r19, 0x24	; 36
    14ca:	44 e7       	ldi	r20, 0x74	; 116
    14cc:	59 e4       	ldi	r21, 0x49	; 73
    14ce:	0e 94 54 0d 	call	0x1aa8	; 0x1aa8 <__cmpsf2>
    14d2:	88 23       	and	r24, r24
    14d4:	34 f5       	brge	.+76     	; 0x1522 <main+0x530>
		 {
		     if (Meters.number < 1e4)
    14d6:	20 e0       	ldi	r18, 0x00	; 0
    14d8:	30 e4       	ldi	r19, 0x40	; 64
    14da:	4c e1       	ldi	r20, 0x1C	; 28
    14dc:	56 e4       	ldi	r21, 0x46	; 70
    14de:	6d 81       	ldd	r22, Y+5	; 0x05
    14e0:	7e 81       	ldd	r23, Y+6	; 0x06
    14e2:	8f 81       	ldd	r24, Y+7	; 0x07
    14e4:	98 85       	ldd	r25, Y+8	; 0x08
    14e6:	0e 94 54 0d 	call	0x1aa8	; 0x1aa8 <__cmpsf2>
    14ea:	88 23       	and	r24, r24
    14ec:	6c f4       	brge	.+26     	; 0x1508 <main+0x516>
			     Distance = Meters.number/10;
    14ee:	c5 01       	movw	r24, r10
    14f0:	b4 01       	movw	r22, r8
    14f2:	2a e0       	ldi	r18, 0x0A	; 10
    14f4:	30 e0       	ldi	r19, 0x00	; 0
    14f6:	40 e0       	ldi	r20, 0x00	; 0
    14f8:	50 e0       	ldi	r21, 0x00	; 0
    14fa:	0e 94 0a 11 	call	0x2214	; 0x2214 <__udivmodsi4>
    14fe:	30 93 02 02 	sts	0x0202, r19	; 0x800202 <Distance+0x1>
    1502:	20 93 01 02 	sts	0x0201, r18	; 0x800201 <Distance>
    1506:	19 c0       	rjmp	.+50     	; 0x153a <main+0x548>
			 else
			     Distance = Meters.number/100;
    1508:	c5 01       	movw	r24, r10
    150a:	b4 01       	movw	r22, r8
    150c:	24 e6       	ldi	r18, 0x64	; 100
    150e:	30 e0       	ldi	r19, 0x00	; 0
    1510:	40 e0       	ldi	r20, 0x00	; 0
    1512:	50 e0       	ldi	r21, 0x00	; 0
    1514:	0e 94 0a 11 	call	0x2214	; 0x2214 <__udivmodsi4>
    1518:	30 93 02 02 	sts	0x0202, r19	; 0x800202 <Distance+0x1>
    151c:	20 93 01 02 	sts	0x0201, r18	; 0x800201 <Distance>
    1520:	0c c0       	rjmp	.+24     	; 0x153a <main+0x548>
		 }
		 else
		     Distance = Meters.number/1000;
    1522:	c5 01       	movw	r24, r10
    1524:	b4 01       	movw	r22, r8
    1526:	28 ee       	ldi	r18, 0xE8	; 232
    1528:	33 e0       	ldi	r19, 0x03	; 3
    152a:	40 e0       	ldi	r20, 0x00	; 0
    152c:	50 e0       	ldi	r21, 0x00	; 0
    152e:	0e 94 0a 11 	call	0x2214	; 0x2214 <__udivmodsi4>
    1532:	30 93 02 02 	sts	0x0202, r19	; 0x800202 <Distance+0x1>
    1536:	20 93 01 02 	sts	0x0201, r18	; 0x800201 <Distance>

		
	
		
		 if (GPS_Status == 'A') 
    153a:	80 91 05 02 	lds	r24, 0x0205	; 0x800205 <GPS_Status>
    153e:	81 34       	cpi	r24, 0x41	; 65
    1540:	09 f0       	breq	.+2      	; 0x1544 <main+0x552>
    1542:	52 c0       	rjmp	.+164    	; 0x15e8 <main+0x5f6>
		 {
		    GPS_Time = TimeToInt(Time,4,UTC_TCorrection); //load time from NMEA
    1544:	40 91 f9 01 	lds	r20, 0x01F9	; 0x8001f9 <UTC_TCorrection>
    1548:	64 e0       	ldi	r22, 0x04	; 4
    154a:	70 e0       	ldi	r23, 0x00	; 0
    154c:	89 ee       	ldi	r24, 0xE9	; 233
    154e:	91 e0       	ldi	r25, 0x01	; 1
    1550:	0e 94 41 04 	call	0x882	; 0x882 <TimeToInt>
    1554:	ac 01       	movw	r20, r24
    1556:	90 93 22 02 	sts	0x0222, r25	; 0x800222 <GPS_Time+0x1>
    155a:	80 93 21 02 	sts	0x0221, r24	; 0x800221 <GPS_Time>
		 	
			if (FirstScan == 0) 
    155e:	80 91 f6 01 	lds	r24, 0x01F6	; 0x8001f6 <FirstScan>
    1562:	81 11       	cpse	r24, r1
    1564:	3a c0       	rjmp	.+116    	; 0x15da <main+0x5e8>
			{
				
			  buff1[0] = (M41T56_ADR<<1)|0; //  M41T56 Slave receiver mode
    1566:	e0 ed       	ldi	r30, 0xD0	; 208
    1568:	d8 01       	movw	r26, r16
    156a:	ec 93       	st	X, r30
			  buff1[1] = 0x00;                 // set register pointer to 08H - using SRAM
    156c:	11 96       	adiw	r26, 0x01	; 1
    156e:	1c 92       	st	X, r1
    1570:	11 97       	sbiw	r26, 0x01	; 1
			  buff1[2] = ((Time[4]-0x30) << 4) | (Time[5]-0x30); //sec
    1572:	e9 ee       	ldi	r30, 0xE9	; 233
    1574:	f1 e0       	ldi	r31, 0x01	; 1
    1576:	84 81       	ldd	r24, Z+4	; 0x04
    1578:	98 2f       	mov	r25, r24
    157a:	92 95       	swap	r25
    157c:	90 7f       	andi	r25, 0xF0	; 240
    157e:	85 81       	ldd	r24, Z+5	; 0x05
    1580:	80 53       	subi	r24, 0x30	; 48
    1582:	89 2b       	or	r24, r25
    1584:	12 96       	adiw	r26, 0x02	; 2
    1586:	8c 93       	st	X, r24
			  buff1[3] = IntToHex(GPS_Time % 100); //min
    1588:	5a 01       	movw	r10, r20
    158a:	b6 94       	lsr	r11
    158c:	a7 94       	ror	r10
    158e:	b6 94       	lsr	r11
    1590:	a7 94       	ror	r10
    1592:	95 01       	movw	r18, r10
    1594:	ab e7       	ldi	r26, 0x7B	; 123
    1596:	b4 e1       	ldi	r27, 0x14	; 20
    1598:	0e 94 32 11 	call	0x2264	; 0x2264 <__umulhisi3>
    159c:	96 95       	lsr	r25
    159e:	87 95       	ror	r24
    15a0:	64 e6       	ldi	r22, 0x64	; 100
    15a2:	68 9f       	mul	r22, r24
    15a4:	90 01       	movw	r18, r0
    15a6:	69 9f       	mul	r22, r25
    15a8:	30 0d       	add	r19, r0
    15aa:	11 24       	eor	r1, r1
    15ac:	ca 01       	movw	r24, r20
    15ae:	82 1b       	sub	r24, r18
    15b0:	93 0b       	sbc	r25, r19
    15b2:	0e 94 f6 06 	call	0xdec	; 0xdec <IntToHex>
    15b6:	d8 01       	movw	r26, r16
    15b8:	13 96       	adiw	r26, 0x03	; 3
    15ba:	8c 93       	st	X, r24
			  buff1[4] = IntToHex(GPS_Time / 100); //hours
    15bc:	95 01       	movw	r18, r10
    15be:	ab e7       	ldi	r26, 0x7B	; 123
    15c0:	b4 e1       	ldi	r27, 0x14	; 20
    15c2:	0e 94 32 11 	call	0x2264	; 0x2264 <__umulhisi3>
    15c6:	96 95       	lsr	r25
    15c8:	87 95       	ror	r24
    15ca:	0e 94 f6 06 	call	0xdec	; 0xdec <IntToHex>
    15ce:	f8 01       	movw	r30, r16
    15d0:	84 83       	std	Z+4, r24	; 0x04
			  TWI_SendData(buff1, 5); 
    15d2:	65 e0       	ldi	r22, 0x05	; 5
    15d4:	c8 01       	movw	r24, r16
    15d6:	0e 94 46 0c 	call	0x188c	; 0x188c <TWI_SendData>
			  
			}
			FirstScan = 1;
    15da:	81 e0       	ldi	r24, 0x01	; 1
    15dc:	80 93 f6 01 	sts	0x01F6, r24	; 0x8001f6 <FirstScan>
						   	
		    
		 }
		 
    	if (GPS_Status != 'A')
    15e0:	80 91 05 02 	lds	r24, 0x0205	; 0x800205 <GPS_Status>
    15e4:	81 34       	cpi	r24, 0x41	; 65
    15e6:	69 f1       	breq	.+90     	; 0x1642 <main+0x650>
     	{
			   	
			   	buff1[0] = (M41T56_ADR<<1)|0; //  M41T56 Slave receiver mode
    15e8:	e0 ed       	ldi	r30, 0xD0	; 208
    15ea:	d8 01       	movw	r26, r16
    15ec:	ec 93       	st	X, r30
			   	buff1[1] = 0x00;                 // set register pointer to 08H - using SRAM
    15ee:	11 96       	adiw	r26, 0x01	; 1
    15f0:	1c 92       	st	X, r1
			   	
			   	TWI_SendData(buff1, 2);
    15f2:	62 e0       	ldi	r22, 0x02	; 2
    15f4:	c8 01       	movw	r24, r16
    15f6:	0e 94 46 0c 	call	0x188c	; 0x188c <TWI_SendData>
			   	
			   	buff1[0] = (M41T56_ADR<<1)|1; // M41T56 Slave transmitter mode
    15fa:	81 ed       	ldi	r24, 0xD1	; 209
    15fc:	d8 01       	movw	r26, r16
    15fe:	8c 93       	st	X, r24
			   	TWI_SendData(buff1, 7);
    1600:	67 e0       	ldi	r22, 0x07	; 7
    1602:	c8 01       	movw	r24, r16
    1604:	0e 94 46 0c 	call	0x188c	; 0x188c <TWI_SendData>
			   	
			   	TWI_GetData(buff1, 7); // get 7 bytes from M41T56
    1608:	67 e0       	ldi	r22, 0x07	; 7
    160a:	c8 01       	movw	r24, r16
    160c:	0e 94 69 0c 	call	0x18d2	; 0x18d2 <TWI_GetData>
			   
			   	GPS_Time =HexToInt(buff1[3] & 0xBF)*100+HexToInt(buff1[2]);
    1610:	f8 01       	movw	r30, r16
    1612:	83 81       	ldd	r24, Z+3	; 0x03
    1614:	8f 7b       	andi	r24, 0xBF	; 191
    1616:	0e 94 e1 06 	call	0xdc2	; 0xdc2 <HexToInt>
    161a:	5c 01       	movw	r10, r24
    161c:	d8 01       	movw	r26, r16
    161e:	12 96       	adiw	r26, 0x02	; 2
    1620:	8c 91       	ld	r24, X
    1622:	0e 94 e1 06 	call	0xdc2	; 0xdc2 <HexToInt>
    1626:	44 e6       	ldi	r20, 0x64	; 100
    1628:	4a 9d       	mul	r20, r10
    162a:	90 01       	movw	r18, r0
    162c:	4b 9d       	mul	r20, r11
    162e:	30 0d       	add	r19, r0
    1630:	11 24       	eor	r1, r1
    1632:	82 0f       	add	r24, r18
    1634:	93 1f       	adc	r25, r19
    1636:	90 93 22 02 	sts	0x0222, r25	; 0x800222 <GPS_Time+0x1>
    163a:	80 93 21 02 	sts	0x0221, r24	; 0x800221 <GPS_Time>
				FirstScan = 0;
    163e:	10 92 f6 01 	sts	0x01F6, r1	; 0x8001f6 <FirstScan>
				
		 	}
		 
		 
		 GPS_SatCount = atoi(SatCount);
    1642:	8b ea       	ldi	r24, 0xAB	; 171
    1644:	91 e0       	ldi	r25, 0x01	; 1
    1646:	0e 94 41 11 	call	0x2282	; 0x2282 <atoi>
    164a:	90 93 fe 01 	sts	0x01FE, r25	; 0x8001fe <GPS_SatCount+0x1>
    164e:	80 93 fd 01 	sts	0x01FD, r24	; 0x8001fd <GPS_SatCount>
		 RXwaitpause = 0;
    1652:	10 92 20 02 	sts	0x0220, r1	; 0x800220 <RXwaitpause>
	  }
	  
	  if (GPS_StatPointTimer >=60) GPS_StatPointTimer = 0;
    1656:	80 91 fc 01 	lds	r24, 0x01FC	; 0x8001fc <GPS_StatPointTimer>
    165a:	8c 33       	cpi	r24, 0x3C	; 60
    165c:	10 f0       	brcs	.+4      	; 0x1662 <main+0x670>
    165e:	10 92 fc 01 	sts	0x01FC, r1	; 0x8001fc <GPS_StatPointTimer>
	  
	    		  
	  switch(CurrScreen) //printing display data
    1662:	80 91 07 02 	lds	r24, 0x0207	; 0x800207 <CurrScreen>
    1666:	82 30       	cpi	r24, 0x02	; 2
    1668:	09 f4       	brne	.+2      	; 0x166c <main+0x67a>
    166a:	49 c0       	rjmp	.+146    	; 0x16fe <main+0x70c>
    166c:	28 f4       	brcc	.+10     	; 0x1678 <main+0x686>
    166e:	88 23       	and	r24, r24
    1670:	61 f0       	breq	.+24     	; 0x168a <main+0x698>
    1672:	81 30       	cpi	r24, 0x01	; 1
    1674:	69 f0       	breq	.+26     	; 0x1690 <main+0x69e>
    1676:	72 cd       	rjmp	.-1308   	; 0x115c <main+0x16a>
    1678:	84 30       	cpi	r24, 0x04	; 4
    167a:	09 f4       	brne	.+2      	; 0x167e <main+0x68c>
    167c:	97 c0       	rjmp	.+302    	; 0x17ac <main+0x7ba>
    167e:	08 f4       	brcc	.+2      	; 0x1682 <main+0x690>
    1680:	77 c0       	rjmp	.+238    	; 0x1770 <main+0x77e>
    1682:	85 30       	cpi	r24, 0x05	; 5
    1684:	09 f4       	brne	.+2      	; 0x1688 <main+0x696>
    1686:	a4 c0       	rjmp	.+328    	; 0x17d0 <main+0x7de>
    1688:	69 cd       	rjmp	.-1326   	; 0x115c <main+0x16a>
	  {
		  case 0: print_error();
    168a:	0e 94 bf 06 	call	0xd7e	; 0xd7e <print_error>
		          break;
    168e:	66 cd       	rjmp	.-1332   	; 0x115c <main+0x16a>
		  
		  case 1: if (SetPulseScreen == 0){
    1690:	80 91 3c 02 	lds	r24, 0x023C	; 0x80023c <SetPulseScreen>
    1694:	81 11       	cpse	r24, r1
    1696:	10 c0       	rjmp	.+32     	; 0x16b8 <main+0x6c6>
			  		  if (GPS_Status == 'A')
    1698:	80 91 05 02 	lds	r24, 0x0205	; 0x800205 <GPS_Status>
    169c:	81 34       	cpi	r24, 0x41	; 65
    169e:	49 f4       	brne	.+18     	; 0x16b2 <main+0x6c0>
			  		  {
				  		   print_decimal(GPS_Speed,2,0); // Speed
    16a0:	40 e0       	ldi	r20, 0x00	; 0
    16a2:	62 e0       	ldi	r22, 0x02	; 2
    16a4:	80 91 03 02 	lds	r24, 0x0203	; 0x800203 <GPS_Speed>
    16a8:	90 91 04 02 	lds	r25, 0x0204	; 0x800204 <GPS_Speed+0x1>
    16ac:	0e 94 57 05 	call	0xaae	; 0xaae <print_decimal>
    16b0:	55 cd       	rjmp	.-1366   	; 0x115c <main+0x16a>
			  		  }   else
		  		      print_nodata();
    16b2:	0e 94 53 06 	call	0xca6	; 0xca6 <print_nodata>
    16b6:	52 cd       	rjmp	.-1372   	; 0x115c <main+0x16a>
				   }
				else 		
		  
		       if (SetPulseScreen == 1) {
    16b8:	81 30       	cpi	r24, 0x01	; 1
    16ba:	79 f4       	brne	.+30     	; 0x16da <main+0x6e8>
			       if (Fr10_Change)
    16bc:	40 91 24 02 	lds	r20, 0x0224	; 0x800224 <Fr10_Change>
    16c0:	44 23       	and	r20, r20
    16c2:	41 f0       	breq	.+16     	; 0x16d4 <main+0x6e2>
		    	   {
				      print_decimal(Fr10_Pulse,0,Fr10_Change);
    16c4:	60 e0       	ldi	r22, 0x00	; 0
    16c6:	80 91 1e 02 	lds	r24, 0x021E	; 0x80021e <Fr10_Pulse>
    16ca:	90 91 1f 02 	lds	r25, 0x021F	; 0x80021f <Fr10_Pulse+0x1>
    16ce:	0e 94 57 05 	call	0xaae	; 0xaae <print_decimal>
    16d2:	44 cd       	rjmp	.-1400   	; 0x115c <main+0x16a>
			       } else
			         print_Fr10();
    16d4:	0e 94 79 06 	call	0xcf2	; 0xcf2 <print_Fr10>
    16d8:	41 cd       	rjmp	.-1406   	; 0x115c <main+0x16a>
		      } else
		  
		      if (SetPulseScreen == 2) {
    16da:	82 30       	cpi	r24, 0x02	; 2
    16dc:	09 f0       	breq	.+2      	; 0x16e0 <main+0x6ee>
    16de:	3e cd       	rjmp	.-1412   	; 0x115c <main+0x16a>
			     if (dc_Change)
    16e0:	40 91 fa 01 	lds	r20, 0x01FA	; 0x8001fa <dc_Change>
    16e4:	44 23       	and	r20, r20
    16e6:	41 f0       	breq	.+16     	; 0x16f8 <main+0x706>
			     {
			    	  print_decimal(dc_Pulse,0,dc_Change);
    16e8:	60 e0       	ldi	r22, 0x00	; 0
    16ea:	80 91 f7 01 	lds	r24, 0x01F7	; 0x8001f7 <dc_Pulse>
    16ee:	90 91 f8 01 	lds	r25, 0x01F8	; 0x8001f8 <dc_Pulse+0x1>
    16f2:	0e 94 57 05 	call	0xaae	; 0xaae <print_decimal>
    16f6:	32 cd       	rjmp	.-1436   	; 0x115c <main+0x16a>
			     } else
			         print_dc();
    16f8:	0e 94 a8 06 	call	0xd50	; 0xd50 <print_dc>
    16fc:	2f cd       	rjmp	.-1442   	; 0x115c <main+0x16a>
		      }
		  
		       break;
		  case 2: 	if (Meters.number < 1e6 )
    16fe:	60 91 2b 02 	lds	r22, 0x022B	; 0x80022b <Meters>
    1702:	70 91 2c 02 	lds	r23, 0x022C	; 0x80022c <Meters+0x1>
    1706:	80 91 2d 02 	lds	r24, 0x022D	; 0x80022d <Meters+0x2>
    170a:	90 91 2e 02 	lds	r25, 0x022E	; 0x80022e <Meters+0x3>
    170e:	0e 94 fa 0d 	call	0x1bf4	; 0x1bf4 <__floatunsisf>
    1712:	4b 01       	movw	r8, r22
    1714:	5c 01       	movw	r10, r24
    1716:	20 e0       	ldi	r18, 0x00	; 0
    1718:	34 e2       	ldi	r19, 0x24	; 36
    171a:	44 e7       	ldi	r20, 0x74	; 116
    171c:	59 e4       	ldi	r21, 0x49	; 73
    171e:	0e 94 54 0d 	call	0x1aa8	; 0x1aa8 <__cmpsf2>
    1722:	88 23       	and	r24, r24
    1724:	e4 f4       	brge	.+56     	; 0x175e <main+0x76c>
		  		      {
					    if (Meters.number < 1e4)
    1726:	20 e0       	ldi	r18, 0x00	; 0
    1728:	30 e4       	ldi	r19, 0x40	; 64
    172a:	4c e1       	ldi	r20, 0x1C	; 28
    172c:	56 e4       	ldi	r21, 0x46	; 70
    172e:	c5 01       	movw	r24, r10
    1730:	b4 01       	movw	r22, r8
    1732:	0e 94 54 0d 	call	0x1aa8	; 0x1aa8 <__cmpsf2>
    1736:	88 23       	and	r24, r24
    1738:	4c f4       	brge	.+18     	; 0x174c <main+0x75a>
						  print_decimal(Distance,3,0);
    173a:	40 e0       	ldi	r20, 0x00	; 0
    173c:	63 e0       	ldi	r22, 0x03	; 3
    173e:	80 91 01 02 	lds	r24, 0x0201	; 0x800201 <Distance>
    1742:	90 91 02 02 	lds	r25, 0x0202	; 0x800202 <Distance+0x1>
    1746:	0e 94 57 05 	call	0xaae	; 0xaae <print_decimal>
    174a:	08 cd       	rjmp	.-1520   	; 0x115c <main+0x16a>
						else
		        		  print_decimal(Distance,2,0);  //Distance
    174c:	40 e0       	ldi	r20, 0x00	; 0
    174e:	62 e0       	ldi	r22, 0x02	; 2
    1750:	80 91 01 02 	lds	r24, 0x0201	; 0x800201 <Distance>
    1754:	90 91 02 02 	lds	r25, 0x0202	; 0x800202 <Distance+0x1>
    1758:	0e 94 57 05 	call	0xaae	; 0xaae <print_decimal>
    175c:	ff cc       	rjmp	.-1538   	; 0x115c <main+0x16a>
					  }
					  else
					      print_decimal(Distance,0,0); 
    175e:	40 e0       	ldi	r20, 0x00	; 0
    1760:	60 e0       	ldi	r22, 0x00	; 0
    1762:	80 91 01 02 	lds	r24, 0x0201	; 0x800201 <Distance>
    1766:	90 91 02 02 	lds	r25, 0x0202	; 0x800202 <Distance+0x1>
    176a:	0e 94 57 05 	call	0xaae	; 0xaae <print_decimal>
    176e:	f6 cc       	rjmp	.-1556   	; 0x115c <main+0x16a>
		          break;
		  case 3: if (GPS_Status == 'A') 
    1770:	80 91 05 02 	lds	r24, 0x0205	; 0x800205 <GPS_Status>
    1774:	81 34       	cpi	r24, 0x41	; 65
    1776:	b9 f4       	brne	.+46     	; 0x17a6 <main+0x7b4>
				  {
		              if (s1 < 1000)
    1778:	89 81       	ldd	r24, Y+1	; 0x01
    177a:	9a 81       	ldd	r25, Y+2	; 0x02
    177c:	88 3e       	cpi	r24, 0xE8	; 232
    177e:	93 40       	sbci	r25, 0x03	; 3
    1780:	4c f4       	brge	.+18     	; 0x1794 <main+0x7a2>
					    print_decimal(GPS_Altitude,2,0);   //Altitude
    1782:	40 e0       	ldi	r20, 0x00	; 0
    1784:	62 e0       	ldi	r22, 0x02	; 2
    1786:	80 91 ff 01 	lds	r24, 0x01FF	; 0x8001ff <GPS_Altitude>
    178a:	90 91 00 02 	lds	r25, 0x0200	; 0x800200 <GPS_Altitude+0x1>
    178e:	0e 94 57 05 	call	0xaae	; 0xaae <print_decimal>
    1792:	e4 cc       	rjmp	.-1592   	; 0x115c <main+0x16a>
					  else
					    print_decimal(GPS_Altitude,0,0);
    1794:	40 e0       	ldi	r20, 0x00	; 0
    1796:	60 e0       	ldi	r22, 0x00	; 0
    1798:	80 91 ff 01 	lds	r24, 0x01FF	; 0x8001ff <GPS_Altitude>
    179c:	90 91 00 02 	lds	r25, 0x0200	; 0x800200 <GPS_Altitude+0x1>
    17a0:	0e 94 57 05 	call	0xaae	; 0xaae <print_decimal>
    17a4:	db cc       	rjmp	.-1610   	; 0x115c <main+0x16a>
				  }
				  else
				      print_nodata();
    17a6:	0e 94 53 06 	call	0xca6	; 0xca6 <print_nodata>
    17aa:	d8 cc       	rjmp	.-1616   	; 0x115c <main+0x16a>
		          break;
		  
		  case 4: if (UTC_Change)
    17ac:	80 91 23 02 	lds	r24, 0x0223	; 0x800223 <UTC_Change>
    17b0:	88 23       	and	r24, r24
    17b2:	29 f0       	breq	.+10     	; 0x17be <main+0x7cc>
		              print_UTC(UTC_TCorrection);
    17b4:	80 91 f9 01 	lds	r24, 0x01F9	; 0x8001f9 <UTC_TCorrection>
    17b8:	0e 94 dd 04 	call	0x9ba	; 0x9ba <print_UTC>
    17bc:	cf cc       	rjmp	.-1634   	; 0x115c <main+0x16a>
				  else
				      print_decimal(GPS_Time,3,0);      // Print GPS time hh.mm (with user UTC)
    17be:	40 e0       	ldi	r20, 0x00	; 0
    17c0:	63 e0       	ldi	r22, 0x03	; 3
    17c2:	80 91 21 02 	lds	r24, 0x0221	; 0x800221 <GPS_Time>
    17c6:	90 91 22 02 	lds	r25, 0x0222	; 0x800222 <GPS_Time+0x1>
    17ca:	0e 94 57 05 	call	0xaae	; 0xaae <print_decimal>
    17ce:	c6 cc       	rjmp	.-1652   	; 0x115c <main+0x16a>
		          break;
				  
		  case 5: print_decimal(GPS_SatCount,0,0);     // Satellites count
    17d0:	40 e0       	ldi	r20, 0x00	; 0
    17d2:	60 e0       	ldi	r22, 0x00	; 0
    17d4:	80 91 fd 01 	lds	r24, 0x01FD	; 0x8001fd <GPS_SatCount>
    17d8:	90 91 fe 01 	lds	r25, 0x01FE	; 0x8001fe <GPS_SatCount+0x1>
    17dc:	0e 94 57 05 	call	0xaae	; 0xaae <print_decimal>
		          break;
    17e0:	bd cc       	rjmp	.-1670   	; 0x115c <main+0x16a>
		  Key1_delay = KEY1_OFF_DELAY;
		  blink = 0;
	  
	  }
	  
	  Key1_store = Key1button; 
    17e2:	10 92 06 02 	sts	0x0206, r1	; 0x800206 <Key1_store>
    17e6:	d7 cd       	rjmp	.-1106   	; 0x1396 <main+0x3a4>
				
			 if (CurrScreen < 5) CurrScreen++;  // change current screen
			 
			    else CurrScreen=1;
		    
		    Key1_delay = KEY1_OFF_DELAY;    
    17e8:	85 e0       	ldi	r24, 0x05	; 5
    17ea:	80 93 25 02 	sts	0x0225, r24	; 0x800225 <Key1_delay>
    17ee:	3a cd       	rjmp	.-1420   	; 0x1264 <main+0x272>

000017f0 <TWI_MasterInit>:
    17f0:	cf 92       	push	r12
    17f2:	df 92       	push	r13
    17f4:	ef 92       	push	r14
    17f6:	ff 92       	push	r15
    17f8:	1f 93       	push	r17
    17fa:	cf 93       	push	r28
    17fc:	df 93       	push	r29
    17fe:	bc 01       	movw	r22, r24
    1800:	80 e8       	ldi	r24, 0x80	; 128
    1802:	9e e3       	ldi	r25, 0x3E	; 62
    1804:	0e 94 e2 10 	call	0x21c4	; 0x21c4 <__udivmodhi4>
    1808:	6b 01       	movw	r12, r22
    180a:	e1 2c       	mov	r14, r1
    180c:	f1 2c       	mov	r15, r1
    180e:	80 e1       	ldi	r24, 0x10	; 16
    1810:	c8 1a       	sub	r12, r24
    1812:	d1 08       	sbc	r13, r1
    1814:	e1 08       	sbc	r14, r1
    1816:	f1 08       	sbc	r15, r1
    1818:	20 91 05 01 	lds	r18, 0x0105	; 0x800105 <pre>
    181c:	30 e0       	ldi	r19, 0x00	; 0
    181e:	40 e0       	ldi	r20, 0x00	; 0
    1820:	50 e0       	ldi	r21, 0x00	; 0
    1822:	c7 01       	movw	r24, r14
    1824:	b6 01       	movw	r22, r12
    1826:	0e 94 0a 11 	call	0x2214	; 0x2214 <__udivmodsi4>
    182a:	82 2f       	mov	r24, r18
    182c:	21 50       	subi	r18, 0x01	; 1
    182e:	31 09       	sbc	r19, r1
    1830:	2f 3f       	cpi	r18, 0xFF	; 255
    1832:	31 05       	cpc	r19, r1
    1834:	90 f0       	brcs	.+36     	; 0x185a <TWI_MasterInit+0x6a>
    1836:	c6 e0       	ldi	r28, 0x06	; 6
    1838:	d1 e0       	ldi	r29, 0x01	; 1
    183a:	11 e0       	ldi	r17, 0x01	; 1
    183c:	29 91       	ld	r18, Y+
    183e:	30 e0       	ldi	r19, 0x00	; 0
    1840:	40 e0       	ldi	r20, 0x00	; 0
    1842:	50 e0       	ldi	r21, 0x00	; 0
    1844:	c7 01       	movw	r24, r14
    1846:	b6 01       	movw	r22, r12
    1848:	0e 94 0a 11 	call	0x2214	; 0x2214 <__udivmodsi4>
    184c:	82 2f       	mov	r24, r18
    184e:	21 50       	subi	r18, 0x01	; 1
    1850:	31 09       	sbc	r19, r1
    1852:	2f 3f       	cpi	r18, 0xFF	; 255
    1854:	31 05       	cpc	r19, r1
    1856:	70 f4       	brcc	.+28     	; 0x1874 <TWI_MasterInit+0x84>
    1858:	01 c0       	rjmp	.+2      	; 0x185c <TWI_MasterInit+0x6c>
    185a:	10 e0       	ldi	r17, 0x00	; 0
    185c:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7e00b8>
    1860:	10 93 b9 00 	sts	0x00B9, r17	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
    1864:	8f ef       	ldi	r24, 0xFF	; 255
    1866:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
    186a:	84 e0       	ldi	r24, 0x04	; 4
    186c:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    1870:	8f ef       	ldi	r24, 0xFF	; 255
    1872:	04 c0       	rjmp	.+8      	; 0x187c <TWI_MasterInit+0x8c>
    1874:	1f 5f       	subi	r17, 0xFF	; 255
    1876:	14 30       	cpi	r17, 0x04	; 4
    1878:	09 f7       	brne	.-62     	; 0x183c <TWI_MasterInit+0x4c>
    187a:	80 e0       	ldi	r24, 0x00	; 0
    187c:	df 91       	pop	r29
    187e:	cf 91       	pop	r28
    1880:	1f 91       	pop	r17
    1882:	ff 90       	pop	r15
    1884:	ef 90       	pop	r14
    1886:	df 90       	pop	r13
    1888:	cf 90       	pop	r12
    188a:	08 95       	ret

0000188c <TWI_SendData>:
    188c:	fc 01       	movw	r30, r24
    188e:	ac eb       	ldi	r26, 0xBC	; 188
    1890:	b0 e0       	ldi	r27, 0x00	; 0
    1892:	9c 91       	ld	r25, X
    1894:	90 fd       	sbrc	r25, 0
    1896:	fd cf       	rjmp	.-6      	; 0x1892 <TWI_SendData+0x6>
    1898:	60 93 15 02 	sts	0x0215, r22	; 0x800215 <twiMsgSize>
    189c:	80 81       	ld	r24, Z
    189e:	80 93 16 02 	sts	0x0216, r24	; 0x800216 <twiBuf>
    18a2:	80 81       	ld	r24, Z
    18a4:	80 fd       	sbrc	r24, 0
    18a6:	0e c0       	rjmp	.+28     	; 0x18c4 <TWI_SendData+0x38>
    18a8:	62 30       	cpi	r22, 0x02	; 2
    18aa:	60 f0       	brcs	.+24     	; 0x18c4 <TWI_SendData+0x38>
    18ac:	31 96       	adiw	r30, 0x01	; 1
    18ae:	21 e0       	ldi	r18, 0x01	; 1
    18b0:	30 e0       	ldi	r19, 0x00	; 0
    18b2:	81 91       	ld	r24, Z+
    18b4:	d9 01       	movw	r26, r18
    18b6:	aa 5e       	subi	r26, 0xEA	; 234
    18b8:	bd 4f       	sbci	r27, 0xFD	; 253
    18ba:	8c 93       	st	X, r24
    18bc:	2f 5f       	subi	r18, 0xFF	; 255
    18be:	3f 4f       	sbci	r19, 0xFF	; 255
    18c0:	26 17       	cp	r18, r22
    18c2:	b8 f3       	brcs	.-18     	; 0x18b2 <TWI_SendData+0x26>
    18c4:	88 ef       	ldi	r24, 0xF8	; 248
    18c6:	80 93 09 01 	sts	0x0109, r24	; 0x800109 <twiState>
    18ca:	85 ea       	ldi	r24, 0xA5	; 165
    18cc:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    18d0:	08 95       	ret

000018d2 <TWI_GetData>:
    18d2:	ec eb       	ldi	r30, 0xBC	; 188
    18d4:	f0 e0       	ldi	r31, 0x00	; 0
    18d6:	20 81       	ld	r18, Z
    18d8:	20 fd       	sbrc	r18, 0
    18da:	fd cf       	rjmp	.-6      	; 0x18d6 <TWI_GetData+0x4>
    18dc:	20 91 09 01 	lds	r18, 0x0109	; 0x800109 <twiState>
    18e0:	2f 3f       	cpi	r18, 0xFF	; 255
    18e2:	71 f4       	brne	.+28     	; 0x1900 <TWI_GetData+0x2e>
    18e4:	66 23       	and	r22, r22
    18e6:	61 f0       	breq	.+24     	; 0x1900 <TWI_GetData+0x2e>
    18e8:	e8 2f       	mov	r30, r24
    18ea:	f9 2f       	mov	r31, r25
    18ec:	80 e0       	ldi	r24, 0x00	; 0
    18ee:	90 e0       	ldi	r25, 0x00	; 0
    18f0:	dc 01       	movw	r26, r24
    18f2:	aa 5e       	subi	r26, 0xEA	; 234
    18f4:	bd 4f       	sbci	r27, 0xFD	; 253
    18f6:	2c 91       	ld	r18, X
    18f8:	21 93       	st	Z+, r18
    18fa:	01 96       	adiw	r24, 0x01	; 1
    18fc:	86 17       	cp	r24, r22
    18fe:	c0 f3       	brcs	.-16     	; 0x18f0 <TWI_GetData+0x1e>
    1900:	80 91 09 01 	lds	r24, 0x0109	; 0x800109 <twiState>
    1904:	08 95       	ret

00001906 <TWI_Process>:
    1906:	20 91 b9 00 	lds	r18, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
    190a:	2c 7f       	andi	r18, 0xFC	; 252
    190c:	82 2f       	mov	r24, r18
    190e:	90 e0       	ldi	r25, 0x00	; 0
    1910:	fc 01       	movw	r30, r24
    1912:	38 97       	sbiw	r30, 0x08	; 8
    1914:	e1 35       	cpi	r30, 0x51	; 81
    1916:	f1 05       	cpc	r31, r1
    1918:	08 f0       	brcs	.+2      	; 0x191c <TWI_Process+0x16>
    191a:	53 c0       	rjmp	.+166    	; 0x19c2 <TWI_Process+0xbc>
    191c:	e7 5b       	subi	r30, 0xB7	; 183
    191e:	ff 4f       	sbci	r31, 0xFF	; 255
    1920:	0c 94 2c 11 	jmp	0x2258	; 0x2258 <__tablejump2__>
    1924:	10 92 14 02 	sts	0x0214, r1	; 0x800214 <ptr.1861>
    1928:	e0 91 14 02 	lds	r30, 0x0214	; 0x800214 <ptr.1861>
    192c:	80 91 15 02 	lds	r24, 0x0215	; 0x800215 <twiMsgSize>
    1930:	e8 17       	cp	r30, r24
    1932:	78 f4       	brcc	.+30     	; 0x1952 <TWI_Process+0x4c>
    1934:	f0 e0       	ldi	r31, 0x00	; 0
    1936:	ea 5e       	subi	r30, 0xEA	; 234
    1938:	fd 4f       	sbci	r31, 0xFD	; 253
    193a:	80 81       	ld	r24, Z
    193c:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
    1940:	85 e8       	ldi	r24, 0x85	; 133
    1942:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    1946:	80 91 14 02 	lds	r24, 0x0214	; 0x800214 <ptr.1861>
    194a:	8f 5f       	subi	r24, 0xFF	; 255
    194c:	80 93 14 02 	sts	0x0214, r24	; 0x800214 <ptr.1861>
    1950:	08 95       	ret
    1952:	8f ef       	ldi	r24, 0xFF	; 255
    1954:	80 93 09 01 	sts	0x0109, r24	; 0x800109 <twiState>
    1958:	84 e9       	ldi	r24, 0x94	; 148
    195a:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    195e:	08 95       	ret
    1960:	80 91 14 02 	lds	r24, 0x0214	; 0x800214 <ptr.1861>
    1964:	e8 2f       	mov	r30, r24
    1966:	f0 e0       	ldi	r31, 0x00	; 0
    1968:	90 91 bb 00 	lds	r25, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
    196c:	ea 5e       	subi	r30, 0xEA	; 234
    196e:	fd 4f       	sbci	r31, 0xFD	; 253
    1970:	90 83       	st	Z, r25
    1972:	8f 5f       	subi	r24, 0xFF	; 255
    1974:	80 93 14 02 	sts	0x0214, r24	; 0x800214 <ptr.1861>
    1978:	80 91 15 02 	lds	r24, 0x0215	; 0x800215 <twiMsgSize>
    197c:	20 91 14 02 	lds	r18, 0x0214	; 0x800214 <ptr.1861>
    1980:	30 e0       	ldi	r19, 0x00	; 0
    1982:	90 e0       	ldi	r25, 0x00	; 0
    1984:	01 97       	sbiw	r24, 0x01	; 1
    1986:	28 17       	cp	r18, r24
    1988:	39 07       	cpc	r19, r25
    198a:	24 f4       	brge	.+8      	; 0x1994 <TWI_Process+0x8e>
    198c:	85 ec       	ldi	r24, 0xC5	; 197
    198e:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    1992:	08 95       	ret
    1994:	85 e8       	ldi	r24, 0x85	; 133
    1996:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    199a:	08 95       	ret
    199c:	e0 91 14 02 	lds	r30, 0x0214	; 0x800214 <ptr.1861>
    19a0:	f0 e0       	ldi	r31, 0x00	; 0
    19a2:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
    19a6:	ea 5e       	subi	r30, 0xEA	; 234
    19a8:	fd 4f       	sbci	r31, 0xFD	; 253
    19aa:	80 83       	st	Z, r24
    19ac:	8f ef       	ldi	r24, 0xFF	; 255
    19ae:	80 93 09 01 	sts	0x0109, r24	; 0x800109 <twiState>
    19b2:	84 e9       	ldi	r24, 0x94	; 148
    19b4:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    19b8:	08 95       	ret
    19ba:	85 ea       	ldi	r24, 0xA5	; 165
    19bc:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    19c0:	08 95       	ret
    19c2:	20 93 09 01 	sts	0x0109, r18	; 0x800109 <twiState>
    19c6:	84 e0       	ldi	r24, 0x04	; 4
    19c8:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    19cc:	08 95       	ret

000019ce <__subsf3>:
    19ce:	50 58       	subi	r21, 0x80	; 128

000019d0 <__addsf3>:
    19d0:	bb 27       	eor	r27, r27
    19d2:	aa 27       	eor	r26, r26
    19d4:	0e 94 ff 0c 	call	0x19fe	; 0x19fe <__addsf3x>
    19d8:	0c 94 99 0e 	jmp	0x1d32	; 0x1d32 <__fp_round>
    19dc:	0e 94 8b 0e 	call	0x1d16	; 0x1d16 <__fp_pscA>
    19e0:	38 f0       	brcs	.+14     	; 0x19f0 <__addsf3+0x20>
    19e2:	0e 94 92 0e 	call	0x1d24	; 0x1d24 <__fp_pscB>
    19e6:	20 f0       	brcs	.+8      	; 0x19f0 <__addsf3+0x20>
    19e8:	39 f4       	brne	.+14     	; 0x19f8 <__addsf3+0x28>
    19ea:	9f 3f       	cpi	r25, 0xFF	; 255
    19ec:	19 f4       	brne	.+6      	; 0x19f4 <__addsf3+0x24>
    19ee:	26 f4       	brtc	.+8      	; 0x19f8 <__addsf3+0x28>
    19f0:	0c 94 61 0e 	jmp	0x1cc2	; 0x1cc2 <__fp_nan>
    19f4:	0e f4       	brtc	.+2      	; 0x19f8 <__addsf3+0x28>
    19f6:	e0 95       	com	r30
    19f8:	e7 fb       	bst	r30, 7
    19fa:	0c 94 5b 0e 	jmp	0x1cb6	; 0x1cb6 <__fp_inf>

000019fe <__addsf3x>:
    19fe:	e9 2f       	mov	r30, r25
    1a00:	0e 94 aa 0e 	call	0x1d54	; 0x1d54 <__fp_split3>
    1a04:	58 f3       	brcs	.-42     	; 0x19dc <__addsf3+0xc>
    1a06:	ba 17       	cp	r27, r26
    1a08:	62 07       	cpc	r22, r18
    1a0a:	73 07       	cpc	r23, r19
    1a0c:	84 07       	cpc	r24, r20
    1a0e:	95 07       	cpc	r25, r21
    1a10:	20 f0       	brcs	.+8      	; 0x1a1a <__addsf3x+0x1c>
    1a12:	79 f4       	brne	.+30     	; 0x1a32 <__addsf3x+0x34>
    1a14:	a6 f5       	brtc	.+104    	; 0x1a7e <__addsf3x+0x80>
    1a16:	0c 94 cc 0e 	jmp	0x1d98	; 0x1d98 <__fp_zero>
    1a1a:	0e f4       	brtc	.+2      	; 0x1a1e <__addsf3x+0x20>
    1a1c:	e0 95       	com	r30
    1a1e:	0b 2e       	mov	r0, r27
    1a20:	ba 2f       	mov	r27, r26
    1a22:	a0 2d       	mov	r26, r0
    1a24:	0b 01       	movw	r0, r22
    1a26:	b9 01       	movw	r22, r18
    1a28:	90 01       	movw	r18, r0
    1a2a:	0c 01       	movw	r0, r24
    1a2c:	ca 01       	movw	r24, r20
    1a2e:	a0 01       	movw	r20, r0
    1a30:	11 24       	eor	r1, r1
    1a32:	ff 27       	eor	r31, r31
    1a34:	59 1b       	sub	r21, r25
    1a36:	99 f0       	breq	.+38     	; 0x1a5e <__addsf3x+0x60>
    1a38:	59 3f       	cpi	r21, 0xF9	; 249
    1a3a:	50 f4       	brcc	.+20     	; 0x1a50 <__addsf3x+0x52>
    1a3c:	50 3e       	cpi	r21, 0xE0	; 224
    1a3e:	68 f1       	brcs	.+90     	; 0x1a9a <__addsf3x+0x9c>
    1a40:	1a 16       	cp	r1, r26
    1a42:	f0 40       	sbci	r31, 0x00	; 0
    1a44:	a2 2f       	mov	r26, r18
    1a46:	23 2f       	mov	r18, r19
    1a48:	34 2f       	mov	r19, r20
    1a4a:	44 27       	eor	r20, r20
    1a4c:	58 5f       	subi	r21, 0xF8	; 248
    1a4e:	f3 cf       	rjmp	.-26     	; 0x1a36 <__addsf3x+0x38>
    1a50:	46 95       	lsr	r20
    1a52:	37 95       	ror	r19
    1a54:	27 95       	ror	r18
    1a56:	a7 95       	ror	r26
    1a58:	f0 40       	sbci	r31, 0x00	; 0
    1a5a:	53 95       	inc	r21
    1a5c:	c9 f7       	brne	.-14     	; 0x1a50 <__addsf3x+0x52>
    1a5e:	7e f4       	brtc	.+30     	; 0x1a7e <__addsf3x+0x80>
    1a60:	1f 16       	cp	r1, r31
    1a62:	ba 0b       	sbc	r27, r26
    1a64:	62 0b       	sbc	r22, r18
    1a66:	73 0b       	sbc	r23, r19
    1a68:	84 0b       	sbc	r24, r20
    1a6a:	ba f0       	brmi	.+46     	; 0x1a9a <__addsf3x+0x9c>
    1a6c:	91 50       	subi	r25, 0x01	; 1
    1a6e:	a1 f0       	breq	.+40     	; 0x1a98 <__addsf3x+0x9a>
    1a70:	ff 0f       	add	r31, r31
    1a72:	bb 1f       	adc	r27, r27
    1a74:	66 1f       	adc	r22, r22
    1a76:	77 1f       	adc	r23, r23
    1a78:	88 1f       	adc	r24, r24
    1a7a:	c2 f7       	brpl	.-16     	; 0x1a6c <__addsf3x+0x6e>
    1a7c:	0e c0       	rjmp	.+28     	; 0x1a9a <__addsf3x+0x9c>
    1a7e:	ba 0f       	add	r27, r26
    1a80:	62 1f       	adc	r22, r18
    1a82:	73 1f       	adc	r23, r19
    1a84:	84 1f       	adc	r24, r20
    1a86:	48 f4       	brcc	.+18     	; 0x1a9a <__addsf3x+0x9c>
    1a88:	87 95       	ror	r24
    1a8a:	77 95       	ror	r23
    1a8c:	67 95       	ror	r22
    1a8e:	b7 95       	ror	r27
    1a90:	f7 95       	ror	r31
    1a92:	9e 3f       	cpi	r25, 0xFE	; 254
    1a94:	08 f0       	brcs	.+2      	; 0x1a98 <__addsf3x+0x9a>
    1a96:	b0 cf       	rjmp	.-160    	; 0x19f8 <__addsf3+0x28>
    1a98:	93 95       	inc	r25
    1a9a:	88 0f       	add	r24, r24
    1a9c:	08 f0       	brcs	.+2      	; 0x1aa0 <__addsf3x+0xa2>
    1a9e:	99 27       	eor	r25, r25
    1aa0:	ee 0f       	add	r30, r30
    1aa2:	97 95       	ror	r25
    1aa4:	87 95       	ror	r24
    1aa6:	08 95       	ret

00001aa8 <__cmpsf2>:
    1aa8:	0e 94 37 0e 	call	0x1c6e	; 0x1c6e <__fp_cmp>
    1aac:	08 f4       	brcc	.+2      	; 0x1ab0 <__cmpsf2+0x8>
    1aae:	81 e0       	ldi	r24, 0x01	; 1
    1ab0:	08 95       	ret

00001ab2 <__divsf3>:
    1ab2:	0e 94 6d 0d 	call	0x1ada	; 0x1ada <__divsf3x>
    1ab6:	0c 94 99 0e 	jmp	0x1d32	; 0x1d32 <__fp_round>
    1aba:	0e 94 92 0e 	call	0x1d24	; 0x1d24 <__fp_pscB>
    1abe:	58 f0       	brcs	.+22     	; 0x1ad6 <__divsf3+0x24>
    1ac0:	0e 94 8b 0e 	call	0x1d16	; 0x1d16 <__fp_pscA>
    1ac4:	40 f0       	brcs	.+16     	; 0x1ad6 <__divsf3+0x24>
    1ac6:	29 f4       	brne	.+10     	; 0x1ad2 <__divsf3+0x20>
    1ac8:	5f 3f       	cpi	r21, 0xFF	; 255
    1aca:	29 f0       	breq	.+10     	; 0x1ad6 <__divsf3+0x24>
    1acc:	0c 94 5b 0e 	jmp	0x1cb6	; 0x1cb6 <__fp_inf>
    1ad0:	51 11       	cpse	r21, r1
    1ad2:	0c 94 cd 0e 	jmp	0x1d9a	; 0x1d9a <__fp_szero>
    1ad6:	0c 94 61 0e 	jmp	0x1cc2	; 0x1cc2 <__fp_nan>

00001ada <__divsf3x>:
    1ada:	0e 94 aa 0e 	call	0x1d54	; 0x1d54 <__fp_split3>
    1ade:	68 f3       	brcs	.-38     	; 0x1aba <__divsf3+0x8>

00001ae0 <__divsf3_pse>:
    1ae0:	99 23       	and	r25, r25
    1ae2:	b1 f3       	breq	.-20     	; 0x1ad0 <__divsf3+0x1e>
    1ae4:	55 23       	and	r21, r21
    1ae6:	91 f3       	breq	.-28     	; 0x1acc <__divsf3+0x1a>
    1ae8:	95 1b       	sub	r25, r21
    1aea:	55 0b       	sbc	r21, r21
    1aec:	bb 27       	eor	r27, r27
    1aee:	aa 27       	eor	r26, r26
    1af0:	62 17       	cp	r22, r18
    1af2:	73 07       	cpc	r23, r19
    1af4:	84 07       	cpc	r24, r20
    1af6:	38 f0       	brcs	.+14     	; 0x1b06 <__divsf3_pse+0x26>
    1af8:	9f 5f       	subi	r25, 0xFF	; 255
    1afa:	5f 4f       	sbci	r21, 0xFF	; 255
    1afc:	22 0f       	add	r18, r18
    1afe:	33 1f       	adc	r19, r19
    1b00:	44 1f       	adc	r20, r20
    1b02:	aa 1f       	adc	r26, r26
    1b04:	a9 f3       	breq	.-22     	; 0x1af0 <__divsf3_pse+0x10>
    1b06:	35 d0       	rcall	.+106    	; 0x1b72 <__divsf3_pse+0x92>
    1b08:	0e 2e       	mov	r0, r30
    1b0a:	3a f0       	brmi	.+14     	; 0x1b1a <__divsf3_pse+0x3a>
    1b0c:	e0 e8       	ldi	r30, 0x80	; 128
    1b0e:	32 d0       	rcall	.+100    	; 0x1b74 <__divsf3_pse+0x94>
    1b10:	91 50       	subi	r25, 0x01	; 1
    1b12:	50 40       	sbci	r21, 0x00	; 0
    1b14:	e6 95       	lsr	r30
    1b16:	00 1c       	adc	r0, r0
    1b18:	ca f7       	brpl	.-14     	; 0x1b0c <__divsf3_pse+0x2c>
    1b1a:	2b d0       	rcall	.+86     	; 0x1b72 <__divsf3_pse+0x92>
    1b1c:	fe 2f       	mov	r31, r30
    1b1e:	29 d0       	rcall	.+82     	; 0x1b72 <__divsf3_pse+0x92>
    1b20:	66 0f       	add	r22, r22
    1b22:	77 1f       	adc	r23, r23
    1b24:	88 1f       	adc	r24, r24
    1b26:	bb 1f       	adc	r27, r27
    1b28:	26 17       	cp	r18, r22
    1b2a:	37 07       	cpc	r19, r23
    1b2c:	48 07       	cpc	r20, r24
    1b2e:	ab 07       	cpc	r26, r27
    1b30:	b0 e8       	ldi	r27, 0x80	; 128
    1b32:	09 f0       	breq	.+2      	; 0x1b36 <__divsf3_pse+0x56>
    1b34:	bb 0b       	sbc	r27, r27
    1b36:	80 2d       	mov	r24, r0
    1b38:	bf 01       	movw	r22, r30
    1b3a:	ff 27       	eor	r31, r31
    1b3c:	93 58       	subi	r25, 0x83	; 131
    1b3e:	5f 4f       	sbci	r21, 0xFF	; 255
    1b40:	3a f0       	brmi	.+14     	; 0x1b50 <__divsf3_pse+0x70>
    1b42:	9e 3f       	cpi	r25, 0xFE	; 254
    1b44:	51 05       	cpc	r21, r1
    1b46:	78 f0       	brcs	.+30     	; 0x1b66 <__divsf3_pse+0x86>
    1b48:	0c 94 5b 0e 	jmp	0x1cb6	; 0x1cb6 <__fp_inf>
    1b4c:	0c 94 cd 0e 	jmp	0x1d9a	; 0x1d9a <__fp_szero>
    1b50:	5f 3f       	cpi	r21, 0xFF	; 255
    1b52:	e4 f3       	brlt	.-8      	; 0x1b4c <__divsf3_pse+0x6c>
    1b54:	98 3e       	cpi	r25, 0xE8	; 232
    1b56:	d4 f3       	brlt	.-12     	; 0x1b4c <__divsf3_pse+0x6c>
    1b58:	86 95       	lsr	r24
    1b5a:	77 95       	ror	r23
    1b5c:	67 95       	ror	r22
    1b5e:	b7 95       	ror	r27
    1b60:	f7 95       	ror	r31
    1b62:	9f 5f       	subi	r25, 0xFF	; 255
    1b64:	c9 f7       	brne	.-14     	; 0x1b58 <__divsf3_pse+0x78>
    1b66:	88 0f       	add	r24, r24
    1b68:	91 1d       	adc	r25, r1
    1b6a:	96 95       	lsr	r25
    1b6c:	87 95       	ror	r24
    1b6e:	97 f9       	bld	r25, 7
    1b70:	08 95       	ret
    1b72:	e1 e0       	ldi	r30, 0x01	; 1
    1b74:	66 0f       	add	r22, r22
    1b76:	77 1f       	adc	r23, r23
    1b78:	88 1f       	adc	r24, r24
    1b7a:	bb 1f       	adc	r27, r27
    1b7c:	62 17       	cp	r22, r18
    1b7e:	73 07       	cpc	r23, r19
    1b80:	84 07       	cpc	r24, r20
    1b82:	ba 07       	cpc	r27, r26
    1b84:	20 f0       	brcs	.+8      	; 0x1b8e <__divsf3_pse+0xae>
    1b86:	62 1b       	sub	r22, r18
    1b88:	73 0b       	sbc	r23, r19
    1b8a:	84 0b       	sbc	r24, r20
    1b8c:	ba 0b       	sbc	r27, r26
    1b8e:	ee 1f       	adc	r30, r30
    1b90:	88 f7       	brcc	.-30     	; 0x1b74 <__divsf3_pse+0x94>
    1b92:	e0 95       	com	r30
    1b94:	08 95       	ret

00001b96 <__fixunssfsi>:
    1b96:	0e 94 b2 0e 	call	0x1d64	; 0x1d64 <__fp_splitA>
    1b9a:	88 f0       	brcs	.+34     	; 0x1bbe <__fixunssfsi+0x28>
    1b9c:	9f 57       	subi	r25, 0x7F	; 127
    1b9e:	98 f0       	brcs	.+38     	; 0x1bc6 <__fixunssfsi+0x30>
    1ba0:	b9 2f       	mov	r27, r25
    1ba2:	99 27       	eor	r25, r25
    1ba4:	b7 51       	subi	r27, 0x17	; 23
    1ba6:	b0 f0       	brcs	.+44     	; 0x1bd4 <__fixunssfsi+0x3e>
    1ba8:	e1 f0       	breq	.+56     	; 0x1be2 <__fixunssfsi+0x4c>
    1baa:	66 0f       	add	r22, r22
    1bac:	77 1f       	adc	r23, r23
    1bae:	88 1f       	adc	r24, r24
    1bb0:	99 1f       	adc	r25, r25
    1bb2:	1a f0       	brmi	.+6      	; 0x1bba <__fixunssfsi+0x24>
    1bb4:	ba 95       	dec	r27
    1bb6:	c9 f7       	brne	.-14     	; 0x1baa <__fixunssfsi+0x14>
    1bb8:	14 c0       	rjmp	.+40     	; 0x1be2 <__fixunssfsi+0x4c>
    1bba:	b1 30       	cpi	r27, 0x01	; 1
    1bbc:	91 f0       	breq	.+36     	; 0x1be2 <__fixunssfsi+0x4c>
    1bbe:	0e 94 cc 0e 	call	0x1d98	; 0x1d98 <__fp_zero>
    1bc2:	b1 e0       	ldi	r27, 0x01	; 1
    1bc4:	08 95       	ret
    1bc6:	0c 94 cc 0e 	jmp	0x1d98	; 0x1d98 <__fp_zero>
    1bca:	67 2f       	mov	r22, r23
    1bcc:	78 2f       	mov	r23, r24
    1bce:	88 27       	eor	r24, r24
    1bd0:	b8 5f       	subi	r27, 0xF8	; 248
    1bd2:	39 f0       	breq	.+14     	; 0x1be2 <__fixunssfsi+0x4c>
    1bd4:	b9 3f       	cpi	r27, 0xF9	; 249
    1bd6:	cc f3       	brlt	.-14     	; 0x1bca <__fixunssfsi+0x34>
    1bd8:	86 95       	lsr	r24
    1bda:	77 95       	ror	r23
    1bdc:	67 95       	ror	r22
    1bde:	b3 95       	inc	r27
    1be0:	d9 f7       	brne	.-10     	; 0x1bd8 <__fixunssfsi+0x42>
    1be2:	3e f4       	brtc	.+14     	; 0x1bf2 <__fixunssfsi+0x5c>
    1be4:	90 95       	com	r25
    1be6:	80 95       	com	r24
    1be8:	70 95       	com	r23
    1bea:	61 95       	neg	r22
    1bec:	7f 4f       	sbci	r23, 0xFF	; 255
    1bee:	8f 4f       	sbci	r24, 0xFF	; 255
    1bf0:	9f 4f       	sbci	r25, 0xFF	; 255
    1bf2:	08 95       	ret

00001bf4 <__floatunsisf>:
    1bf4:	e8 94       	clt
    1bf6:	09 c0       	rjmp	.+18     	; 0x1c0a <__floatsisf+0x12>

00001bf8 <__floatsisf>:
    1bf8:	97 fb       	bst	r25, 7
    1bfa:	3e f4       	brtc	.+14     	; 0x1c0a <__floatsisf+0x12>
    1bfc:	90 95       	com	r25
    1bfe:	80 95       	com	r24
    1c00:	70 95       	com	r23
    1c02:	61 95       	neg	r22
    1c04:	7f 4f       	sbci	r23, 0xFF	; 255
    1c06:	8f 4f       	sbci	r24, 0xFF	; 255
    1c08:	9f 4f       	sbci	r25, 0xFF	; 255
    1c0a:	99 23       	and	r25, r25
    1c0c:	a9 f0       	breq	.+42     	; 0x1c38 <__floatsisf+0x40>
    1c0e:	f9 2f       	mov	r31, r25
    1c10:	96 e9       	ldi	r25, 0x96	; 150
    1c12:	bb 27       	eor	r27, r27
    1c14:	93 95       	inc	r25
    1c16:	f6 95       	lsr	r31
    1c18:	87 95       	ror	r24
    1c1a:	77 95       	ror	r23
    1c1c:	67 95       	ror	r22
    1c1e:	b7 95       	ror	r27
    1c20:	f1 11       	cpse	r31, r1
    1c22:	f8 cf       	rjmp	.-16     	; 0x1c14 <__floatsisf+0x1c>
    1c24:	fa f4       	brpl	.+62     	; 0x1c64 <__floatsisf+0x6c>
    1c26:	bb 0f       	add	r27, r27
    1c28:	11 f4       	brne	.+4      	; 0x1c2e <__floatsisf+0x36>
    1c2a:	60 ff       	sbrs	r22, 0
    1c2c:	1b c0       	rjmp	.+54     	; 0x1c64 <__floatsisf+0x6c>
    1c2e:	6f 5f       	subi	r22, 0xFF	; 255
    1c30:	7f 4f       	sbci	r23, 0xFF	; 255
    1c32:	8f 4f       	sbci	r24, 0xFF	; 255
    1c34:	9f 4f       	sbci	r25, 0xFF	; 255
    1c36:	16 c0       	rjmp	.+44     	; 0x1c64 <__floatsisf+0x6c>
    1c38:	88 23       	and	r24, r24
    1c3a:	11 f0       	breq	.+4      	; 0x1c40 <__floatsisf+0x48>
    1c3c:	96 e9       	ldi	r25, 0x96	; 150
    1c3e:	11 c0       	rjmp	.+34     	; 0x1c62 <__floatsisf+0x6a>
    1c40:	77 23       	and	r23, r23
    1c42:	21 f0       	breq	.+8      	; 0x1c4c <__floatsisf+0x54>
    1c44:	9e e8       	ldi	r25, 0x8E	; 142
    1c46:	87 2f       	mov	r24, r23
    1c48:	76 2f       	mov	r23, r22
    1c4a:	05 c0       	rjmp	.+10     	; 0x1c56 <__floatsisf+0x5e>
    1c4c:	66 23       	and	r22, r22
    1c4e:	71 f0       	breq	.+28     	; 0x1c6c <__floatsisf+0x74>
    1c50:	96 e8       	ldi	r25, 0x86	; 134
    1c52:	86 2f       	mov	r24, r22
    1c54:	70 e0       	ldi	r23, 0x00	; 0
    1c56:	60 e0       	ldi	r22, 0x00	; 0
    1c58:	2a f0       	brmi	.+10     	; 0x1c64 <__floatsisf+0x6c>
    1c5a:	9a 95       	dec	r25
    1c5c:	66 0f       	add	r22, r22
    1c5e:	77 1f       	adc	r23, r23
    1c60:	88 1f       	adc	r24, r24
    1c62:	da f7       	brpl	.-10     	; 0x1c5a <__floatsisf+0x62>
    1c64:	88 0f       	add	r24, r24
    1c66:	96 95       	lsr	r25
    1c68:	87 95       	ror	r24
    1c6a:	97 f9       	bld	r25, 7
    1c6c:	08 95       	ret

00001c6e <__fp_cmp>:
    1c6e:	99 0f       	add	r25, r25
    1c70:	00 08       	sbc	r0, r0
    1c72:	55 0f       	add	r21, r21
    1c74:	aa 0b       	sbc	r26, r26
    1c76:	e0 e8       	ldi	r30, 0x80	; 128
    1c78:	fe ef       	ldi	r31, 0xFE	; 254
    1c7a:	16 16       	cp	r1, r22
    1c7c:	17 06       	cpc	r1, r23
    1c7e:	e8 07       	cpc	r30, r24
    1c80:	f9 07       	cpc	r31, r25
    1c82:	c0 f0       	brcs	.+48     	; 0x1cb4 <__fp_cmp+0x46>
    1c84:	12 16       	cp	r1, r18
    1c86:	13 06       	cpc	r1, r19
    1c88:	e4 07       	cpc	r30, r20
    1c8a:	f5 07       	cpc	r31, r21
    1c8c:	98 f0       	brcs	.+38     	; 0x1cb4 <__fp_cmp+0x46>
    1c8e:	62 1b       	sub	r22, r18
    1c90:	73 0b       	sbc	r23, r19
    1c92:	84 0b       	sbc	r24, r20
    1c94:	95 0b       	sbc	r25, r21
    1c96:	39 f4       	brne	.+14     	; 0x1ca6 <__fp_cmp+0x38>
    1c98:	0a 26       	eor	r0, r26
    1c9a:	61 f0       	breq	.+24     	; 0x1cb4 <__fp_cmp+0x46>
    1c9c:	23 2b       	or	r18, r19
    1c9e:	24 2b       	or	r18, r20
    1ca0:	25 2b       	or	r18, r21
    1ca2:	21 f4       	brne	.+8      	; 0x1cac <__fp_cmp+0x3e>
    1ca4:	08 95       	ret
    1ca6:	0a 26       	eor	r0, r26
    1ca8:	09 f4       	brne	.+2      	; 0x1cac <__fp_cmp+0x3e>
    1caa:	a1 40       	sbci	r26, 0x01	; 1
    1cac:	a6 95       	lsr	r26
    1cae:	8f ef       	ldi	r24, 0xFF	; 255
    1cb0:	81 1d       	adc	r24, r1
    1cb2:	81 1d       	adc	r24, r1
    1cb4:	08 95       	ret

00001cb6 <__fp_inf>:
    1cb6:	97 f9       	bld	r25, 7
    1cb8:	9f 67       	ori	r25, 0x7F	; 127
    1cba:	80 e8       	ldi	r24, 0x80	; 128
    1cbc:	70 e0       	ldi	r23, 0x00	; 0
    1cbe:	60 e0       	ldi	r22, 0x00	; 0
    1cc0:	08 95       	ret

00001cc2 <__fp_nan>:
    1cc2:	9f ef       	ldi	r25, 0xFF	; 255
    1cc4:	80 ec       	ldi	r24, 0xC0	; 192
    1cc6:	08 95       	ret

00001cc8 <__fp_powser>:
    1cc8:	df 93       	push	r29
    1cca:	cf 93       	push	r28
    1ccc:	1f 93       	push	r17
    1cce:	0f 93       	push	r16
    1cd0:	ff 92       	push	r15
    1cd2:	ef 92       	push	r14
    1cd4:	df 92       	push	r13
    1cd6:	7b 01       	movw	r14, r22
    1cd8:	8c 01       	movw	r16, r24
    1cda:	68 94       	set
    1cdc:	06 c0       	rjmp	.+12     	; 0x1cea <__fp_powser+0x22>
    1cde:	da 2e       	mov	r13, r26
    1ce0:	ef 01       	movw	r28, r30
    1ce2:	0e 94 f3 0e 	call	0x1de6	; 0x1de6 <__mulsf3x>
    1ce6:	fe 01       	movw	r30, r28
    1ce8:	e8 94       	clt
    1cea:	a5 91       	lpm	r26, Z+
    1cec:	25 91       	lpm	r18, Z+
    1cee:	35 91       	lpm	r19, Z+
    1cf0:	45 91       	lpm	r20, Z+
    1cf2:	55 91       	lpm	r21, Z+
    1cf4:	a6 f3       	brts	.-24     	; 0x1cde <__fp_powser+0x16>
    1cf6:	ef 01       	movw	r28, r30
    1cf8:	0e 94 ff 0c 	call	0x19fe	; 0x19fe <__addsf3x>
    1cfc:	fe 01       	movw	r30, r28
    1cfe:	97 01       	movw	r18, r14
    1d00:	a8 01       	movw	r20, r16
    1d02:	da 94       	dec	r13
    1d04:	69 f7       	brne	.-38     	; 0x1ce0 <__fp_powser+0x18>
    1d06:	df 90       	pop	r13
    1d08:	ef 90       	pop	r14
    1d0a:	ff 90       	pop	r15
    1d0c:	0f 91       	pop	r16
    1d0e:	1f 91       	pop	r17
    1d10:	cf 91       	pop	r28
    1d12:	df 91       	pop	r29
    1d14:	08 95       	ret

00001d16 <__fp_pscA>:
    1d16:	00 24       	eor	r0, r0
    1d18:	0a 94       	dec	r0
    1d1a:	16 16       	cp	r1, r22
    1d1c:	17 06       	cpc	r1, r23
    1d1e:	18 06       	cpc	r1, r24
    1d20:	09 06       	cpc	r0, r25
    1d22:	08 95       	ret

00001d24 <__fp_pscB>:
    1d24:	00 24       	eor	r0, r0
    1d26:	0a 94       	dec	r0
    1d28:	12 16       	cp	r1, r18
    1d2a:	13 06       	cpc	r1, r19
    1d2c:	14 06       	cpc	r1, r20
    1d2e:	05 06       	cpc	r0, r21
    1d30:	08 95       	ret

00001d32 <__fp_round>:
    1d32:	09 2e       	mov	r0, r25
    1d34:	03 94       	inc	r0
    1d36:	00 0c       	add	r0, r0
    1d38:	11 f4       	brne	.+4      	; 0x1d3e <__fp_round+0xc>
    1d3a:	88 23       	and	r24, r24
    1d3c:	52 f0       	brmi	.+20     	; 0x1d52 <__fp_round+0x20>
    1d3e:	bb 0f       	add	r27, r27
    1d40:	40 f4       	brcc	.+16     	; 0x1d52 <__fp_round+0x20>
    1d42:	bf 2b       	or	r27, r31
    1d44:	11 f4       	brne	.+4      	; 0x1d4a <__fp_round+0x18>
    1d46:	60 ff       	sbrs	r22, 0
    1d48:	04 c0       	rjmp	.+8      	; 0x1d52 <__fp_round+0x20>
    1d4a:	6f 5f       	subi	r22, 0xFF	; 255
    1d4c:	7f 4f       	sbci	r23, 0xFF	; 255
    1d4e:	8f 4f       	sbci	r24, 0xFF	; 255
    1d50:	9f 4f       	sbci	r25, 0xFF	; 255
    1d52:	08 95       	ret

00001d54 <__fp_split3>:
    1d54:	57 fd       	sbrc	r21, 7
    1d56:	90 58       	subi	r25, 0x80	; 128
    1d58:	44 0f       	add	r20, r20
    1d5a:	55 1f       	adc	r21, r21
    1d5c:	59 f0       	breq	.+22     	; 0x1d74 <__fp_splitA+0x10>
    1d5e:	5f 3f       	cpi	r21, 0xFF	; 255
    1d60:	71 f0       	breq	.+28     	; 0x1d7e <__fp_splitA+0x1a>
    1d62:	47 95       	ror	r20

00001d64 <__fp_splitA>:
    1d64:	88 0f       	add	r24, r24
    1d66:	97 fb       	bst	r25, 7
    1d68:	99 1f       	adc	r25, r25
    1d6a:	61 f0       	breq	.+24     	; 0x1d84 <__fp_splitA+0x20>
    1d6c:	9f 3f       	cpi	r25, 0xFF	; 255
    1d6e:	79 f0       	breq	.+30     	; 0x1d8e <__fp_splitA+0x2a>
    1d70:	87 95       	ror	r24
    1d72:	08 95       	ret
    1d74:	12 16       	cp	r1, r18
    1d76:	13 06       	cpc	r1, r19
    1d78:	14 06       	cpc	r1, r20
    1d7a:	55 1f       	adc	r21, r21
    1d7c:	f2 cf       	rjmp	.-28     	; 0x1d62 <__fp_split3+0xe>
    1d7e:	46 95       	lsr	r20
    1d80:	f1 df       	rcall	.-30     	; 0x1d64 <__fp_splitA>
    1d82:	08 c0       	rjmp	.+16     	; 0x1d94 <__fp_splitA+0x30>
    1d84:	16 16       	cp	r1, r22
    1d86:	17 06       	cpc	r1, r23
    1d88:	18 06       	cpc	r1, r24
    1d8a:	99 1f       	adc	r25, r25
    1d8c:	f1 cf       	rjmp	.-30     	; 0x1d70 <__fp_splitA+0xc>
    1d8e:	86 95       	lsr	r24
    1d90:	71 05       	cpc	r23, r1
    1d92:	61 05       	cpc	r22, r1
    1d94:	08 94       	sec
    1d96:	08 95       	ret

00001d98 <__fp_zero>:
    1d98:	e8 94       	clt

00001d9a <__fp_szero>:
    1d9a:	bb 27       	eor	r27, r27
    1d9c:	66 27       	eor	r22, r22
    1d9e:	77 27       	eor	r23, r23
    1da0:	cb 01       	movw	r24, r22
    1da2:	97 f9       	bld	r25, 7
    1da4:	08 95       	ret

00001da6 <__gesf2>:
    1da6:	0e 94 37 0e 	call	0x1c6e	; 0x1c6e <__fp_cmp>
    1daa:	08 f4       	brcc	.+2      	; 0x1dae <__gesf2+0x8>
    1dac:	8f ef       	ldi	r24, 0xFF	; 255
    1dae:	08 95       	ret

00001db0 <inverse>:
    1db0:	9b 01       	movw	r18, r22
    1db2:	ac 01       	movw	r20, r24
    1db4:	60 e0       	ldi	r22, 0x00	; 0
    1db6:	70 e0       	ldi	r23, 0x00	; 0
    1db8:	80 e8       	ldi	r24, 0x80	; 128
    1dba:	9f e3       	ldi	r25, 0x3F	; 63
    1dbc:	0c 94 59 0d 	jmp	0x1ab2	; 0x1ab2 <__divsf3>

00001dc0 <__mulsf3>:
    1dc0:	0e 94 f3 0e 	call	0x1de6	; 0x1de6 <__mulsf3x>
    1dc4:	0c 94 99 0e 	jmp	0x1d32	; 0x1d32 <__fp_round>
    1dc8:	0e 94 8b 0e 	call	0x1d16	; 0x1d16 <__fp_pscA>
    1dcc:	38 f0       	brcs	.+14     	; 0x1ddc <__mulsf3+0x1c>
    1dce:	0e 94 92 0e 	call	0x1d24	; 0x1d24 <__fp_pscB>
    1dd2:	20 f0       	brcs	.+8      	; 0x1ddc <__mulsf3+0x1c>
    1dd4:	95 23       	and	r25, r21
    1dd6:	11 f0       	breq	.+4      	; 0x1ddc <__mulsf3+0x1c>
    1dd8:	0c 94 5b 0e 	jmp	0x1cb6	; 0x1cb6 <__fp_inf>
    1ddc:	0c 94 61 0e 	jmp	0x1cc2	; 0x1cc2 <__fp_nan>
    1de0:	11 24       	eor	r1, r1
    1de2:	0c 94 cd 0e 	jmp	0x1d9a	; 0x1d9a <__fp_szero>

00001de6 <__mulsf3x>:
    1de6:	0e 94 aa 0e 	call	0x1d54	; 0x1d54 <__fp_split3>
    1dea:	70 f3       	brcs	.-36     	; 0x1dc8 <__mulsf3+0x8>

00001dec <__mulsf3_pse>:
    1dec:	95 9f       	mul	r25, r21
    1dee:	c1 f3       	breq	.-16     	; 0x1de0 <__mulsf3+0x20>
    1df0:	95 0f       	add	r25, r21
    1df2:	50 e0       	ldi	r21, 0x00	; 0
    1df4:	55 1f       	adc	r21, r21
    1df6:	62 9f       	mul	r22, r18
    1df8:	f0 01       	movw	r30, r0
    1dfa:	72 9f       	mul	r23, r18
    1dfc:	bb 27       	eor	r27, r27
    1dfe:	f0 0d       	add	r31, r0
    1e00:	b1 1d       	adc	r27, r1
    1e02:	63 9f       	mul	r22, r19
    1e04:	aa 27       	eor	r26, r26
    1e06:	f0 0d       	add	r31, r0
    1e08:	b1 1d       	adc	r27, r1
    1e0a:	aa 1f       	adc	r26, r26
    1e0c:	64 9f       	mul	r22, r20
    1e0e:	66 27       	eor	r22, r22
    1e10:	b0 0d       	add	r27, r0
    1e12:	a1 1d       	adc	r26, r1
    1e14:	66 1f       	adc	r22, r22
    1e16:	82 9f       	mul	r24, r18
    1e18:	22 27       	eor	r18, r18
    1e1a:	b0 0d       	add	r27, r0
    1e1c:	a1 1d       	adc	r26, r1
    1e1e:	62 1f       	adc	r22, r18
    1e20:	73 9f       	mul	r23, r19
    1e22:	b0 0d       	add	r27, r0
    1e24:	a1 1d       	adc	r26, r1
    1e26:	62 1f       	adc	r22, r18
    1e28:	83 9f       	mul	r24, r19
    1e2a:	a0 0d       	add	r26, r0
    1e2c:	61 1d       	adc	r22, r1
    1e2e:	22 1f       	adc	r18, r18
    1e30:	74 9f       	mul	r23, r20
    1e32:	33 27       	eor	r19, r19
    1e34:	a0 0d       	add	r26, r0
    1e36:	61 1d       	adc	r22, r1
    1e38:	23 1f       	adc	r18, r19
    1e3a:	84 9f       	mul	r24, r20
    1e3c:	60 0d       	add	r22, r0
    1e3e:	21 1d       	adc	r18, r1
    1e40:	82 2f       	mov	r24, r18
    1e42:	76 2f       	mov	r23, r22
    1e44:	6a 2f       	mov	r22, r26
    1e46:	11 24       	eor	r1, r1
    1e48:	9f 57       	subi	r25, 0x7F	; 127
    1e4a:	50 40       	sbci	r21, 0x00	; 0
    1e4c:	9a f0       	brmi	.+38     	; 0x1e74 <__mulsf3_pse+0x88>
    1e4e:	f1 f0       	breq	.+60     	; 0x1e8c <__mulsf3_pse+0xa0>
    1e50:	88 23       	and	r24, r24
    1e52:	4a f0       	brmi	.+18     	; 0x1e66 <__mulsf3_pse+0x7a>
    1e54:	ee 0f       	add	r30, r30
    1e56:	ff 1f       	adc	r31, r31
    1e58:	bb 1f       	adc	r27, r27
    1e5a:	66 1f       	adc	r22, r22
    1e5c:	77 1f       	adc	r23, r23
    1e5e:	88 1f       	adc	r24, r24
    1e60:	91 50       	subi	r25, 0x01	; 1
    1e62:	50 40       	sbci	r21, 0x00	; 0
    1e64:	a9 f7       	brne	.-22     	; 0x1e50 <__mulsf3_pse+0x64>
    1e66:	9e 3f       	cpi	r25, 0xFE	; 254
    1e68:	51 05       	cpc	r21, r1
    1e6a:	80 f0       	brcs	.+32     	; 0x1e8c <__mulsf3_pse+0xa0>
    1e6c:	0c 94 5b 0e 	jmp	0x1cb6	; 0x1cb6 <__fp_inf>
    1e70:	0c 94 cd 0e 	jmp	0x1d9a	; 0x1d9a <__fp_szero>
    1e74:	5f 3f       	cpi	r21, 0xFF	; 255
    1e76:	e4 f3       	brlt	.-8      	; 0x1e70 <__mulsf3_pse+0x84>
    1e78:	98 3e       	cpi	r25, 0xE8	; 232
    1e7a:	d4 f3       	brlt	.-12     	; 0x1e70 <__mulsf3_pse+0x84>
    1e7c:	86 95       	lsr	r24
    1e7e:	77 95       	ror	r23
    1e80:	67 95       	ror	r22
    1e82:	b7 95       	ror	r27
    1e84:	f7 95       	ror	r31
    1e86:	e7 95       	ror	r30
    1e88:	9f 5f       	subi	r25, 0xFF	; 255
    1e8a:	c1 f7       	brne	.-16     	; 0x1e7c <__mulsf3_pse+0x90>
    1e8c:	fe 2b       	or	r31, r30
    1e8e:	88 0f       	add	r24, r24
    1e90:	91 1d       	adc	r25, r1
    1e92:	96 95       	lsr	r25
    1e94:	87 95       	ror	r24
    1e96:	97 f9       	bld	r25, 7
    1e98:	08 95       	ret

00001e9a <pow>:
    1e9a:	fa 01       	movw	r30, r20
    1e9c:	ee 0f       	add	r30, r30
    1e9e:	ff 1f       	adc	r31, r31
    1ea0:	30 96       	adiw	r30, 0x00	; 0
    1ea2:	21 05       	cpc	r18, r1
    1ea4:	31 05       	cpc	r19, r1
    1ea6:	a1 f1       	breq	.+104    	; 0x1f10 <pow+0x76>
    1ea8:	61 15       	cp	r22, r1
    1eaa:	71 05       	cpc	r23, r1
    1eac:	61 f4       	brne	.+24     	; 0x1ec6 <pow+0x2c>
    1eae:	80 38       	cpi	r24, 0x80	; 128
    1eb0:	bf e3       	ldi	r27, 0x3F	; 63
    1eb2:	9b 07       	cpc	r25, r27
    1eb4:	49 f1       	breq	.+82     	; 0x1f08 <pow+0x6e>
    1eb6:	68 94       	set
    1eb8:	90 38       	cpi	r25, 0x80	; 128
    1eba:	81 05       	cpc	r24, r1
    1ebc:	61 f0       	breq	.+24     	; 0x1ed6 <pow+0x3c>
    1ebe:	80 38       	cpi	r24, 0x80	; 128
    1ec0:	bf ef       	ldi	r27, 0xFF	; 255
    1ec2:	9b 07       	cpc	r25, r27
    1ec4:	41 f0       	breq	.+16     	; 0x1ed6 <pow+0x3c>
    1ec6:	99 23       	and	r25, r25
    1ec8:	4a f5       	brpl	.+82     	; 0x1f1c <pow+0x82>
    1eca:	ff 3f       	cpi	r31, 0xFF	; 255
    1ecc:	e1 05       	cpc	r30, r1
    1ece:	31 05       	cpc	r19, r1
    1ed0:	21 05       	cpc	r18, r1
    1ed2:	19 f1       	breq	.+70     	; 0x1f1a <pow+0x80>
    1ed4:	e8 94       	clt
    1ed6:	08 94       	sec
    1ed8:	e7 95       	ror	r30
    1eda:	d9 01       	movw	r26, r18
    1edc:	aa 23       	and	r26, r26
    1ede:	29 f4       	brne	.+10     	; 0x1eea <pow+0x50>
    1ee0:	ab 2f       	mov	r26, r27
    1ee2:	be 2f       	mov	r27, r30
    1ee4:	f8 5f       	subi	r31, 0xF8	; 248
    1ee6:	d0 f3       	brcs	.-12     	; 0x1edc <pow+0x42>
    1ee8:	10 c0       	rjmp	.+32     	; 0x1f0a <pow+0x70>
    1eea:	ff 5f       	subi	r31, 0xFF	; 255
    1eec:	70 f4       	brcc	.+28     	; 0x1f0a <pow+0x70>
    1eee:	a6 95       	lsr	r26
    1ef0:	e0 f7       	brcc	.-8      	; 0x1eea <pow+0x50>
    1ef2:	f7 39       	cpi	r31, 0x97	; 151
    1ef4:	50 f0       	brcs	.+20     	; 0x1f0a <pow+0x70>
    1ef6:	19 f0       	breq	.+6      	; 0x1efe <pow+0x64>
    1ef8:	ff 3a       	cpi	r31, 0xAF	; 175
    1efa:	38 f4       	brcc	.+14     	; 0x1f0a <pow+0x70>
    1efc:	9f 77       	andi	r25, 0x7F	; 127
    1efe:	9f 93       	push	r25
    1f00:	0d d0       	rcall	.+26     	; 0x1f1c <pow+0x82>
    1f02:	0f 90       	pop	r0
    1f04:	07 fc       	sbrc	r0, 7
    1f06:	90 58       	subi	r25, 0x80	; 128
    1f08:	08 95       	ret
    1f0a:	46 f0       	brts	.+16     	; 0x1f1c <pow+0x82>
    1f0c:	0c 94 61 0e 	jmp	0x1cc2	; 0x1cc2 <__fp_nan>
    1f10:	60 e0       	ldi	r22, 0x00	; 0
    1f12:	70 e0       	ldi	r23, 0x00	; 0
    1f14:	80 e8       	ldi	r24, 0x80	; 128
    1f16:	9f e3       	ldi	r25, 0x3F	; 63
    1f18:	08 95       	ret
    1f1a:	4f e7       	ldi	r20, 0x7F	; 127
    1f1c:	9f 77       	andi	r25, 0x7F	; 127
    1f1e:	5f 93       	push	r21
    1f20:	4f 93       	push	r20
    1f22:	3f 93       	push	r19
    1f24:	2f 93       	push	r18
    1f26:	0e 94 66 10 	call	0x20cc	; 0x20cc <log>
    1f2a:	2f 91       	pop	r18
    1f2c:	3f 91       	pop	r19
    1f2e:	4f 91       	pop	r20
    1f30:	5f 91       	pop	r21
    1f32:	0e 94 e0 0e 	call	0x1dc0	; 0x1dc0 <__mulsf3>
    1f36:	0c 94 c9 0f 	jmp	0x1f92	; 0x1f92 <exp>

00001f3a <round>:
    1f3a:	0e 94 b2 0e 	call	0x1d64	; 0x1d64 <__fp_splitA>
    1f3e:	e8 f0       	brcs	.+58     	; 0x1f7a <round+0x40>
    1f40:	9e 37       	cpi	r25, 0x7E	; 126
    1f42:	e8 f0       	brcs	.+58     	; 0x1f7e <round+0x44>
    1f44:	96 39       	cpi	r25, 0x96	; 150
    1f46:	b8 f4       	brcc	.+46     	; 0x1f76 <round+0x3c>
    1f48:	9e 38       	cpi	r25, 0x8E	; 142
    1f4a:	48 f4       	brcc	.+18     	; 0x1f5e <round+0x24>
    1f4c:	67 2f       	mov	r22, r23
    1f4e:	78 2f       	mov	r23, r24
    1f50:	88 27       	eor	r24, r24
    1f52:	98 5f       	subi	r25, 0xF8	; 248
    1f54:	f9 cf       	rjmp	.-14     	; 0x1f48 <round+0xe>
    1f56:	86 95       	lsr	r24
    1f58:	77 95       	ror	r23
    1f5a:	67 95       	ror	r22
    1f5c:	93 95       	inc	r25
    1f5e:	95 39       	cpi	r25, 0x95	; 149
    1f60:	d0 f3       	brcs	.-12     	; 0x1f56 <round+0x1c>
    1f62:	b6 2f       	mov	r27, r22
    1f64:	b1 70       	andi	r27, 0x01	; 1
    1f66:	6b 0f       	add	r22, r27
    1f68:	71 1d       	adc	r23, r1
    1f6a:	81 1d       	adc	r24, r1
    1f6c:	20 f4       	brcc	.+8      	; 0x1f76 <round+0x3c>
    1f6e:	87 95       	ror	r24
    1f70:	77 95       	ror	r23
    1f72:	67 95       	ror	r22
    1f74:	93 95       	inc	r25
    1f76:	0c 94 fb 0f 	jmp	0x1ff6	; 0x1ff6 <__fp_mintl>
    1f7a:	0c 94 16 10 	jmp	0x202c	; 0x202c <__fp_mpack>
    1f7e:	0c 94 cd 0e 	jmp	0x1d9a	; 0x1d9a <__fp_szero>
    1f82:	29 f4       	brne	.+10     	; 0x1f8e <round+0x54>
    1f84:	16 f0       	brts	.+4      	; 0x1f8a <round+0x50>
    1f86:	0c 94 5b 0e 	jmp	0x1cb6	; 0x1cb6 <__fp_inf>
    1f8a:	0c 94 cc 0e 	jmp	0x1d98	; 0x1d98 <__fp_zero>
    1f8e:	0c 94 61 0e 	jmp	0x1cc2	; 0x1cc2 <__fp_nan>

00001f92 <exp>:
    1f92:	0e 94 b2 0e 	call	0x1d64	; 0x1d64 <__fp_splitA>
    1f96:	a8 f3       	brcs	.-22     	; 0x1f82 <round+0x48>
    1f98:	96 38       	cpi	r25, 0x86	; 134
    1f9a:	a0 f7       	brcc	.-24     	; 0x1f84 <round+0x4a>
    1f9c:	07 f8       	bld	r0, 7
    1f9e:	0f 92       	push	r0
    1fa0:	e8 94       	clt
    1fa2:	2b e3       	ldi	r18, 0x3B	; 59
    1fa4:	3a ea       	ldi	r19, 0xAA	; 170
    1fa6:	48 eb       	ldi	r20, 0xB8	; 184
    1fa8:	5f e7       	ldi	r21, 0x7F	; 127
    1faa:	0e 94 f6 0e 	call	0x1dec	; 0x1dec <__mulsf3_pse>
    1fae:	0f 92       	push	r0
    1fb0:	0f 92       	push	r0
    1fb2:	0f 92       	push	r0
    1fb4:	4d b7       	in	r20, 0x3d	; 61
    1fb6:	5e b7       	in	r21, 0x3e	; 62
    1fb8:	0f 92       	push	r0
    1fba:	0e 94 ae 10 	call	0x215c	; 0x215c <modf>
    1fbe:	e4 e3       	ldi	r30, 0x34	; 52
    1fc0:	f1 e0       	ldi	r31, 0x01	; 1
    1fc2:	0e 94 64 0e 	call	0x1cc8	; 0x1cc8 <__fp_powser>
    1fc6:	4f 91       	pop	r20
    1fc8:	5f 91       	pop	r21
    1fca:	ef 91       	pop	r30
    1fcc:	ff 91       	pop	r31
    1fce:	e5 95       	asr	r30
    1fd0:	ee 1f       	adc	r30, r30
    1fd2:	ff 1f       	adc	r31, r31
    1fd4:	49 f0       	breq	.+18     	; 0x1fe8 <exp+0x56>
    1fd6:	fe 57       	subi	r31, 0x7E	; 126
    1fd8:	e0 68       	ori	r30, 0x80	; 128
    1fda:	44 27       	eor	r20, r20
    1fdc:	ee 0f       	add	r30, r30
    1fde:	44 1f       	adc	r20, r20
    1fe0:	fa 95       	dec	r31
    1fe2:	e1 f7       	brne	.-8      	; 0x1fdc <exp+0x4a>
    1fe4:	41 95       	neg	r20
    1fe6:	55 0b       	sbc	r21, r21
    1fe8:	0e 94 28 10 	call	0x2050	; 0x2050 <ldexp>
    1fec:	0f 90       	pop	r0
    1fee:	07 fe       	sbrs	r0, 7
    1ff0:	0c 94 d8 0e 	jmp	0x1db0	; 0x1db0 <inverse>
    1ff4:	08 95       	ret

00001ff6 <__fp_mintl>:
    1ff6:	88 23       	and	r24, r24
    1ff8:	71 f4       	brne	.+28     	; 0x2016 <__fp_mintl+0x20>
    1ffa:	77 23       	and	r23, r23
    1ffc:	21 f0       	breq	.+8      	; 0x2006 <__fp_mintl+0x10>
    1ffe:	98 50       	subi	r25, 0x08	; 8
    2000:	87 2b       	or	r24, r23
    2002:	76 2f       	mov	r23, r22
    2004:	07 c0       	rjmp	.+14     	; 0x2014 <__fp_mintl+0x1e>
    2006:	66 23       	and	r22, r22
    2008:	11 f4       	brne	.+4      	; 0x200e <__fp_mintl+0x18>
    200a:	99 27       	eor	r25, r25
    200c:	0d c0       	rjmp	.+26     	; 0x2028 <__fp_mintl+0x32>
    200e:	90 51       	subi	r25, 0x10	; 16
    2010:	86 2b       	or	r24, r22
    2012:	70 e0       	ldi	r23, 0x00	; 0
    2014:	60 e0       	ldi	r22, 0x00	; 0
    2016:	2a f0       	brmi	.+10     	; 0x2022 <__fp_mintl+0x2c>
    2018:	9a 95       	dec	r25
    201a:	66 0f       	add	r22, r22
    201c:	77 1f       	adc	r23, r23
    201e:	88 1f       	adc	r24, r24
    2020:	da f7       	brpl	.-10     	; 0x2018 <__fp_mintl+0x22>
    2022:	88 0f       	add	r24, r24
    2024:	96 95       	lsr	r25
    2026:	87 95       	ror	r24
    2028:	97 f9       	bld	r25, 7
    202a:	08 95       	ret

0000202c <__fp_mpack>:
    202c:	9f 3f       	cpi	r25, 0xFF	; 255
    202e:	31 f0       	breq	.+12     	; 0x203c <__fp_mpack_finite+0xc>

00002030 <__fp_mpack_finite>:
    2030:	91 50       	subi	r25, 0x01	; 1
    2032:	20 f4       	brcc	.+8      	; 0x203c <__fp_mpack_finite+0xc>
    2034:	87 95       	ror	r24
    2036:	77 95       	ror	r23
    2038:	67 95       	ror	r22
    203a:	b7 95       	ror	r27
    203c:	88 0f       	add	r24, r24
    203e:	91 1d       	adc	r25, r1
    2040:	96 95       	lsr	r25
    2042:	87 95       	ror	r24
    2044:	97 f9       	bld	r25, 7
    2046:	08 95       	ret
    2048:	0c 94 5b 0e 	jmp	0x1cb6	; 0x1cb6 <__fp_inf>
    204c:	0c 94 16 10 	jmp	0x202c	; 0x202c <__fp_mpack>

00002050 <ldexp>:
    2050:	0e 94 b2 0e 	call	0x1d64	; 0x1d64 <__fp_splitA>
    2054:	d8 f3       	brcs	.-10     	; 0x204c <__fp_mpack_finite+0x1c>
    2056:	99 23       	and	r25, r25
    2058:	c9 f3       	breq	.-14     	; 0x204c <__fp_mpack_finite+0x1c>
    205a:	94 0f       	add	r25, r20
    205c:	51 1d       	adc	r21, r1
    205e:	a3 f3       	brvs	.-24     	; 0x2048 <__fp_mpack_finite+0x18>
    2060:	91 50       	subi	r25, 0x01	; 1
    2062:	50 40       	sbci	r21, 0x00	; 0
    2064:	94 f0       	brlt	.+36     	; 0x208a <ldexp+0x3a>
    2066:	59 f0       	breq	.+22     	; 0x207e <ldexp+0x2e>
    2068:	88 23       	and	r24, r24
    206a:	32 f0       	brmi	.+12     	; 0x2078 <ldexp+0x28>
    206c:	66 0f       	add	r22, r22
    206e:	77 1f       	adc	r23, r23
    2070:	88 1f       	adc	r24, r24
    2072:	91 50       	subi	r25, 0x01	; 1
    2074:	50 40       	sbci	r21, 0x00	; 0
    2076:	c1 f7       	brne	.-16     	; 0x2068 <ldexp+0x18>
    2078:	9e 3f       	cpi	r25, 0xFE	; 254
    207a:	51 05       	cpc	r21, r1
    207c:	2c f7       	brge	.-54     	; 0x2048 <__fp_mpack_finite+0x18>
    207e:	88 0f       	add	r24, r24
    2080:	91 1d       	adc	r25, r1
    2082:	96 95       	lsr	r25
    2084:	87 95       	ror	r24
    2086:	97 f9       	bld	r25, 7
    2088:	08 95       	ret
    208a:	5f 3f       	cpi	r21, 0xFF	; 255
    208c:	ac f0       	brlt	.+42     	; 0x20b8 <ldexp+0x68>
    208e:	98 3e       	cpi	r25, 0xE8	; 232
    2090:	9c f0       	brlt	.+38     	; 0x20b8 <ldexp+0x68>
    2092:	bb 27       	eor	r27, r27
    2094:	86 95       	lsr	r24
    2096:	77 95       	ror	r23
    2098:	67 95       	ror	r22
    209a:	b7 95       	ror	r27
    209c:	08 f4       	brcc	.+2      	; 0x20a0 <ldexp+0x50>
    209e:	b1 60       	ori	r27, 0x01	; 1
    20a0:	93 95       	inc	r25
    20a2:	c1 f7       	brne	.-16     	; 0x2094 <ldexp+0x44>
    20a4:	bb 0f       	add	r27, r27
    20a6:	58 f7       	brcc	.-42     	; 0x207e <ldexp+0x2e>
    20a8:	11 f4       	brne	.+4      	; 0x20ae <ldexp+0x5e>
    20aa:	60 ff       	sbrs	r22, 0
    20ac:	e8 cf       	rjmp	.-48     	; 0x207e <ldexp+0x2e>
    20ae:	6f 5f       	subi	r22, 0xFF	; 255
    20b0:	7f 4f       	sbci	r23, 0xFF	; 255
    20b2:	8f 4f       	sbci	r24, 0xFF	; 255
    20b4:	9f 4f       	sbci	r25, 0xFF	; 255
    20b6:	e3 cf       	rjmp	.-58     	; 0x207e <ldexp+0x2e>
    20b8:	0c 94 cd 0e 	jmp	0x1d9a	; 0x1d9a <__fp_szero>
    20bc:	16 f0       	brts	.+4      	; 0x20c2 <ldexp+0x72>
    20be:	0c 94 16 10 	jmp	0x202c	; 0x202c <__fp_mpack>
    20c2:	0c 94 61 0e 	jmp	0x1cc2	; 0x1cc2 <__fp_nan>
    20c6:	68 94       	set
    20c8:	0c 94 5b 0e 	jmp	0x1cb6	; 0x1cb6 <__fp_inf>

000020cc <log>:
    20cc:	0e 94 b2 0e 	call	0x1d64	; 0x1d64 <__fp_splitA>
    20d0:	a8 f3       	brcs	.-22     	; 0x20bc <ldexp+0x6c>
    20d2:	99 23       	and	r25, r25
    20d4:	c1 f3       	breq	.-16     	; 0x20c6 <ldexp+0x76>
    20d6:	ae f3       	brts	.-22     	; 0x20c2 <ldexp+0x72>
    20d8:	df 93       	push	r29
    20da:	cf 93       	push	r28
    20dc:	1f 93       	push	r17
    20de:	0f 93       	push	r16
    20e0:	ff 92       	push	r15
    20e2:	c9 2f       	mov	r28, r25
    20e4:	dd 27       	eor	r29, r29
    20e6:	88 23       	and	r24, r24
    20e8:	2a f0       	brmi	.+10     	; 0x20f4 <log+0x28>
    20ea:	21 97       	sbiw	r28, 0x01	; 1
    20ec:	66 0f       	add	r22, r22
    20ee:	77 1f       	adc	r23, r23
    20f0:	88 1f       	adc	r24, r24
    20f2:	da f7       	brpl	.-10     	; 0x20ea <log+0x1e>
    20f4:	20 e0       	ldi	r18, 0x00	; 0
    20f6:	30 e0       	ldi	r19, 0x00	; 0
    20f8:	40 e8       	ldi	r20, 0x80	; 128
    20fa:	5f eb       	ldi	r21, 0xBF	; 191
    20fc:	9f e3       	ldi	r25, 0x3F	; 63
    20fe:	88 39       	cpi	r24, 0x98	; 152
    2100:	20 f0       	brcs	.+8      	; 0x210a <log+0x3e>
    2102:	80 3e       	cpi	r24, 0xE0	; 224
    2104:	38 f0       	brcs	.+14     	; 0x2114 <log+0x48>
    2106:	21 96       	adiw	r28, 0x01	; 1
    2108:	8f 77       	andi	r24, 0x7F	; 127
    210a:	0e 94 e8 0c 	call	0x19d0	; 0x19d0 <__addsf3>
    210e:	ec e5       	ldi	r30, 0x5C	; 92
    2110:	f1 e0       	ldi	r31, 0x01	; 1
    2112:	04 c0       	rjmp	.+8      	; 0x211c <log+0x50>
    2114:	0e 94 e8 0c 	call	0x19d0	; 0x19d0 <__addsf3>
    2118:	e9 e8       	ldi	r30, 0x89	; 137
    211a:	f1 e0       	ldi	r31, 0x01	; 1
    211c:	0e 94 64 0e 	call	0x1cc8	; 0x1cc8 <__fp_powser>
    2120:	8b 01       	movw	r16, r22
    2122:	be 01       	movw	r22, r28
    2124:	ec 01       	movw	r28, r24
    2126:	fb 2e       	mov	r15, r27
    2128:	6f 57       	subi	r22, 0x7F	; 127
    212a:	71 09       	sbc	r23, r1
    212c:	75 95       	asr	r23
    212e:	77 1f       	adc	r23, r23
    2130:	88 0b       	sbc	r24, r24
    2132:	99 0b       	sbc	r25, r25
    2134:	0e 94 fc 0d 	call	0x1bf8	; 0x1bf8 <__floatsisf>
    2138:	28 e1       	ldi	r18, 0x18	; 24
    213a:	32 e7       	ldi	r19, 0x72	; 114
    213c:	41 e3       	ldi	r20, 0x31	; 49
    213e:	5f e3       	ldi	r21, 0x3F	; 63
    2140:	0e 94 f3 0e 	call	0x1de6	; 0x1de6 <__mulsf3x>
    2144:	af 2d       	mov	r26, r15
    2146:	98 01       	movw	r18, r16
    2148:	ae 01       	movw	r20, r28
    214a:	ff 90       	pop	r15
    214c:	0f 91       	pop	r16
    214e:	1f 91       	pop	r17
    2150:	cf 91       	pop	r28
    2152:	df 91       	pop	r29
    2154:	0e 94 ff 0c 	call	0x19fe	; 0x19fe <__addsf3x>
    2158:	0c 94 99 0e 	jmp	0x1d32	; 0x1d32 <__fp_round>

0000215c <modf>:
    215c:	fa 01       	movw	r30, r20
    215e:	dc 01       	movw	r26, r24
    2160:	aa 0f       	add	r26, r26
    2162:	bb 1f       	adc	r27, r27
    2164:	9b 01       	movw	r18, r22
    2166:	ac 01       	movw	r20, r24
    2168:	bf 57       	subi	r27, 0x7F	; 127
    216a:	28 f4       	brcc	.+10     	; 0x2176 <modf+0x1a>
    216c:	22 27       	eor	r18, r18
    216e:	33 27       	eor	r19, r19
    2170:	44 27       	eor	r20, r20
    2172:	50 78       	andi	r21, 0x80	; 128
    2174:	20 c0       	rjmp	.+64     	; 0x21b6 <modf+0x5a>
    2176:	b7 51       	subi	r27, 0x17	; 23
    2178:	90 f4       	brcc	.+36     	; 0x219e <modf+0x42>
    217a:	ab 2f       	mov	r26, r27
    217c:	00 24       	eor	r0, r0
    217e:	46 95       	lsr	r20
    2180:	37 95       	ror	r19
    2182:	27 95       	ror	r18
    2184:	01 1c       	adc	r0, r1
    2186:	a3 95       	inc	r26
    2188:	d2 f3       	brmi	.-12     	; 0x217e <modf+0x22>
    218a:	00 20       	and	r0, r0
    218c:	71 f0       	breq	.+28     	; 0x21aa <modf+0x4e>
    218e:	22 0f       	add	r18, r18
    2190:	33 1f       	adc	r19, r19
    2192:	44 1f       	adc	r20, r20
    2194:	b3 95       	inc	r27
    2196:	da f3       	brmi	.-10     	; 0x218e <modf+0x32>
    2198:	0e d0       	rcall	.+28     	; 0x21b6 <modf+0x5a>
    219a:	0c 94 e7 0c 	jmp	0x19ce	; 0x19ce <__subsf3>
    219e:	61 30       	cpi	r22, 0x01	; 1
    21a0:	71 05       	cpc	r23, r1
    21a2:	a0 e8       	ldi	r26, 0x80	; 128
    21a4:	8a 07       	cpc	r24, r26
    21a6:	b9 46       	sbci	r27, 0x69	; 105
    21a8:	30 f4       	brcc	.+12     	; 0x21b6 <modf+0x5a>
    21aa:	9b 01       	movw	r18, r22
    21ac:	ac 01       	movw	r20, r24
    21ae:	66 27       	eor	r22, r22
    21b0:	77 27       	eor	r23, r23
    21b2:	88 27       	eor	r24, r24
    21b4:	90 78       	andi	r25, 0x80	; 128
    21b6:	30 96       	adiw	r30, 0x00	; 0
    21b8:	21 f0       	breq	.+8      	; 0x21c2 <modf+0x66>
    21ba:	20 83       	st	Z, r18
    21bc:	31 83       	std	Z+1, r19	; 0x01
    21be:	42 83       	std	Z+2, r20	; 0x02
    21c0:	53 83       	std	Z+3, r21	; 0x03
    21c2:	08 95       	ret

000021c4 <__udivmodhi4>:
    21c4:	aa 1b       	sub	r26, r26
    21c6:	bb 1b       	sub	r27, r27
    21c8:	51 e1       	ldi	r21, 0x11	; 17
    21ca:	07 c0       	rjmp	.+14     	; 0x21da <__udivmodhi4_ep>

000021cc <__udivmodhi4_loop>:
    21cc:	aa 1f       	adc	r26, r26
    21ce:	bb 1f       	adc	r27, r27
    21d0:	a6 17       	cp	r26, r22
    21d2:	b7 07       	cpc	r27, r23
    21d4:	10 f0       	brcs	.+4      	; 0x21da <__udivmodhi4_ep>
    21d6:	a6 1b       	sub	r26, r22
    21d8:	b7 0b       	sbc	r27, r23

000021da <__udivmodhi4_ep>:
    21da:	88 1f       	adc	r24, r24
    21dc:	99 1f       	adc	r25, r25
    21de:	5a 95       	dec	r21
    21e0:	a9 f7       	brne	.-22     	; 0x21cc <__udivmodhi4_loop>
    21e2:	80 95       	com	r24
    21e4:	90 95       	com	r25
    21e6:	bc 01       	movw	r22, r24
    21e8:	cd 01       	movw	r24, r26
    21ea:	08 95       	ret

000021ec <__divmodhi4>:
    21ec:	97 fb       	bst	r25, 7
    21ee:	07 2e       	mov	r0, r23
    21f0:	16 f4       	brtc	.+4      	; 0x21f6 <__divmodhi4+0xa>
    21f2:	00 94       	com	r0
    21f4:	07 d0       	rcall	.+14     	; 0x2204 <__divmodhi4_neg1>
    21f6:	77 fd       	sbrc	r23, 7
    21f8:	09 d0       	rcall	.+18     	; 0x220c <__divmodhi4_neg2>
    21fa:	0e 94 e2 10 	call	0x21c4	; 0x21c4 <__udivmodhi4>
    21fe:	07 fc       	sbrc	r0, 7
    2200:	05 d0       	rcall	.+10     	; 0x220c <__divmodhi4_neg2>
    2202:	3e f4       	brtc	.+14     	; 0x2212 <__divmodhi4_exit>

00002204 <__divmodhi4_neg1>:
    2204:	90 95       	com	r25
    2206:	81 95       	neg	r24
    2208:	9f 4f       	sbci	r25, 0xFF	; 255
    220a:	08 95       	ret

0000220c <__divmodhi4_neg2>:
    220c:	70 95       	com	r23
    220e:	61 95       	neg	r22
    2210:	7f 4f       	sbci	r23, 0xFF	; 255

00002212 <__divmodhi4_exit>:
    2212:	08 95       	ret

00002214 <__udivmodsi4>:
    2214:	a1 e2       	ldi	r26, 0x21	; 33
    2216:	1a 2e       	mov	r1, r26
    2218:	aa 1b       	sub	r26, r26
    221a:	bb 1b       	sub	r27, r27
    221c:	fd 01       	movw	r30, r26
    221e:	0d c0       	rjmp	.+26     	; 0x223a <__udivmodsi4_ep>

00002220 <__udivmodsi4_loop>:
    2220:	aa 1f       	adc	r26, r26
    2222:	bb 1f       	adc	r27, r27
    2224:	ee 1f       	adc	r30, r30
    2226:	ff 1f       	adc	r31, r31
    2228:	a2 17       	cp	r26, r18
    222a:	b3 07       	cpc	r27, r19
    222c:	e4 07       	cpc	r30, r20
    222e:	f5 07       	cpc	r31, r21
    2230:	20 f0       	brcs	.+8      	; 0x223a <__udivmodsi4_ep>
    2232:	a2 1b       	sub	r26, r18
    2234:	b3 0b       	sbc	r27, r19
    2236:	e4 0b       	sbc	r30, r20
    2238:	f5 0b       	sbc	r31, r21

0000223a <__udivmodsi4_ep>:
    223a:	66 1f       	adc	r22, r22
    223c:	77 1f       	adc	r23, r23
    223e:	88 1f       	adc	r24, r24
    2240:	99 1f       	adc	r25, r25
    2242:	1a 94       	dec	r1
    2244:	69 f7       	brne	.-38     	; 0x2220 <__udivmodsi4_loop>
    2246:	60 95       	com	r22
    2248:	70 95       	com	r23
    224a:	80 95       	com	r24
    224c:	90 95       	com	r25
    224e:	9b 01       	movw	r18, r22
    2250:	ac 01       	movw	r20, r24
    2252:	bd 01       	movw	r22, r26
    2254:	cf 01       	movw	r24, r30
    2256:	08 95       	ret

00002258 <__tablejump2__>:
    2258:	ee 0f       	add	r30, r30
    225a:	ff 1f       	adc	r31, r31
    225c:	05 90       	lpm	r0, Z+
    225e:	f4 91       	lpm	r31, Z
    2260:	e0 2d       	mov	r30, r0
    2262:	09 94       	ijmp

00002264 <__umulhisi3>:
    2264:	a2 9f       	mul	r26, r18
    2266:	b0 01       	movw	r22, r0
    2268:	b3 9f       	mul	r27, r19
    226a:	c0 01       	movw	r24, r0
    226c:	a3 9f       	mul	r26, r19
    226e:	70 0d       	add	r23, r0
    2270:	81 1d       	adc	r24, r1
    2272:	11 24       	eor	r1, r1
    2274:	91 1d       	adc	r25, r1
    2276:	b2 9f       	mul	r27, r18
    2278:	70 0d       	add	r23, r0
    227a:	81 1d       	adc	r24, r1
    227c:	11 24       	eor	r1, r1
    227e:	91 1d       	adc	r25, r1
    2280:	08 95       	ret

00002282 <atoi>:
    2282:	fc 01       	movw	r30, r24
    2284:	88 27       	eor	r24, r24
    2286:	99 27       	eor	r25, r25
    2288:	e8 94       	clt
    228a:	21 91       	ld	r18, Z+
    228c:	20 32       	cpi	r18, 0x20	; 32
    228e:	e9 f3       	breq	.-6      	; 0x228a <atoi+0x8>
    2290:	29 30       	cpi	r18, 0x09	; 9
    2292:	10 f0       	brcs	.+4      	; 0x2298 <atoi+0x16>
    2294:	2e 30       	cpi	r18, 0x0E	; 14
    2296:	c8 f3       	brcs	.-14     	; 0x228a <atoi+0x8>
    2298:	2b 32       	cpi	r18, 0x2B	; 43
    229a:	41 f0       	breq	.+16     	; 0x22ac <atoi+0x2a>
    229c:	2d 32       	cpi	r18, 0x2D	; 45
    229e:	39 f4       	brne	.+14     	; 0x22ae <atoi+0x2c>
    22a0:	68 94       	set
    22a2:	04 c0       	rjmp	.+8      	; 0x22ac <atoi+0x2a>
    22a4:	0e 94 5f 11 	call	0x22be	; 0x22be <__mulhi_const_10>
    22a8:	82 0f       	add	r24, r18
    22aa:	91 1d       	adc	r25, r1
    22ac:	21 91       	ld	r18, Z+
    22ae:	20 53       	subi	r18, 0x30	; 48
    22b0:	2a 30       	cpi	r18, 0x0A	; 10
    22b2:	c0 f3       	brcs	.-16     	; 0x22a4 <atoi+0x22>
    22b4:	1e f4       	brtc	.+6      	; 0x22bc <atoi+0x3a>
    22b6:	90 95       	com	r25
    22b8:	81 95       	neg	r24
    22ba:	9f 4f       	sbci	r25, 0xFF	; 255
    22bc:	08 95       	ret

000022be <__mulhi_const_10>:
    22be:	7a e0       	ldi	r23, 0x0A	; 10
    22c0:	97 9f       	mul	r25, r23
    22c2:	90 2d       	mov	r25, r0
    22c4:	87 9f       	mul	r24, r23
    22c6:	80 2d       	mov	r24, r0
    22c8:	91 0d       	add	r25, r1
    22ca:	11 24       	eor	r1, r1
    22cc:	08 95       	ret

000022ce <sscanf>:
    22ce:	ae e0       	ldi	r26, 0x0E	; 14
    22d0:	b0 e0       	ldi	r27, 0x00	; 0
    22d2:	ed e6       	ldi	r30, 0x6D	; 109
    22d4:	f1 e1       	ldi	r31, 0x11	; 17
    22d6:	0c 94 d4 14 	jmp	0x29a8	; 0x29a8 <__prologue_saves__+0x20>
    22da:	85 e0       	ldi	r24, 0x05	; 5
    22dc:	8c 83       	std	Y+4, r24	; 0x04
    22de:	8b 89       	ldd	r24, Y+19	; 0x13
    22e0:	9c 89       	ldd	r25, Y+20	; 0x14
    22e2:	9a 83       	std	Y+2, r25	; 0x02
    22e4:	89 83       	std	Y+1, r24	; 0x01
    22e6:	ae 01       	movw	r20, r28
    22e8:	49 5e       	subi	r20, 0xE9	; 233
    22ea:	5f 4f       	sbci	r21, 0xFF	; 255
    22ec:	6d 89       	ldd	r22, Y+21	; 0x15
    22ee:	7e 89       	ldd	r23, Y+22	; 0x16
    22f0:	ce 01       	movw	r24, r28
    22f2:	01 96       	adiw	r24, 0x01	; 1
    22f4:	0e 94 1c 13 	call	0x2638	; 0x2638 <vfscanf>
    22f8:	2e 96       	adiw	r28, 0x0e	; 14
    22fa:	e2 e0       	ldi	r30, 0x02	; 2
    22fc:	0c 94 f0 14 	jmp	0x29e0	; 0x29e0 <__epilogue_restores__+0x20>

00002300 <putval>:
    2300:	20 fd       	sbrc	r18, 0
    2302:	09 c0       	rjmp	.+18     	; 0x2316 <putval+0x16>
    2304:	fc 01       	movw	r30, r24
    2306:	23 fd       	sbrc	r18, 3
    2308:	05 c0       	rjmp	.+10     	; 0x2314 <putval+0x14>
    230a:	22 ff       	sbrs	r18, 2
    230c:	02 c0       	rjmp	.+4      	; 0x2312 <putval+0x12>
    230e:	73 83       	std	Z+3, r23	; 0x03
    2310:	62 83       	std	Z+2, r22	; 0x02
    2312:	51 83       	std	Z+1, r21	; 0x01
    2314:	40 83       	st	Z, r20
    2316:	08 95       	ret

00002318 <mulacc>:
    2318:	44 fd       	sbrc	r20, 4
    231a:	17 c0       	rjmp	.+46     	; 0x234a <mulacc+0x32>
    231c:	46 fd       	sbrc	r20, 6
    231e:	17 c0       	rjmp	.+46     	; 0x234e <mulacc+0x36>
    2320:	ab 01       	movw	r20, r22
    2322:	bc 01       	movw	r22, r24
    2324:	da 01       	movw	r26, r20
    2326:	fb 01       	movw	r30, r22
    2328:	aa 0f       	add	r26, r26
    232a:	bb 1f       	adc	r27, r27
    232c:	ee 1f       	adc	r30, r30
    232e:	ff 1f       	adc	r31, r31
    2330:	10 94       	com	r1
    2332:	d1 f7       	brne	.-12     	; 0x2328 <mulacc+0x10>
    2334:	4a 0f       	add	r20, r26
    2336:	5b 1f       	adc	r21, r27
    2338:	6e 1f       	adc	r22, r30
    233a:	7f 1f       	adc	r23, r31
    233c:	cb 01       	movw	r24, r22
    233e:	ba 01       	movw	r22, r20
    2340:	66 0f       	add	r22, r22
    2342:	77 1f       	adc	r23, r23
    2344:	88 1f       	adc	r24, r24
    2346:	99 1f       	adc	r25, r25
    2348:	09 c0       	rjmp	.+18     	; 0x235c <mulacc+0x44>
    234a:	33 e0       	ldi	r19, 0x03	; 3
    234c:	01 c0       	rjmp	.+2      	; 0x2350 <mulacc+0x38>
    234e:	34 e0       	ldi	r19, 0x04	; 4
    2350:	66 0f       	add	r22, r22
    2352:	77 1f       	adc	r23, r23
    2354:	88 1f       	adc	r24, r24
    2356:	99 1f       	adc	r25, r25
    2358:	31 50       	subi	r19, 0x01	; 1
    235a:	d1 f7       	brne	.-12     	; 0x2350 <mulacc+0x38>
    235c:	62 0f       	add	r22, r18
    235e:	71 1d       	adc	r23, r1
    2360:	81 1d       	adc	r24, r1
    2362:	91 1d       	adc	r25, r1
    2364:	08 95       	ret

00002366 <skip_spaces>:
    2366:	0f 93       	push	r16
    2368:	1f 93       	push	r17
    236a:	cf 93       	push	r28
    236c:	df 93       	push	r29
    236e:	8c 01       	movw	r16, r24
    2370:	c8 01       	movw	r24, r16
    2372:	0e 94 41 14 	call	0x2882	; 0x2882 <fgetc>
    2376:	ec 01       	movw	r28, r24
    2378:	97 fd       	sbrc	r25, 7
    237a:	08 c0       	rjmp	.+16     	; 0x238c <skip_spaces+0x26>
    237c:	0e 94 2d 14 	call	0x285a	; 0x285a <isspace>
    2380:	89 2b       	or	r24, r25
    2382:	b1 f7       	brne	.-20     	; 0x2370 <skip_spaces+0xa>
    2384:	b8 01       	movw	r22, r16
    2386:	ce 01       	movw	r24, r28
    2388:	0e 94 7f 14 	call	0x28fe	; 0x28fe <ungetc>
    238c:	ce 01       	movw	r24, r28
    238e:	df 91       	pop	r29
    2390:	cf 91       	pop	r28
    2392:	1f 91       	pop	r17
    2394:	0f 91       	pop	r16
    2396:	08 95       	ret

00002398 <conv_int>:
    2398:	8f 92       	push	r8
    239a:	9f 92       	push	r9
    239c:	af 92       	push	r10
    239e:	bf 92       	push	r11
    23a0:	ef 92       	push	r14
    23a2:	ff 92       	push	r15
    23a4:	0f 93       	push	r16
    23a6:	1f 93       	push	r17
    23a8:	cf 93       	push	r28
    23aa:	df 93       	push	r29
    23ac:	8c 01       	movw	r16, r24
    23ae:	d6 2f       	mov	r29, r22
    23b0:	7a 01       	movw	r14, r20
    23b2:	b2 2e       	mov	r11, r18
    23b4:	0e 94 41 14 	call	0x2882	; 0x2882 <fgetc>
    23b8:	9c 01       	movw	r18, r24
    23ba:	33 27       	eor	r19, r19
    23bc:	2b 32       	cpi	r18, 0x2B	; 43
    23be:	31 05       	cpc	r19, r1
    23c0:	31 f0       	breq	.+12     	; 0x23ce <conv_int+0x36>
    23c2:	2d 32       	cpi	r18, 0x2D	; 45
    23c4:	31 05       	cpc	r19, r1
    23c6:	61 f4       	brne	.+24     	; 0x23e0 <conv_int+0x48>
    23c8:	8b 2d       	mov	r24, r11
    23ca:	80 68       	ori	r24, 0x80	; 128
    23cc:	b8 2e       	mov	r11, r24
    23ce:	d1 50       	subi	r29, 0x01	; 1
    23d0:	11 f4       	brne	.+4      	; 0x23d6 <conv_int+0x3e>
    23d2:	80 e0       	ldi	r24, 0x00	; 0
    23d4:	68 c0       	rjmp	.+208    	; 0x24a6 <conv_int+0x10e>
    23d6:	c8 01       	movw	r24, r16
    23d8:	0e 94 41 14 	call	0x2882	; 0x2882 <fgetc>
    23dc:	97 fd       	sbrc	r25, 7
    23de:	f9 cf       	rjmp	.-14     	; 0x23d2 <conv_int+0x3a>
    23e0:	cb 2d       	mov	r28, r11
    23e2:	cd 7f       	andi	r28, 0xFD	; 253
    23e4:	2b 2d       	mov	r18, r11
    23e6:	20 73       	andi	r18, 0x30	; 48
    23e8:	09 f5       	brne	.+66     	; 0x242c <conv_int+0x94>
    23ea:	80 33       	cpi	r24, 0x30	; 48
    23ec:	f9 f4       	brne	.+62     	; 0x242c <conv_int+0x94>
    23ee:	aa 24       	eor	r10, r10
    23f0:	aa 94       	dec	r10
    23f2:	ad 0e       	add	r10, r29
    23f4:	09 f4       	brne	.+2      	; 0x23f8 <conv_int+0x60>
    23f6:	43 c0       	rjmp	.+134    	; 0x247e <conv_int+0xe6>
    23f8:	c8 01       	movw	r24, r16
    23fa:	0e 94 41 14 	call	0x2882	; 0x2882 <fgetc>
    23fe:	97 fd       	sbrc	r25, 7
    2400:	3e c0       	rjmp	.+124    	; 0x247e <conv_int+0xe6>
    2402:	9c 01       	movw	r18, r24
    2404:	2f 7d       	andi	r18, 0xDF	; 223
    2406:	33 27       	eor	r19, r19
    2408:	28 35       	cpi	r18, 0x58	; 88
    240a:	31 05       	cpc	r19, r1
    240c:	49 f4       	brne	.+18     	; 0x2420 <conv_int+0x88>
    240e:	c2 64       	ori	r28, 0x42	; 66
    2410:	d2 50       	subi	r29, 0x02	; 2
    2412:	a9 f1       	breq	.+106    	; 0x247e <conv_int+0xe6>
    2414:	c8 01       	movw	r24, r16
    2416:	0e 94 41 14 	call	0x2882	; 0x2882 <fgetc>
    241a:	97 ff       	sbrs	r25, 7
    241c:	07 c0       	rjmp	.+14     	; 0x242c <conv_int+0x94>
    241e:	2f c0       	rjmp	.+94     	; 0x247e <conv_int+0xe6>
    2420:	b6 fe       	sbrs	r11, 6
    2422:	02 c0       	rjmp	.+4      	; 0x2428 <conv_int+0x90>
    2424:	c2 60       	ori	r28, 0x02	; 2
    2426:	01 c0       	rjmp	.+2      	; 0x242a <conv_int+0x92>
    2428:	c2 61       	ori	r28, 0x12	; 18
    242a:	da 2d       	mov	r29, r10
    242c:	81 2c       	mov	r8, r1
    242e:	91 2c       	mov	r9, r1
    2430:	54 01       	movw	r10, r8
    2432:	20 ed       	ldi	r18, 0xD0	; 208
    2434:	28 0f       	add	r18, r24
    2436:	28 30       	cpi	r18, 0x08	; 8
    2438:	80 f0       	brcs	.+32     	; 0x245a <conv_int+0xc2>
    243a:	c4 ff       	sbrs	r28, 4
    243c:	04 c0       	rjmp	.+8      	; 0x2446 <conv_int+0xae>
    243e:	b8 01       	movw	r22, r16
    2440:	0e 94 7f 14 	call	0x28fe	; 0x28fe <ungetc>
    2444:	19 c0       	rjmp	.+50     	; 0x2478 <conv_int+0xe0>
    2446:	2a 30       	cpi	r18, 0x0A	; 10
    2448:	40 f0       	brcs	.+16     	; 0x245a <conv_int+0xc2>
    244a:	c6 ff       	sbrs	r28, 6
    244c:	f8 cf       	rjmp	.-16     	; 0x243e <conv_int+0xa6>
    244e:	2f 7d       	andi	r18, 0xDF	; 223
    2450:	3f ee       	ldi	r19, 0xEF	; 239
    2452:	32 0f       	add	r19, r18
    2454:	36 30       	cpi	r19, 0x06	; 6
    2456:	98 f7       	brcc	.-26     	; 0x243e <conv_int+0xa6>
    2458:	27 50       	subi	r18, 0x07	; 7
    245a:	4c 2f       	mov	r20, r28
    245c:	c5 01       	movw	r24, r10
    245e:	b4 01       	movw	r22, r8
    2460:	0e 94 8c 11 	call	0x2318	; 0x2318 <mulacc>
    2464:	4b 01       	movw	r8, r22
    2466:	5c 01       	movw	r10, r24
    2468:	c2 60       	ori	r28, 0x02	; 2
    246a:	d1 50       	subi	r29, 0x01	; 1
    246c:	59 f0       	breq	.+22     	; 0x2484 <conv_int+0xec>
    246e:	c8 01       	movw	r24, r16
    2470:	0e 94 41 14 	call	0x2882	; 0x2882 <fgetc>
    2474:	97 ff       	sbrs	r25, 7
    2476:	dd cf       	rjmp	.-70     	; 0x2432 <conv_int+0x9a>
    2478:	c1 fd       	sbrc	r28, 1
    247a:	04 c0       	rjmp	.+8      	; 0x2484 <conv_int+0xec>
    247c:	aa cf       	rjmp	.-172    	; 0x23d2 <conv_int+0x3a>
    247e:	81 2c       	mov	r8, r1
    2480:	91 2c       	mov	r9, r1
    2482:	54 01       	movw	r10, r8
    2484:	c7 ff       	sbrs	r28, 7
    2486:	08 c0       	rjmp	.+16     	; 0x2498 <conv_int+0x100>
    2488:	b0 94       	com	r11
    248a:	a0 94       	com	r10
    248c:	90 94       	com	r9
    248e:	80 94       	com	r8
    2490:	81 1c       	adc	r8, r1
    2492:	91 1c       	adc	r9, r1
    2494:	a1 1c       	adc	r10, r1
    2496:	b1 1c       	adc	r11, r1
    2498:	2c 2f       	mov	r18, r28
    249a:	b5 01       	movw	r22, r10
    249c:	a4 01       	movw	r20, r8
    249e:	c7 01       	movw	r24, r14
    24a0:	0e 94 80 11 	call	0x2300	; 0x2300 <putval>
    24a4:	81 e0       	ldi	r24, 0x01	; 1
    24a6:	df 91       	pop	r29
    24a8:	cf 91       	pop	r28
    24aa:	1f 91       	pop	r17
    24ac:	0f 91       	pop	r16
    24ae:	ff 90       	pop	r15
    24b0:	ef 90       	pop	r14
    24b2:	bf 90       	pop	r11
    24b4:	af 90       	pop	r10
    24b6:	9f 90       	pop	r9
    24b8:	8f 90       	pop	r8
    24ba:	08 95       	ret

000024bc <conv_brk>:
    24bc:	a0 e2       	ldi	r26, 0x20	; 32
    24be:	b0 e0       	ldi	r27, 0x00	; 0
    24c0:	e4 e6       	ldi	r30, 0x64	; 100
    24c2:	f2 e1       	ldi	r31, 0x12	; 18
    24c4:	0c 94 c7 14 	jmp	0x298e	; 0x298e <__prologue_saves__+0x6>
    24c8:	5c 01       	movw	r10, r24
    24ca:	96 2e       	mov	r9, r22
    24cc:	7a 01       	movw	r14, r20
    24ce:	f9 01       	movw	r30, r18
    24d0:	8e 01       	movw	r16, r28
    24d2:	0f 5f       	subi	r16, 0xFF	; 255
    24d4:	1f 4f       	sbci	r17, 0xFF	; 255
    24d6:	68 01       	movw	r12, r16
    24d8:	80 e2       	ldi	r24, 0x20	; 32
    24da:	d8 01       	movw	r26, r16
    24dc:	1d 92       	st	X+, r1
    24de:	8a 95       	dec	r24
    24e0:	e9 f7       	brne	.-6      	; 0x24dc <conv_brk+0x20>
    24e2:	d5 01       	movw	r26, r10
    24e4:	13 96       	adiw	r26, 0x03	; 3
    24e6:	8c 90       	ld	r8, X
    24e8:	80 e0       	ldi	r24, 0x00	; 0
    24ea:	90 e0       	ldi	r25, 0x00	; 0
    24ec:	61 2c       	mov	r6, r1
    24ee:	71 2c       	mov	r7, r1
    24f0:	30 e0       	ldi	r19, 0x00	; 0
    24f2:	61 e0       	ldi	r22, 0x01	; 1
    24f4:	70 e0       	ldi	r23, 0x00	; 0
    24f6:	83 fc       	sbrc	r8, 3
    24f8:	25 91       	lpm	r18, Z+
    24fa:	83 fe       	sbrs	r8, 3
    24fc:	21 91       	ld	r18, Z+
    24fe:	8f 01       	movw	r16, r30
    2500:	52 2e       	mov	r5, r18
    2502:	21 11       	cpse	r18, r1
    2504:	03 c0       	rjmp	.+6      	; 0x250c <conv_brk+0x50>
    2506:	80 e0       	ldi	r24, 0x00	; 0
    2508:	90 e0       	ldi	r25, 0x00	; 0
    250a:	92 c0       	rjmp	.+292    	; 0x2630 <conv_brk+0x174>
    250c:	2e 35       	cpi	r18, 0x5E	; 94
    250e:	11 f4       	brne	.+4      	; 0x2514 <conv_brk+0x58>
    2510:	00 97       	sbiw	r24, 0x00	; 0
    2512:	51 f1       	breq	.+84     	; 0x2568 <conv_brk+0xac>
    2514:	43 2f       	mov	r20, r19
    2516:	50 e0       	ldi	r21, 0x00	; 0
    2518:	48 17       	cp	r20, r24
    251a:	59 07       	cpc	r21, r25
    251c:	3c f4       	brge	.+14     	; 0x252c <conv_brk+0x70>
    251e:	2d 35       	cpi	r18, 0x5D	; 93
    2520:	59 f1       	breq	.+86     	; 0x2578 <conv_brk+0xbc>
    2522:	2d 32       	cpi	r18, 0x2D	; 45
    2524:	19 f4       	brne	.+6      	; 0x252c <conv_brk+0x70>
    2526:	77 20       	and	r7, r7
    2528:	09 f1       	breq	.+66     	; 0x256c <conv_brk+0xb0>
    252a:	03 c0       	rjmp	.+6      	; 0x2532 <conv_brk+0x76>
    252c:	77 20       	and	r7, r7
    252e:	09 f4       	brne	.+2      	; 0x2532 <conv_brk+0x76>
    2530:	6a c0       	rjmp	.+212    	; 0x2606 <conv_brk+0x14a>
    2532:	45 2d       	mov	r20, r5
    2534:	46 95       	lsr	r20
    2536:	46 95       	lsr	r20
    2538:	46 95       	lsr	r20
    253a:	d6 01       	movw	r26, r12
    253c:	a4 0f       	add	r26, r20
    253e:	b1 1d       	adc	r27, r1
    2540:	45 2d       	mov	r20, r5
    2542:	47 70       	andi	r20, 0x07	; 7
    2544:	8b 01       	movw	r16, r22
    2546:	02 c0       	rjmp	.+4      	; 0x254c <conv_brk+0x90>
    2548:	00 0f       	add	r16, r16
    254a:	11 1f       	adc	r17, r17
    254c:	4a 95       	dec	r20
    254e:	e2 f7       	brpl	.-8      	; 0x2548 <conv_brk+0x8c>
    2550:	a8 01       	movw	r20, r16
    2552:	5c 91       	ld	r21, X
    2554:	45 2b       	or	r20, r21
    2556:	4c 93       	st	X, r20
    2558:	65 14       	cp	r6, r5
    255a:	59 f0       	breq	.+22     	; 0x2572 <conv_brk+0xb6>
    255c:	56 14       	cp	r5, r6
    255e:	10 f4       	brcc	.+4      	; 0x2564 <conv_brk+0xa8>
    2560:	53 94       	inc	r5
    2562:	e7 cf       	rjmp	.-50     	; 0x2532 <conv_brk+0x76>
    2564:	5a 94       	dec	r5
    2566:	e5 cf       	rjmp	.-54     	; 0x2532 <conv_brk+0x76>
    2568:	31 e0       	ldi	r19, 0x01	; 1
    256a:	04 c0       	rjmp	.+8      	; 0x2574 <conv_brk+0xb8>
    256c:	77 24       	eor	r7, r7
    256e:	73 94       	inc	r7
    2570:	01 c0       	rjmp	.+2      	; 0x2574 <conv_brk+0xb8>
    2572:	71 2c       	mov	r7, r1
    2574:	01 96       	adiw	r24, 0x01	; 1
    2576:	bf cf       	rjmp	.-130    	; 0x24f6 <conv_brk+0x3a>
    2578:	77 20       	and	r7, r7
    257a:	19 f0       	breq	.+6      	; 0x2582 <conv_brk+0xc6>
    257c:	8e 81       	ldd	r24, Y+6	; 0x06
    257e:	80 62       	ori	r24, 0x20	; 32
    2580:	8e 83       	std	Y+6, r24	; 0x06
    2582:	31 11       	cpse	r19, r1
    2584:	03 c0       	rjmp	.+6      	; 0x258c <conv_brk+0xd0>
    2586:	88 24       	eor	r8, r8
    2588:	83 94       	inc	r8
    258a:	17 c0       	rjmp	.+46     	; 0x25ba <conv_brk+0xfe>
    258c:	f6 01       	movw	r30, r12
    258e:	9e 01       	movw	r18, r28
    2590:	2f 5d       	subi	r18, 0xDF	; 223
    2592:	3f 4f       	sbci	r19, 0xFF	; 255
    2594:	80 81       	ld	r24, Z
    2596:	80 95       	com	r24
    2598:	81 93       	st	Z+, r24
    259a:	2e 17       	cp	r18, r30
    259c:	3f 07       	cpc	r19, r31
    259e:	d1 f7       	brne	.-12     	; 0x2594 <conv_brk+0xd8>
    25a0:	f2 cf       	rjmp	.-28     	; 0x2586 <conv_brk+0xca>
    25a2:	e1 14       	cp	r14, r1
    25a4:	f1 04       	cpc	r15, r1
    25a6:	29 f0       	breq	.+10     	; 0x25b2 <conv_brk+0xf6>
    25a8:	d7 01       	movw	r26, r14
    25aa:	8c 93       	st	X, r24
    25ac:	f7 01       	movw	r30, r14
    25ae:	31 96       	adiw	r30, 0x01	; 1
    25b0:	7f 01       	movw	r14, r30
    25b2:	9a 94       	dec	r9
    25b4:	81 2c       	mov	r8, r1
    25b6:	99 20       	and	r9, r9
    25b8:	f9 f0       	breq	.+62     	; 0x25f8 <conv_brk+0x13c>
    25ba:	c5 01       	movw	r24, r10
    25bc:	0e 94 41 14 	call	0x2882	; 0x2882 <fgetc>
    25c0:	97 fd       	sbrc	r25, 7
    25c2:	18 c0       	rjmp	.+48     	; 0x25f4 <conv_brk+0x138>
    25c4:	fc 01       	movw	r30, r24
    25c6:	ff 27       	eor	r31, r31
    25c8:	23 e0       	ldi	r18, 0x03	; 3
    25ca:	f5 95       	asr	r31
    25cc:	e7 95       	ror	r30
    25ce:	2a 95       	dec	r18
    25d0:	e1 f7       	brne	.-8      	; 0x25ca <conv_brk+0x10e>
    25d2:	ec 0d       	add	r30, r12
    25d4:	fd 1d       	adc	r31, r13
    25d6:	20 81       	ld	r18, Z
    25d8:	30 e0       	ldi	r19, 0x00	; 0
    25da:	ac 01       	movw	r20, r24
    25dc:	47 70       	andi	r20, 0x07	; 7
    25de:	55 27       	eor	r21, r21
    25e0:	02 c0       	rjmp	.+4      	; 0x25e6 <conv_brk+0x12a>
    25e2:	35 95       	asr	r19
    25e4:	27 95       	ror	r18
    25e6:	4a 95       	dec	r20
    25e8:	e2 f7       	brpl	.-8      	; 0x25e2 <conv_brk+0x126>
    25ea:	20 fd       	sbrc	r18, 0
    25ec:	da cf       	rjmp	.-76     	; 0x25a2 <conv_brk+0xe6>
    25ee:	b5 01       	movw	r22, r10
    25f0:	0e 94 7f 14 	call	0x28fe	; 0x28fe <ungetc>
    25f4:	81 10       	cpse	r8, r1
    25f6:	87 cf       	rjmp	.-242    	; 0x2506 <conv_brk+0x4a>
    25f8:	e1 14       	cp	r14, r1
    25fa:	f1 04       	cpc	r15, r1
    25fc:	11 f0       	breq	.+4      	; 0x2602 <conv_brk+0x146>
    25fe:	d7 01       	movw	r26, r14
    2600:	1c 92       	st	X, r1
    2602:	c8 01       	movw	r24, r16
    2604:	15 c0       	rjmp	.+42     	; 0x2630 <conv_brk+0x174>
    2606:	42 2f       	mov	r20, r18
    2608:	46 95       	lsr	r20
    260a:	46 95       	lsr	r20
    260c:	46 95       	lsr	r20
    260e:	d6 01       	movw	r26, r12
    2610:	a4 0f       	add	r26, r20
    2612:	b1 1d       	adc	r27, r1
    2614:	42 2f       	mov	r20, r18
    2616:	47 70       	andi	r20, 0x07	; 7
    2618:	8b 01       	movw	r16, r22
    261a:	02 c0       	rjmp	.+4      	; 0x2620 <conv_brk+0x164>
    261c:	00 0f       	add	r16, r16
    261e:	11 1f       	adc	r17, r17
    2620:	4a 95       	dec	r20
    2622:	e2 f7       	brpl	.-8      	; 0x261c <conv_brk+0x160>
    2624:	a8 01       	movw	r20, r16
    2626:	5c 91       	ld	r21, X
    2628:	45 2b       	or	r20, r21
    262a:	4c 93       	st	X, r20
    262c:	62 2e       	mov	r6, r18
    262e:	a2 cf       	rjmp	.-188    	; 0x2574 <conv_brk+0xb8>
    2630:	a0 96       	adiw	r28, 0x20	; 32
    2632:	ef e0       	ldi	r30, 0x0F	; 15
    2634:	0c 94 e3 14 	jmp	0x29c6	; 0x29c6 <__epilogue_restores__+0x6>

00002638 <vfscanf>:
    2638:	a0 e0       	ldi	r26, 0x00	; 0
    263a:	b0 e0       	ldi	r27, 0x00	; 0
    263c:	e2 e2       	ldi	r30, 0x22	; 34
    263e:	f3 e1       	ldi	r31, 0x13	; 19
    2640:	0c 94 c7 14 	jmp	0x298e	; 0x298e <__prologue_saves__+0x6>
    2644:	6c 01       	movw	r12, r24
    2646:	eb 01       	movw	r28, r22
    2648:	5a 01       	movw	r10, r20
    264a:	fc 01       	movw	r30, r24
    264c:	17 82       	std	Z+7, r1	; 0x07
    264e:	16 82       	std	Z+6, r1	; 0x06
    2650:	51 2c       	mov	r5, r1
    2652:	f6 01       	movw	r30, r12
    2654:	e3 80       	ldd	r14, Z+3	; 0x03
    2656:	fe 01       	movw	r30, r28
    2658:	e3 fc       	sbrc	r14, 3
    265a:	85 91       	lpm	r24, Z+
    265c:	e3 fe       	sbrs	r14, 3
    265e:	81 91       	ld	r24, Z+
    2660:	18 2f       	mov	r17, r24
    2662:	ef 01       	movw	r28, r30
    2664:	88 23       	and	r24, r24
    2666:	09 f4       	brne	.+2      	; 0x266a <vfscanf+0x32>
    2668:	ee c0       	rjmp	.+476    	; 0x2846 <vfscanf+0x20e>
    266a:	90 e0       	ldi	r25, 0x00	; 0
    266c:	0e 94 2d 14 	call	0x285a	; 0x285a <isspace>
    2670:	89 2b       	or	r24, r25
    2672:	21 f0       	breq	.+8      	; 0x267c <vfscanf+0x44>
    2674:	c6 01       	movw	r24, r12
    2676:	0e 94 b3 11 	call	0x2366	; 0x2366 <skip_spaces>
    267a:	eb cf       	rjmp	.-42     	; 0x2652 <vfscanf+0x1a>
    267c:	15 32       	cpi	r17, 0x25	; 37
    267e:	41 f4       	brne	.+16     	; 0x2690 <vfscanf+0x58>
    2680:	fe 01       	movw	r30, r28
    2682:	e3 fc       	sbrc	r14, 3
    2684:	15 91       	lpm	r17, Z+
    2686:	e3 fe       	sbrs	r14, 3
    2688:	11 91       	ld	r17, Z+
    268a:	ef 01       	movw	r28, r30
    268c:	15 32       	cpi	r17, 0x25	; 37
    268e:	81 f4       	brne	.+32     	; 0x26b0 <vfscanf+0x78>
    2690:	c6 01       	movw	r24, r12
    2692:	0e 94 41 14 	call	0x2882	; 0x2882 <fgetc>
    2696:	97 fd       	sbrc	r25, 7
    2698:	d4 c0       	rjmp	.+424    	; 0x2842 <vfscanf+0x20a>
    269a:	41 2f       	mov	r20, r17
    269c:	50 e0       	ldi	r21, 0x00	; 0
    269e:	9c 01       	movw	r18, r24
    26a0:	33 27       	eor	r19, r19
    26a2:	24 17       	cp	r18, r20
    26a4:	35 07       	cpc	r19, r21
    26a6:	a9 f2       	breq	.-86     	; 0x2652 <vfscanf+0x1a>
    26a8:	b6 01       	movw	r22, r12
    26aa:	0e 94 7f 14 	call	0x28fe	; 0x28fe <ungetc>
    26ae:	cb c0       	rjmp	.+406    	; 0x2846 <vfscanf+0x20e>
    26b0:	1a 32       	cpi	r17, 0x2A	; 42
    26b2:	39 f4       	brne	.+14     	; 0x26c2 <vfscanf+0x8a>
    26b4:	e3 fc       	sbrc	r14, 3
    26b6:	15 91       	lpm	r17, Z+
    26b8:	e3 fe       	sbrs	r14, 3
    26ba:	11 91       	ld	r17, Z+
    26bc:	ef 01       	movw	r28, r30
    26be:	01 e0       	ldi	r16, 0x01	; 1
    26c0:	01 c0       	rjmp	.+2      	; 0x26c4 <vfscanf+0x8c>
    26c2:	00 e0       	ldi	r16, 0x00	; 0
    26c4:	f1 2c       	mov	r15, r1
    26c6:	20 ed       	ldi	r18, 0xD0	; 208
    26c8:	21 0f       	add	r18, r17
    26ca:	2a 30       	cpi	r18, 0x0A	; 10
    26cc:	80 f4       	brcc	.+32     	; 0x26ee <vfscanf+0xb6>
    26ce:	02 60       	ori	r16, 0x02	; 2
    26d0:	6f 2d       	mov	r22, r15
    26d2:	70 e0       	ldi	r23, 0x00	; 0
    26d4:	80 e0       	ldi	r24, 0x00	; 0
    26d6:	90 e0       	ldi	r25, 0x00	; 0
    26d8:	40 e2       	ldi	r20, 0x20	; 32
    26da:	0e 94 8c 11 	call	0x2318	; 0x2318 <mulacc>
    26de:	f6 2e       	mov	r15, r22
    26e0:	fe 01       	movw	r30, r28
    26e2:	e3 fc       	sbrc	r14, 3
    26e4:	15 91       	lpm	r17, Z+
    26e6:	e3 fe       	sbrs	r14, 3
    26e8:	11 91       	ld	r17, Z+
    26ea:	ef 01       	movw	r28, r30
    26ec:	ec cf       	rjmp	.-40     	; 0x26c6 <vfscanf+0x8e>
    26ee:	01 ff       	sbrs	r16, 1
    26f0:	03 c0       	rjmp	.+6      	; 0x26f8 <vfscanf+0xc0>
    26f2:	f1 10       	cpse	r15, r1
    26f4:	03 c0       	rjmp	.+6      	; 0x26fc <vfscanf+0xc4>
    26f6:	a7 c0       	rjmp	.+334    	; 0x2846 <vfscanf+0x20e>
    26f8:	ff 24       	eor	r15, r15
    26fa:	fa 94       	dec	r15
    26fc:	18 36       	cpi	r17, 0x68	; 104
    26fe:	19 f0       	breq	.+6      	; 0x2706 <vfscanf+0xce>
    2700:	1c 36       	cpi	r17, 0x6C	; 108
    2702:	51 f0       	breq	.+20     	; 0x2718 <vfscanf+0xe0>
    2704:	10 c0       	rjmp	.+32     	; 0x2726 <vfscanf+0xee>
    2706:	fe 01       	movw	r30, r28
    2708:	e3 fc       	sbrc	r14, 3
    270a:	15 91       	lpm	r17, Z+
    270c:	e3 fe       	sbrs	r14, 3
    270e:	11 91       	ld	r17, Z+
    2710:	ef 01       	movw	r28, r30
    2712:	18 36       	cpi	r17, 0x68	; 104
    2714:	41 f4       	brne	.+16     	; 0x2726 <vfscanf+0xee>
    2716:	08 60       	ori	r16, 0x08	; 8
    2718:	04 60       	ori	r16, 0x04	; 4
    271a:	fe 01       	movw	r30, r28
    271c:	e3 fc       	sbrc	r14, 3
    271e:	15 91       	lpm	r17, Z+
    2720:	e3 fe       	sbrs	r14, 3
    2722:	11 91       	ld	r17, Z+
    2724:	ef 01       	movw	r28, r30
    2726:	11 23       	and	r17, r17
    2728:	09 f4       	brne	.+2      	; 0x272c <vfscanf+0xf4>
    272a:	8d c0       	rjmp	.+282    	; 0x2846 <vfscanf+0x20e>
    272c:	61 2f       	mov	r22, r17
    272e:	70 e0       	ldi	r23, 0x00	; 0
    2730:	86 eb       	ldi	r24, 0xB6	; 182
    2732:	91 e0       	ldi	r25, 0x01	; 1
    2734:	0e 94 36 14 	call	0x286c	; 0x286c <strchr_P>
    2738:	89 2b       	or	r24, r25
    273a:	09 f4       	brne	.+2      	; 0x273e <vfscanf+0x106>
    273c:	84 c0       	rjmp	.+264    	; 0x2846 <vfscanf+0x20e>
    273e:	00 fd       	sbrc	r16, 0
    2740:	07 c0       	rjmp	.+14     	; 0x2750 <vfscanf+0x118>
    2742:	f5 01       	movw	r30, r10
    2744:	80 80       	ld	r8, Z
    2746:	91 80       	ldd	r9, Z+1	; 0x01
    2748:	c5 01       	movw	r24, r10
    274a:	02 96       	adiw	r24, 0x02	; 2
    274c:	5c 01       	movw	r10, r24
    274e:	02 c0       	rjmp	.+4      	; 0x2754 <vfscanf+0x11c>
    2750:	81 2c       	mov	r8, r1
    2752:	91 2c       	mov	r9, r1
    2754:	1e 36       	cpi	r17, 0x6E	; 110
    2756:	51 f4       	brne	.+20     	; 0x276c <vfscanf+0x134>
    2758:	f6 01       	movw	r30, r12
    275a:	46 81       	ldd	r20, Z+6	; 0x06
    275c:	57 81       	ldd	r21, Z+7	; 0x07
    275e:	60 e0       	ldi	r22, 0x00	; 0
    2760:	70 e0       	ldi	r23, 0x00	; 0
    2762:	20 2f       	mov	r18, r16
    2764:	c4 01       	movw	r24, r8
    2766:	0e 94 80 11 	call	0x2300	; 0x2300 <putval>
    276a:	73 cf       	rjmp	.-282    	; 0x2652 <vfscanf+0x1a>
    276c:	13 36       	cpi	r17, 0x63	; 99
    276e:	a9 f4       	brne	.+42     	; 0x279a <vfscanf+0x162>
    2770:	01 fd       	sbrc	r16, 1
    2772:	02 c0       	rjmp	.+4      	; 0x2778 <vfscanf+0x140>
    2774:	ff 24       	eor	r15, r15
    2776:	f3 94       	inc	r15
    2778:	c6 01       	movw	r24, r12
    277a:	0e 94 41 14 	call	0x2882	; 0x2882 <fgetc>
    277e:	97 fd       	sbrc	r25, 7
    2780:	60 c0       	rjmp	.+192    	; 0x2842 <vfscanf+0x20a>
    2782:	81 14       	cp	r8, r1
    2784:	91 04       	cpc	r9, r1
    2786:	29 f0       	breq	.+10     	; 0x2792 <vfscanf+0x15a>
    2788:	f4 01       	movw	r30, r8
    278a:	80 83       	st	Z, r24
    278c:	c4 01       	movw	r24, r8
    278e:	01 96       	adiw	r24, 0x01	; 1
    2790:	4c 01       	movw	r8, r24
    2792:	fa 94       	dec	r15
    2794:	f1 10       	cpse	r15, r1
    2796:	f0 cf       	rjmp	.-32     	; 0x2778 <vfscanf+0x140>
    2798:	50 c0       	rjmp	.+160    	; 0x283a <vfscanf+0x202>
    279a:	1b 35       	cpi	r17, 0x5B	; 91
    279c:	59 f4       	brne	.+22     	; 0x27b4 <vfscanf+0x17c>
    279e:	9e 01       	movw	r18, r28
    27a0:	a4 01       	movw	r20, r8
    27a2:	6f 2d       	mov	r22, r15
    27a4:	c6 01       	movw	r24, r12
    27a6:	0e 94 5e 12 	call	0x24bc	; 0x24bc <conv_brk>
    27aa:	ec 01       	movw	r28, r24
    27ac:	89 2b       	or	r24, r25
    27ae:	09 f0       	breq	.+2      	; 0x27b2 <vfscanf+0x17a>
    27b0:	44 c0       	rjmp	.+136    	; 0x283a <vfscanf+0x202>
    27b2:	3e c0       	rjmp	.+124    	; 0x2830 <vfscanf+0x1f8>
    27b4:	c6 01       	movw	r24, r12
    27b6:	0e 94 b3 11 	call	0x2366	; 0x2366 <skip_spaces>
    27ba:	97 fd       	sbrc	r25, 7
    27bc:	42 c0       	rjmp	.+132    	; 0x2842 <vfscanf+0x20a>
    27be:	1f 36       	cpi	r17, 0x6F	; 111
    27c0:	61 f1       	breq	.+88     	; 0x281a <vfscanf+0x1e2>
    27c2:	28 f4       	brcc	.+10     	; 0x27ce <vfscanf+0x196>
    27c4:	14 36       	cpi	r17, 0x64	; 100
    27c6:	39 f1       	breq	.+78     	; 0x2816 <vfscanf+0x1de>
    27c8:	19 36       	cpi	r17, 0x69	; 105
    27ca:	51 f1       	breq	.+84     	; 0x2820 <vfscanf+0x1e8>
    27cc:	28 c0       	rjmp	.+80     	; 0x281e <vfscanf+0x1e6>
    27ce:	13 37       	cpi	r17, 0x73	; 115
    27d0:	71 f0       	breq	.+28     	; 0x27ee <vfscanf+0x1b6>
    27d2:	15 37       	cpi	r17, 0x75	; 117
    27d4:	01 f1       	breq	.+64     	; 0x2816 <vfscanf+0x1de>
    27d6:	23 c0       	rjmp	.+70     	; 0x281e <vfscanf+0x1e6>
    27d8:	81 14       	cp	r8, r1
    27da:	91 04       	cpc	r9, r1
    27dc:	29 f0       	breq	.+10     	; 0x27e8 <vfscanf+0x1b0>
    27de:	f4 01       	movw	r30, r8
    27e0:	60 82       	st	Z, r6
    27e2:	c4 01       	movw	r24, r8
    27e4:	01 96       	adiw	r24, 0x01	; 1
    27e6:	4c 01       	movw	r8, r24
    27e8:	fa 94       	dec	r15
    27ea:	ff 20       	and	r15, r15
    27ec:	71 f0       	breq	.+28     	; 0x280a <vfscanf+0x1d2>
    27ee:	c6 01       	movw	r24, r12
    27f0:	0e 94 41 14 	call	0x2882	; 0x2882 <fgetc>
    27f4:	3c 01       	movw	r6, r24
    27f6:	97 fd       	sbrc	r25, 7
    27f8:	08 c0       	rjmp	.+16     	; 0x280a <vfscanf+0x1d2>
    27fa:	0e 94 2d 14 	call	0x285a	; 0x285a <isspace>
    27fe:	89 2b       	or	r24, r25
    2800:	59 f3       	breq	.-42     	; 0x27d8 <vfscanf+0x1a0>
    2802:	b6 01       	movw	r22, r12
    2804:	c3 01       	movw	r24, r6
    2806:	0e 94 7f 14 	call	0x28fe	; 0x28fe <ungetc>
    280a:	81 14       	cp	r8, r1
    280c:	91 04       	cpc	r9, r1
    280e:	a9 f0       	breq	.+42     	; 0x283a <vfscanf+0x202>
    2810:	f4 01       	movw	r30, r8
    2812:	10 82       	st	Z, r1
    2814:	12 c0       	rjmp	.+36     	; 0x283a <vfscanf+0x202>
    2816:	00 62       	ori	r16, 0x20	; 32
    2818:	03 c0       	rjmp	.+6      	; 0x2820 <vfscanf+0x1e8>
    281a:	00 61       	ori	r16, 0x10	; 16
    281c:	01 c0       	rjmp	.+2      	; 0x2820 <vfscanf+0x1e8>
    281e:	00 64       	ori	r16, 0x40	; 64
    2820:	20 2f       	mov	r18, r16
    2822:	a4 01       	movw	r20, r8
    2824:	6f 2d       	mov	r22, r15
    2826:	c6 01       	movw	r24, r12
    2828:	0e 94 cc 11 	call	0x2398	; 0x2398 <conv_int>
    282c:	81 11       	cpse	r24, r1
    282e:	05 c0       	rjmp	.+10     	; 0x283a <vfscanf+0x202>
    2830:	f6 01       	movw	r30, r12
    2832:	83 81       	ldd	r24, Z+3	; 0x03
    2834:	80 73       	andi	r24, 0x30	; 48
    2836:	29 f4       	brne	.+10     	; 0x2842 <vfscanf+0x20a>
    2838:	06 c0       	rjmp	.+12     	; 0x2846 <vfscanf+0x20e>
    283a:	00 fd       	sbrc	r16, 0
    283c:	0a cf       	rjmp	.-492    	; 0x2652 <vfscanf+0x1a>
    283e:	53 94       	inc	r5
    2840:	08 cf       	rjmp	.-496    	; 0x2652 <vfscanf+0x1a>
    2842:	55 20       	and	r5, r5
    2844:	19 f0       	breq	.+6      	; 0x284c <vfscanf+0x214>
    2846:	85 2d       	mov	r24, r5
    2848:	90 e0       	ldi	r25, 0x00	; 0
    284a:	02 c0       	rjmp	.+4      	; 0x2850 <vfscanf+0x218>
    284c:	8f ef       	ldi	r24, 0xFF	; 255
    284e:	9f ef       	ldi	r25, 0xFF	; 255
    2850:	cd b7       	in	r28, 0x3d	; 61
    2852:	de b7       	in	r29, 0x3e	; 62
    2854:	ef e0       	ldi	r30, 0x0F	; 15
    2856:	0c 94 e3 14 	jmp	0x29c6	; 0x29c6 <__epilogue_restores__+0x6>

0000285a <isspace>:
    285a:	91 11       	cpse	r25, r1
    285c:	0c 94 98 14 	jmp	0x2930	; 0x2930 <__ctype_isfalse>
    2860:	80 32       	cpi	r24, 0x20	; 32
    2862:	19 f0       	breq	.+6      	; 0x286a <isspace+0x10>
    2864:	89 50       	subi	r24, 0x09	; 9
    2866:	85 50       	subi	r24, 0x05	; 5
    2868:	c8 f7       	brcc	.-14     	; 0x285c <isspace+0x2>
    286a:	08 95       	ret

0000286c <strchr_P>:
    286c:	fc 01       	movw	r30, r24
    286e:	05 90       	lpm	r0, Z+
    2870:	06 16       	cp	r0, r22
    2872:	21 f0       	breq	.+8      	; 0x287c <strchr_P+0x10>
    2874:	00 20       	and	r0, r0
    2876:	d9 f7       	brne	.-10     	; 0x286e <strchr_P+0x2>
    2878:	c0 01       	movw	r24, r0
    287a:	08 95       	ret
    287c:	31 97       	sbiw	r30, 0x01	; 1
    287e:	cf 01       	movw	r24, r30
    2880:	08 95       	ret

00002882 <fgetc>:
    2882:	cf 93       	push	r28
    2884:	df 93       	push	r29
    2886:	ec 01       	movw	r28, r24
    2888:	2b 81       	ldd	r18, Y+3	; 0x03
    288a:	20 ff       	sbrs	r18, 0
    288c:	33 c0       	rjmp	.+102    	; 0x28f4 <fgetc+0x72>
    288e:	26 ff       	sbrs	r18, 6
    2890:	0a c0       	rjmp	.+20     	; 0x28a6 <fgetc+0x24>
    2892:	2f 7b       	andi	r18, 0xBF	; 191
    2894:	2b 83       	std	Y+3, r18	; 0x03
    2896:	8e 81       	ldd	r24, Y+6	; 0x06
    2898:	9f 81       	ldd	r25, Y+7	; 0x07
    289a:	01 96       	adiw	r24, 0x01	; 1
    289c:	9f 83       	std	Y+7, r25	; 0x07
    289e:	8e 83       	std	Y+6, r24	; 0x06
    28a0:	8a 81       	ldd	r24, Y+2	; 0x02
    28a2:	90 e0       	ldi	r25, 0x00	; 0
    28a4:	29 c0       	rjmp	.+82     	; 0x28f8 <fgetc+0x76>
    28a6:	22 ff       	sbrs	r18, 2
    28a8:	0f c0       	rjmp	.+30     	; 0x28c8 <fgetc+0x46>
    28aa:	e8 81       	ld	r30, Y
    28ac:	f9 81       	ldd	r31, Y+1	; 0x01
    28ae:	80 81       	ld	r24, Z
    28b0:	08 2e       	mov	r0, r24
    28b2:	00 0c       	add	r0, r0
    28b4:	99 0b       	sbc	r25, r25
    28b6:	00 97       	sbiw	r24, 0x00	; 0
    28b8:	19 f4       	brne	.+6      	; 0x28c0 <fgetc+0x3e>
    28ba:	20 62       	ori	r18, 0x20	; 32
    28bc:	2b 83       	std	Y+3, r18	; 0x03
    28be:	1a c0       	rjmp	.+52     	; 0x28f4 <fgetc+0x72>
    28c0:	31 96       	adiw	r30, 0x01	; 1
    28c2:	f9 83       	std	Y+1, r31	; 0x01
    28c4:	e8 83       	st	Y, r30
    28c6:	0e c0       	rjmp	.+28     	; 0x28e4 <fgetc+0x62>
    28c8:	ea 85       	ldd	r30, Y+10	; 0x0a
    28ca:	fb 85       	ldd	r31, Y+11	; 0x0b
    28cc:	09 95       	icall
    28ce:	97 ff       	sbrs	r25, 7
    28d0:	09 c0       	rjmp	.+18     	; 0x28e4 <fgetc+0x62>
    28d2:	2b 81       	ldd	r18, Y+3	; 0x03
    28d4:	01 96       	adiw	r24, 0x01	; 1
    28d6:	11 f0       	breq	.+4      	; 0x28dc <fgetc+0x5a>
    28d8:	80 e2       	ldi	r24, 0x20	; 32
    28da:	01 c0       	rjmp	.+2      	; 0x28de <fgetc+0x5c>
    28dc:	80 e1       	ldi	r24, 0x10	; 16
    28de:	82 2b       	or	r24, r18
    28e0:	8b 83       	std	Y+3, r24	; 0x03
    28e2:	08 c0       	rjmp	.+16     	; 0x28f4 <fgetc+0x72>
    28e4:	2e 81       	ldd	r18, Y+6	; 0x06
    28e6:	3f 81       	ldd	r19, Y+7	; 0x07
    28e8:	2f 5f       	subi	r18, 0xFF	; 255
    28ea:	3f 4f       	sbci	r19, 0xFF	; 255
    28ec:	3f 83       	std	Y+7, r19	; 0x07
    28ee:	2e 83       	std	Y+6, r18	; 0x06
    28f0:	99 27       	eor	r25, r25
    28f2:	02 c0       	rjmp	.+4      	; 0x28f8 <fgetc+0x76>
    28f4:	8f ef       	ldi	r24, 0xFF	; 255
    28f6:	9f ef       	ldi	r25, 0xFF	; 255
    28f8:	df 91       	pop	r29
    28fa:	cf 91       	pop	r28
    28fc:	08 95       	ret

000028fe <ungetc>:
    28fe:	fb 01       	movw	r30, r22
    2900:	23 81       	ldd	r18, Z+3	; 0x03
    2902:	20 ff       	sbrs	r18, 0
    2904:	12 c0       	rjmp	.+36     	; 0x292a <ungetc+0x2c>
    2906:	26 fd       	sbrc	r18, 6
    2908:	10 c0       	rjmp	.+32     	; 0x292a <ungetc+0x2c>
    290a:	8f 3f       	cpi	r24, 0xFF	; 255
    290c:	3f ef       	ldi	r19, 0xFF	; 255
    290e:	93 07       	cpc	r25, r19
    2910:	61 f0       	breq	.+24     	; 0x292a <ungetc+0x2c>
    2912:	82 83       	std	Z+2, r24	; 0x02
    2914:	2f 7d       	andi	r18, 0xDF	; 223
    2916:	20 64       	ori	r18, 0x40	; 64
    2918:	23 83       	std	Z+3, r18	; 0x03
    291a:	26 81       	ldd	r18, Z+6	; 0x06
    291c:	37 81       	ldd	r19, Z+7	; 0x07
    291e:	21 50       	subi	r18, 0x01	; 1
    2920:	31 09       	sbc	r19, r1
    2922:	37 83       	std	Z+7, r19	; 0x07
    2924:	26 83       	std	Z+6, r18	; 0x06
    2926:	99 27       	eor	r25, r25
    2928:	08 95       	ret
    292a:	8f ef       	ldi	r24, 0xFF	; 255
    292c:	9f ef       	ldi	r25, 0xFF	; 255
    292e:	08 95       	ret

00002930 <__ctype_isfalse>:
    2930:	99 27       	eor	r25, r25
    2932:	88 27       	eor	r24, r24

00002934 <__ctype_istrue>:
    2934:	08 95       	ret

00002936 <eeprom_read_word>:
    2936:	a8 e1       	ldi	r26, 0x18	; 24
    2938:	b0 e0       	ldi	r27, 0x00	; 0
    293a:	42 e0       	ldi	r20, 0x02	; 2
    293c:	50 e0       	ldi	r21, 0x00	; 0
    293e:	0c 94 a8 14 	jmp	0x2950	; 0x2950 <eeprom_read_blraw>

00002942 <eeprom_write_word>:
    2942:	0e 94 b6 14 	call	0x296c	; 0x296c <eeprom_write_byte>
    2946:	27 2f       	mov	r18, r23
    2948:	0c 94 b7 14 	jmp	0x296e	; 0x296e <eeprom_write_r18>

0000294c <eeprom_read_block>:
    294c:	dc 01       	movw	r26, r24
    294e:	cb 01       	movw	r24, r22

00002950 <eeprom_read_blraw>:
    2950:	fc 01       	movw	r30, r24
    2952:	f9 99       	sbic	0x1f, 1	; 31
    2954:	fe cf       	rjmp	.-4      	; 0x2952 <eeprom_read_blraw+0x2>
    2956:	06 c0       	rjmp	.+12     	; 0x2964 <eeprom_read_blraw+0x14>
    2958:	f2 bd       	out	0x22, r31	; 34
    295a:	e1 bd       	out	0x21, r30	; 33
    295c:	f8 9a       	sbi	0x1f, 0	; 31
    295e:	31 96       	adiw	r30, 0x01	; 1
    2960:	00 b4       	in	r0, 0x20	; 32
    2962:	0d 92       	st	X+, r0
    2964:	41 50       	subi	r20, 0x01	; 1
    2966:	50 40       	sbci	r21, 0x00	; 0
    2968:	b8 f7       	brcc	.-18     	; 0x2958 <eeprom_read_blraw+0x8>
    296a:	08 95       	ret

0000296c <eeprom_write_byte>:
    296c:	26 2f       	mov	r18, r22

0000296e <eeprom_write_r18>:
    296e:	f9 99       	sbic	0x1f, 1	; 31
    2970:	fe cf       	rjmp	.-4      	; 0x296e <eeprom_write_r18>
    2972:	1f ba       	out	0x1f, r1	; 31
    2974:	92 bd       	out	0x22, r25	; 34
    2976:	81 bd       	out	0x21, r24	; 33
    2978:	20 bd       	out	0x20, r18	; 32
    297a:	0f b6       	in	r0, 0x3f	; 63
    297c:	f8 94       	cli
    297e:	fa 9a       	sbi	0x1f, 2	; 31
    2980:	f9 9a       	sbi	0x1f, 1	; 31
    2982:	0f be       	out	0x3f, r0	; 63
    2984:	01 96       	adiw	r24, 0x01	; 1
    2986:	08 95       	ret

00002988 <__prologue_saves__>:
    2988:	2f 92       	push	r2
    298a:	3f 92       	push	r3
    298c:	4f 92       	push	r4
    298e:	5f 92       	push	r5
    2990:	6f 92       	push	r6
    2992:	7f 92       	push	r7
    2994:	8f 92       	push	r8
    2996:	9f 92       	push	r9
    2998:	af 92       	push	r10
    299a:	bf 92       	push	r11
    299c:	cf 92       	push	r12
    299e:	df 92       	push	r13
    29a0:	ef 92       	push	r14
    29a2:	ff 92       	push	r15
    29a4:	0f 93       	push	r16
    29a6:	1f 93       	push	r17
    29a8:	cf 93       	push	r28
    29aa:	df 93       	push	r29
    29ac:	cd b7       	in	r28, 0x3d	; 61
    29ae:	de b7       	in	r29, 0x3e	; 62
    29b0:	ca 1b       	sub	r28, r26
    29b2:	db 0b       	sbc	r29, r27
    29b4:	0f b6       	in	r0, 0x3f	; 63
    29b6:	f8 94       	cli
    29b8:	de bf       	out	0x3e, r29	; 62
    29ba:	0f be       	out	0x3f, r0	; 63
    29bc:	cd bf       	out	0x3d, r28	; 61
    29be:	09 94       	ijmp

000029c0 <__epilogue_restores__>:
    29c0:	2a 88       	ldd	r2, Y+18	; 0x12
    29c2:	39 88       	ldd	r3, Y+17	; 0x11
    29c4:	48 88       	ldd	r4, Y+16	; 0x10
    29c6:	5f 84       	ldd	r5, Y+15	; 0x0f
    29c8:	6e 84       	ldd	r6, Y+14	; 0x0e
    29ca:	7d 84       	ldd	r7, Y+13	; 0x0d
    29cc:	8c 84       	ldd	r8, Y+12	; 0x0c
    29ce:	9b 84       	ldd	r9, Y+11	; 0x0b
    29d0:	aa 84       	ldd	r10, Y+10	; 0x0a
    29d2:	b9 84       	ldd	r11, Y+9	; 0x09
    29d4:	c8 84       	ldd	r12, Y+8	; 0x08
    29d6:	df 80       	ldd	r13, Y+7	; 0x07
    29d8:	ee 80       	ldd	r14, Y+6	; 0x06
    29da:	fd 80       	ldd	r15, Y+5	; 0x05
    29dc:	0c 81       	ldd	r16, Y+4	; 0x04
    29de:	1b 81       	ldd	r17, Y+3	; 0x03
    29e0:	aa 81       	ldd	r26, Y+2	; 0x02
    29e2:	b9 81       	ldd	r27, Y+1	; 0x01
    29e4:	ce 0f       	add	r28, r30
    29e6:	d1 1d       	adc	r29, r1
    29e8:	0f b6       	in	r0, 0x3f	; 63
    29ea:	f8 94       	cli
    29ec:	de bf       	out	0x3e, r29	; 62
    29ee:	0f be       	out	0x3f, r0	; 63
    29f0:	cd bf       	out	0x3d, r28	; 61
    29f2:	ed 01       	movw	r28, r26
    29f4:	08 95       	ret

000029f6 <_exit>:
    29f6:	f8 94       	cli

000029f8 <__stop_program>:
    29f8:	ff cf       	rjmp	.-2      	; 0x29f8 <__stop_program>
